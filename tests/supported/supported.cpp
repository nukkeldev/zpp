// This file was auto-generated by github:nukkeldev/zpp; I wouldn't recommend editing it.

#include <stdarg.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wformat-security"


extern "C" void ret_void__efeffba39ae7af53() {
	ret_void();
}
extern "C" void one_prim_ret_void__4a917f4659445867(int param1) {
	one_prim_ret_void(param1);
}
extern "C" void n_prim_ret_void__98e758a5c3431362(int param1, int param2, int param3) {
	n_prim_ret_void(param1, param2, param3);
}
extern "C" void one_prim_vararg_ret_void__5cabac90c72e4be6(int n, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, n);
	one_prim_vararg_ret_void(n);
	va_end(__ZPP_args);
}
extern "C" void one_ptr_ret_void__1f485662f262acb6(int* x) {
	one_ptr_ret_void(x);
}
extern "C" void one_const_ptr_ret_void__f558d7d0e16f5f16(const int* x) {
	one_const_ptr_ret_void(x);
}
extern "C" void one_ref_ret_void__b70024789e28fa38(int* x) {
	one_ref_ret_void(*x);
}
extern "C" void one_arr_ret_void__ee664445c8e6b67c(int color[4]) {
	one_arr_ret_void(color);
}
extern "C" void one_slice_ret_void__61d802eb13710e12(int color[]) {
	one_slice_ret_void(color);
}
extern "C" void one_prim_def_val_ret_void__62660cf3e033c789(int x) {
	one_prim_def_val_ret_void(x);
}
extern "C" int ret_prim__7b22e02c3234c677() {
	return ret_prim();
}
extern "C" void ret_pod__93c835f1e7091cf5(POD* zpp_out) {
	*zpp_out = ret_pod();
}
extern "C" void ret_struct__26cf40dc9ca765c1(Struct* zpp_out) {
	*zpp_out = ret_struct();
}
extern "C" Enum ret_enum__f2347161b8b19cf2() {
	return ret_enum();
}
extern "C" void ret_union__6b6da98868f815ae(Union* zpp_out) {
	*zpp_out = ret_union();
}
extern "C" int* ret_ptr__3d4bde5d4001f950() {
	return ret_ptr();
}
extern "C" const int* ret_const_ptr__d2471e1a9d1d29b2() {
	return ret_const_ptr();
}
extern "C" void one_prim_vararg_ret_struct__631eb1965d0ed24d(int s, Struct* zpp_out, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, zpp_out);
	*zpp_out = one_prim_vararg_ret_struct(s);
	va_end(__ZPP_args);
}
extern "C" int NS1_foo__1b03ba031047298e() {
	return NS1::foo();
}
extern "C" void NS1_bar__99b394cdf1430e0c(int baz) {
	NS1::bar(baz);
}
extern "C" int NS1_foo2__46d295638d55860f() {
	return NS1::foo2();
}
extern "C" void after_ns__7ff6830c2603e947() {
	after_ns();
}
extern "C" void lotsOfTypes__85c39383158c72ab(char c, signed char sc, unsigned char uc, short s, unsigned short us, int i, unsigned int ui, long l, unsigned long ul, long long ll, unsigned long long ull, float f, double d, long double ld, int slice[], int array[4], int (*func)(char, bool, unsigned short), int (**func_ptr)(char, bool, unsigned short)) {
	lotsOfTypes(c, sc, uc, s, us, i, ui, l, ul, ll, ull, f, d, ld, slice, array, func, func_ptr);
}

#pragma clang diagnostic pop