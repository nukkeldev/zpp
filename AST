anyzig: zig version '0.15.0-dev.1175+e4abdf5a1' pulled from 'D:\Development\Zig\zpp\build.zig.zon'
anyzig: appdata 'C:\Users\ethan\AppData\Local\anyzig'
anyzig: zig '0.15.0-dev.1175+e4abdf5a1' already exists at 'C:\Users\ethan\AppData\Local\zig\p\N-V-__8AAGYPxhTrVDN6enpINxWcd-EbWnpcLLJ4heoo_5SO'
<ImGuiID: TypedefDecl>
<ImS8: TypedefDecl>
<ImU8: TypedefDecl>
<ImS16: TypedefDecl>
<ImU16: TypedefDecl>
<ImS32: TypedefDecl>
<ImU32: TypedefDecl>
<ImS64: TypedefDecl>
<ImU64: TypedefDecl>
<ImDrawChannel: StructDecl>
<ImDrawCmd: StructDecl>
<ImDrawData: StructDecl>
<ImDrawList: StructDecl>
<ImDrawListSharedData: StructDecl>
<ImDrawListSplitter: StructDecl>
<ImDrawVert: StructDecl>
<ImFont: StructDecl>
<ImFontAtlas: StructDecl>
<ImFontAtlasBuilder: StructDecl>
<ImFontAtlasRect: StructDecl>
<ImFontBaked: StructDecl>
<ImFontConfig: StructDecl>
<ImFontGlyph: StructDecl>
<ImFontGlyphRangesBuilder: StructDecl>
<ImFontLoader: StructDecl>
<ImTextureData: StructDecl>
<ImTextureRect: StructDecl>
<ImColor: StructDecl>
<ImGuiContext: StructDecl>
<ImGuiIO: StructDecl>
<ImGuiInputTextCallbackData: StructDecl>
<ImGuiKeyData: StructDecl>
<ImGuiListClipper: StructDecl>
<ImGuiMultiSelectIO: StructDecl>
<ImGuiOnceUponAFrame: StructDecl>
<ImGuiPayload: StructDecl>
<ImGuiPlatformIO: StructDecl>
<ImGuiPlatformImeData: StructDecl>
<ImGuiSelectionBasicStorage: StructDecl>
<ImGuiSelectionExternalStorage: StructDecl>
<ImGuiSelectionRequest: StructDecl>
<ImGuiSizeCallbackData: StructDecl>
<ImGuiStorage: StructDecl>
<ImGuiStoragePair: StructDecl>
<ImGuiStyle: StructDecl>
<ImGuiTableSortSpecs: StructDecl>
<ImGuiTableColumnSortSpecs: StructDecl>
<ImGuiTextBuffer: StructDecl>
<ImGuiTextFilter: StructDecl>
<ImGuiViewport: StructDecl>
<ImGuiDir: EnumDecl>
<ImGuiKey: EnumDecl>
<ImGuiMouseSource: EnumDecl>
<ImGuiSortDirection: EnumDecl>
<ImGuiCol: TypedefDecl>
<ImGuiCond: TypedefDecl>
<ImGuiDataType: TypedefDecl>
<ImGuiMouseButton: TypedefDecl>
<ImGuiMouseCursor: TypedefDecl>
<ImGuiStyleVar: TypedefDecl>
<ImGuiTableBgTarget: TypedefDecl>
<ImDrawFlags: TypedefDecl>
<ImDrawListFlags: TypedefDecl>
<ImFontFlags: TypedefDecl>
<ImFontAtlasFlags: TypedefDecl>
<ImGuiBackendFlags: TypedefDecl>
<ImGuiButtonFlags: TypedefDecl>
<ImGuiChildFlags: TypedefDecl>
<ImGuiColorEditFlags: TypedefDecl>
<ImGuiConfigFlags: TypedefDecl>
<ImGuiComboFlags: TypedefDecl>
<ImGuiDragDropFlags: TypedefDecl>
<ImGuiFocusedFlags: TypedefDecl>
<ImGuiHoveredFlags: TypedefDecl>
<ImGuiInputFlags: TypedefDecl>
<ImGuiInputTextFlags: TypedefDecl>
<ImGuiItemFlags: TypedefDecl>
<ImGuiKeyChord: TypedefDecl>
<ImGuiPopupFlags: TypedefDecl>
<ImGuiMultiSelectFlags: TypedefDecl>
<ImGuiSelectableFlags: TypedefDecl>
<ImGuiSliderFlags: TypedefDecl>
<ImGuiTabBarFlags: TypedefDecl>
<ImGuiTabItemFlags: TypedefDecl>
<ImGuiTableFlags: TypedefDecl>
<ImGuiTableColumnFlags: TypedefDecl>
<ImGuiTableRowFlags: TypedefDecl>
<ImGuiTreeNodeFlags: TypedefDecl>
<ImGuiViewportFlags: TypedefDecl>
<ImGuiWindowFlags: TypedefDecl>
<ImWchar32: TypedefDecl>
<ImWchar16: TypedefDecl>
<ImWchar: TypedefDecl>
<ImGuiSelectionUserData: TypedefDecl>
<ImGuiInputTextCallback: TypedefDecl>
<ImGuiSizeCallback: TypedefDecl>
<ImGuiMemAllocFunc: TypedefDecl>
<ImGuiMemFreeFunc: TypedefDecl>
<ImVec2: StructDecl>
  <x: FieldDecl>
  <y: FieldDecl>
  <ImVec2: CXXConstructor>
  <ImVec2: CXXConstructor>
  <operator[]: CXXMethod>
  <operator[]: CXXMethod>
<ImVec4: StructDecl>
  <x: FieldDecl>
  <y: FieldDecl>
  <z: FieldDecl>
  <w: FieldDecl>
  <ImVec4: CXXConstructor>
  <ImVec4: CXXConstructor>
<ImTextureID: TypedefDecl>
<ImTextureRef: StructDecl>
  <ImTextureRef: CXXConstructor>
  <ImTextureRef: CXXConstructor>
  <GetTexID: CXXMethod>
  <_TexData: FieldDecl>
  <_TexID: FieldDecl>
<ImGui: Namespace>
  <CreateContext: FunctionDecl>
    <struct ImGuiContext: TypeRef>
    <shared_font_atlas: ParmDecl>
  <DestroyContext: FunctionDecl>
    <ctx: ParmDecl>
  <GetCurrentContext: FunctionDecl>
    <struct ImGuiContext: TypeRef>
  <SetCurrentContext: FunctionDecl>
    <ctx: ParmDecl>
  <GetIO: FunctionDecl>
    <struct ImGuiIO: TypeRef>
  <GetPlatformIO: FunctionDecl>
    <struct ImGuiPlatformIO: TypeRef>
  <GetStyle: FunctionDecl>
    <struct ImGuiStyle: TypeRef>
  <NewFrame: FunctionDecl>
  <EndFrame: FunctionDecl>
  <Render: FunctionDecl>
  <GetDrawData: FunctionDecl>
    <struct ImDrawData: TypeRef>
  <ShowDemoWindow: FunctionDecl>
    <p_open: ParmDecl>
  <ShowMetricsWindow: FunctionDecl>
    <p_open: ParmDecl>
  <ShowDebugLogWindow: FunctionDecl>
    <p_open: ParmDecl>
  <ShowIDStackToolWindow: FunctionDecl>
    <p_open: ParmDecl>
  <ShowAboutWindow: FunctionDecl>
    <p_open: ParmDecl>
  <ShowStyleEditor: FunctionDecl>
    <ref: ParmDecl>
  <ShowStyleSelector: FunctionDecl>
    <label: ParmDecl>
  <ShowFontSelector: FunctionDecl>
    <label: ParmDecl>
  <ShowUserGuide: FunctionDecl>
  <GetVersion: FunctionDecl>
  <StyleColorsDark: FunctionDecl>
    <dst: ParmDecl>
  <StyleColorsLight: FunctionDecl>
    <dst: ParmDecl>
  <StyleColorsClassic: FunctionDecl>
    <dst: ParmDecl>
  <Begin: FunctionDecl>
    <name: ParmDecl>
    <p_open: ParmDecl>
    <flags: ParmDecl>
  <End: FunctionDecl>
  <BeginChild: FunctionDecl>
    <str_id: ParmDecl>
    <size: ParmDecl>
    <child_flags: ParmDecl>
    <window_flags: ParmDecl>
  <BeginChild: FunctionDecl>
    <id: ParmDecl>
    <size: ParmDecl>
    <child_flags: ParmDecl>
    <window_flags: ParmDecl>
  <EndChild: FunctionDecl>
  <IsWindowAppearing: FunctionDecl>
  <IsWindowCollapsed: FunctionDecl>
  <IsWindowFocused: FunctionDecl>
    <flags: ParmDecl>
  <IsWindowHovered: FunctionDecl>
    <flags: ParmDecl>
  <GetWindowDrawList: FunctionDecl>
    <struct ImDrawList: TypeRef>
  <GetWindowPos: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetWindowSize: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetWindowWidth: FunctionDecl>
  <GetWindowHeight: FunctionDecl>
  <SetNextWindowPos: FunctionDecl>
    <pos: ParmDecl>
    <cond: ParmDecl>
    <pivot: ParmDecl>
  <SetNextWindowSize: FunctionDecl>
    <size: ParmDecl>
    <cond: ParmDecl>
  <SetNextWindowSizeConstraints: FunctionDecl>
    <size_min: ParmDecl>
    <size_max: ParmDecl>
    <custom_callback: ParmDecl>
    <custom_callback_data: ParmDecl>
  <SetNextWindowContentSize: FunctionDecl>
    <size: ParmDecl>
  <SetNextWindowCollapsed: FunctionDecl>
    <collapsed: ParmDecl>
    <cond: ParmDecl>
  <SetNextWindowFocus: FunctionDecl>
  <SetNextWindowScroll: FunctionDecl>
    <scroll: ParmDecl>
  <SetNextWindowBgAlpha: FunctionDecl>
    <alpha: ParmDecl>
  <SetWindowPos: FunctionDecl>
    <pos: ParmDecl>
    <cond: ParmDecl>
  <SetWindowSize: FunctionDecl>
    <size: ParmDecl>
    <cond: ParmDecl>
  <SetWindowCollapsed: FunctionDecl>
    <collapsed: ParmDecl>
    <cond: ParmDecl>
  <SetWindowFocus: FunctionDecl>
  <SetWindowPos: FunctionDecl>
    <name: ParmDecl>
    <pos: ParmDecl>
    <cond: ParmDecl>
  <SetWindowSize: FunctionDecl>
    <name: ParmDecl>
    <size: ParmDecl>
    <cond: ParmDecl>
  <SetWindowCollapsed: FunctionDecl>
    <name: ParmDecl>
    <collapsed: ParmDecl>
    <cond: ParmDecl>
  <SetWindowFocus: FunctionDecl>
    <name: ParmDecl>
  <GetScrollX: FunctionDecl>
  <GetScrollY: FunctionDecl>
  <SetScrollX: FunctionDecl>
    <scroll_x: ParmDecl>
  <SetScrollY: FunctionDecl>
    <scroll_y: ParmDecl>
  <GetScrollMaxX: FunctionDecl>
  <GetScrollMaxY: FunctionDecl>
  <SetScrollHereX: FunctionDecl>
    <center_x_ratio: ParmDecl>
  <SetScrollHereY: FunctionDecl>
    <center_y_ratio: ParmDecl>
  <SetScrollFromPosX: FunctionDecl>
    <local_x: ParmDecl>
    <center_x_ratio: ParmDecl>
  <SetScrollFromPosY: FunctionDecl>
    <local_y: ParmDecl>
    <center_y_ratio: ParmDecl>
  <PushFont: FunctionDecl>
    <font: ParmDecl>
    <font_size_base_unscaled: ParmDecl>
  <PopFont: FunctionDecl>
  <GetFont: FunctionDecl>
    <struct ImFont: TypeRef>
  <GetFontSize: FunctionDecl>
  <GetFontBaked: FunctionDecl>
    <struct ImFontBaked: TypeRef>
  <PushStyleColor: FunctionDecl>
    <idx: ParmDecl>
    <col: ParmDecl>
  <PushStyleColor: FunctionDecl>
    <idx: ParmDecl>
    <col: ParmDecl>
  <PopStyleColor: FunctionDecl>
    <count: ParmDecl>
  <PushStyleVar: FunctionDecl>
    <idx: ParmDecl>
    <val: ParmDecl>
  <PushStyleVar: FunctionDecl>
    <idx: ParmDecl>
    <val: ParmDecl>
  <PushStyleVarX: FunctionDecl>
    <idx: ParmDecl>
    <val_x: ParmDecl>
  <PushStyleVarY: FunctionDecl>
    <idx: ParmDecl>
    <val_y: ParmDecl>
  <PopStyleVar: FunctionDecl>
    <count: ParmDecl>
  <PushItemFlag: FunctionDecl>
    <option: ParmDecl>
    <enabled: ParmDecl>
  <PopItemFlag: FunctionDecl>
  <PushItemWidth: FunctionDecl>
    <item_width: ParmDecl>
  <PopItemWidth: FunctionDecl>
  <SetNextItemWidth: FunctionDecl>
    <item_width: ParmDecl>
  <CalcItemWidth: FunctionDecl>
  <PushTextWrapPos: FunctionDecl>
    <wrap_local_pos_x: ParmDecl>
  <PopTextWrapPos: FunctionDecl>
  <GetFontTexUvWhitePixel: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetColorU32: FunctionDecl>
    <ImU32: TypeRef>
    <idx: ParmDecl>
    <alpha_mul: ParmDecl>
  <GetColorU32: FunctionDecl>
    <ImU32: TypeRef>
    <col: ParmDecl>
  <GetColorU32: FunctionDecl>
    <ImU32: TypeRef>
    <col: ParmDecl>
    <alpha_mul: ParmDecl>
  <GetStyleColorVec4: FunctionDecl>
    <struct ImVec4: TypeRef>
    <idx: ParmDecl>
  <GetCursorScreenPos: FunctionDecl>
    <struct ImVec2: TypeRef>
  <SetCursorScreenPos: FunctionDecl>
    <pos: ParmDecl>
  <GetContentRegionAvail: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetCursorPos: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetCursorPosX: FunctionDecl>
  <GetCursorPosY: FunctionDecl>
  <SetCursorPos: FunctionDecl>
    <local_pos: ParmDecl>
  <SetCursorPosX: FunctionDecl>
    <local_x: ParmDecl>
  <SetCursorPosY: FunctionDecl>
    <local_y: ParmDecl>
  <GetCursorStartPos: FunctionDecl>
    <struct ImVec2: TypeRef>
  <Separator: FunctionDecl>
  <SameLine: FunctionDecl>
    <offset_from_start_x: ParmDecl>
    <spacing: ParmDecl>
  <NewLine: FunctionDecl>
  <Spacing: FunctionDecl>
  <Dummy: FunctionDecl>
    <size: ParmDecl>
  <Indent: FunctionDecl>
    <indent_w: ParmDecl>
  <Unindent: FunctionDecl>
    <indent_w: ParmDecl>
  <BeginGroup: FunctionDecl>
  <EndGroup: FunctionDecl>
  <AlignTextToFramePadding: FunctionDecl>
  <GetTextLineHeight: FunctionDecl>
  <GetTextLineHeightWithSpacing: FunctionDecl>
  <GetFrameHeight: FunctionDecl>
  <GetFrameHeightWithSpacing: FunctionDecl>
  <PushID: FunctionDecl>
    <str_id: ParmDecl>
  <PushID: FunctionDecl>
    <str_id_begin: ParmDecl>
    <str_id_end: ParmDecl>
  <PushID: FunctionDecl>
    <ptr_id: ParmDecl>
  <PushID: FunctionDecl>
    <int_id: ParmDecl>
  <PopID: FunctionDecl>
  <GetID: FunctionDecl>
    <ImGuiID: TypeRef>
    <str_id: ParmDecl>
  <GetID: FunctionDecl>
    <ImGuiID: TypeRef>
    <str_id_begin: ParmDecl>
    <str_id_end: ParmDecl>
  <GetID: FunctionDecl>
    <ImGuiID: TypeRef>
    <ptr_id: ParmDecl>
  <GetID: FunctionDecl>
    <ImGuiID: TypeRef>
    <int_id: ParmDecl>
  <TextUnformatted: FunctionDecl>
    <text: ParmDecl>
    <text_end: ParmDecl>
  <Text: FunctionDecl>
    <fmt: ParmDecl>
  <TextV: FunctionDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <TextColored: FunctionDecl>
    <col: ParmDecl>
    <fmt: ParmDecl>
  <TextColoredV: FunctionDecl>
    <col: ParmDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <TextDisabled: FunctionDecl>
    <fmt: ParmDecl>
  <TextDisabledV: FunctionDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <TextWrapped: FunctionDecl>
    <fmt: ParmDecl>
  <TextWrappedV: FunctionDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <LabelText: FunctionDecl>
    <label: ParmDecl>
    <fmt: ParmDecl>
  <LabelTextV: FunctionDecl>
    <label: ParmDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <BulletText: FunctionDecl>
    <fmt: ParmDecl>
  <BulletTextV: FunctionDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <SeparatorText: FunctionDecl>
    <label: ParmDecl>
  <Button: FunctionDecl>
    <label: ParmDecl>
    <size: ParmDecl>
  <SmallButton: FunctionDecl>
    <label: ParmDecl>
  <InvisibleButton: FunctionDecl>
    <str_id: ParmDecl>
    <size: ParmDecl>
    <flags: ParmDecl>
  <ArrowButton: FunctionDecl>
    <str_id: ParmDecl>
    <dir: ParmDecl>
  <Checkbox: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
  <CheckboxFlags: FunctionDecl>
    <label: ParmDecl>
    <flags: ParmDecl>
    <flags_value: ParmDecl>
  <CheckboxFlags: FunctionDecl>
    <label: ParmDecl>
    <flags: ParmDecl>
    <flags_value: ParmDecl>
  <RadioButton: FunctionDecl>
    <label: ParmDecl>
    <active: ParmDecl>
  <RadioButton: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_button: ParmDecl>
  <ProgressBar: FunctionDecl>
    <fraction: ParmDecl>
    <size_arg: ParmDecl>
    <overlay: ParmDecl>
  <Bullet: FunctionDecl>
  <TextLink: FunctionDecl>
    <label: ParmDecl>
  <TextLinkOpenURL: FunctionDecl>
    <label: ParmDecl>
    <url: ParmDecl>
  <Image: FunctionDecl>
    <tex_ref: ParmDecl>
    <image_size: ParmDecl>
    <uv0: ParmDecl>
    <uv1: ParmDecl>
  <ImageWithBg: FunctionDecl>
    <tex_ref: ParmDecl>
    <image_size: ParmDecl>
    <uv0: ParmDecl>
    <uv1: ParmDecl>
    <bg_col: ParmDecl>
    <tint_col: ParmDecl>
  <ImageButton: FunctionDecl>
    <str_id: ParmDecl>
    <tex_ref: ParmDecl>
    <image_size: ParmDecl>
    <uv0: ParmDecl>
    <uv1: ParmDecl>
    <bg_col: ParmDecl>
    <tint_col: ParmDecl>
  <BeginCombo: FunctionDecl>
    <label: ParmDecl>
    <preview_value: ParmDecl>
    <flags: ParmDecl>
  <EndCombo: FunctionDecl>
  <Combo: FunctionDecl>
    <label: ParmDecl>
    <current_item: ParmDecl>
    <items: ParmDecl>
    <items_count: ParmDecl>
    <popup_max_height_in_items: ParmDecl>
  <Combo: FunctionDecl>
    <label: ParmDecl>
    <current_item: ParmDecl>
    <items_separated_by_zeros: ParmDecl>
    <popup_max_height_in_items: ParmDecl>
  <Combo: FunctionDecl>
    <label: ParmDecl>
    <current_item: ParmDecl>
    <getter: ParmDecl>
    <user_data: ParmDecl>
    <items_count: ParmDecl>
    <popup_max_height_in_items: ParmDecl>
  <DragFloat: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragFloat2: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragFloat3: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragFloat4: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragFloatRange2: FunctionDecl>
    <label: ParmDecl>
    <v_current_min: ParmDecl>
    <v_current_max: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <format_max: ParmDecl>
    <flags: ParmDecl>
  <DragInt: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragInt2: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragInt3: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragInt4: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragIntRange2: FunctionDecl>
    <label: ParmDecl>
    <v_current_min: ParmDecl>
    <v_current_max: ParmDecl>
    <v_speed: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <format_max: ParmDecl>
    <flags: ParmDecl>
  <DragScalar: FunctionDecl>
    <label: ParmDecl>
    <data_type: ParmDecl>
    <p_data: ParmDecl>
    <v_speed: ParmDecl>
    <p_min: ParmDecl>
    <p_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <DragScalarN: FunctionDecl>
    <label: ParmDecl>
    <data_type: ParmDecl>
    <p_data: ParmDecl>
    <components: ParmDecl>
    <v_speed: ParmDecl>
    <p_min: ParmDecl>
    <p_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderFloat: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderFloat2: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderFloat3: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderFloat4: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderAngle: FunctionDecl>
    <label: ParmDecl>
    <v_rad: ParmDecl>
    <v_degrees_min: ParmDecl>
    <v_degrees_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderInt: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderInt2: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderInt3: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderInt4: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderScalar: FunctionDecl>
    <label: ParmDecl>
    <data_type: ParmDecl>
    <p_data: ParmDecl>
    <p_min: ParmDecl>
    <p_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <SliderScalarN: FunctionDecl>
    <label: ParmDecl>
    <data_type: ParmDecl>
    <p_data: ParmDecl>
    <components: ParmDecl>
    <p_min: ParmDecl>
    <p_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <VSliderFloat: FunctionDecl>
    <label: ParmDecl>
    <size: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <VSliderInt: FunctionDecl>
    <label: ParmDecl>
    <size: ParmDecl>
    <v: ParmDecl>
    <v_min: ParmDecl>
    <v_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <VSliderScalar: FunctionDecl>
    <label: ParmDecl>
    <size: ParmDecl>
    <data_type: ParmDecl>
    <p_data: ParmDecl>
    <p_min: ParmDecl>
    <p_max: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <InputText: FunctionDecl>
    <label: ParmDecl>
    <buf: ParmDecl>
    <buf_size: ParmDecl>
    <flags: ParmDecl>
    <callback: ParmDecl>
    <user_data: ParmDecl>
  <InputTextMultiline: FunctionDecl>
    <label: ParmDecl>
    <buf: ParmDecl>
    <buf_size: ParmDecl>
    <size: ParmDecl>
    <flags: ParmDecl>
    <callback: ParmDecl>
    <user_data: ParmDecl>
  <InputTextWithHint: FunctionDecl>
    <label: ParmDecl>
    <hint: ParmDecl>
    <buf: ParmDecl>
    <buf_size: ParmDecl>
    <flags: ParmDecl>
    <callback: ParmDecl>
    <user_data: ParmDecl>
  <InputFloat: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <step: ParmDecl>
    <step_fast: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <InputFloat2: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <InputFloat3: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <InputFloat4: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <InputInt: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <step: ParmDecl>
    <step_fast: ParmDecl>
    <flags: ParmDecl>
  <InputInt2: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <flags: ParmDecl>
  <InputInt3: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <flags: ParmDecl>
  <InputInt4: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <flags: ParmDecl>
  <InputDouble: FunctionDecl>
    <label: ParmDecl>
    <v: ParmDecl>
    <step: ParmDecl>
    <step_fast: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <InputScalar: FunctionDecl>
    <label: ParmDecl>
    <data_type: ParmDecl>
    <p_data: ParmDecl>
    <p_step: ParmDecl>
    <p_step_fast: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <InputScalarN: FunctionDecl>
    <label: ParmDecl>
    <data_type: ParmDecl>
    <p_data: ParmDecl>
    <components: ParmDecl>
    <p_step: ParmDecl>
    <p_step_fast: ParmDecl>
    <format: ParmDecl>
    <flags: ParmDecl>
  <ColorEdit3: FunctionDecl>
    <label: ParmDecl>
    <col: ParmDecl>
    <flags: ParmDecl>
  <ColorEdit4: FunctionDecl>
    <label: ParmDecl>
    <col: ParmDecl>
    <flags: ParmDecl>
  <ColorPicker3: FunctionDecl>
    <label: ParmDecl>
    <col: ParmDecl>
    <flags: ParmDecl>
  <ColorPicker4: FunctionDecl>
    <label: ParmDecl>
    <col: ParmDecl>
    <flags: ParmDecl>
    <ref_col: ParmDecl>
  <ColorButton: FunctionDecl>
    <desc_id: ParmDecl>
    <col: ParmDecl>
    <flags: ParmDecl>
    <size: ParmDecl>
  <SetColorEditOptions: FunctionDecl>
    <flags: ParmDecl>
  <TreeNode: FunctionDecl>
    <label: ParmDecl>
  <TreeNode: FunctionDecl>
    <str_id: ParmDecl>
    <fmt: ParmDecl>
  <TreeNode: FunctionDecl>
    <ptr_id: ParmDecl>
    <fmt: ParmDecl>
  <TreeNodeV: FunctionDecl>
    <str_id: ParmDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <TreeNodeV: FunctionDecl>
    <ptr_id: ParmDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <TreeNodeEx: FunctionDecl>
    <label: ParmDecl>
    <flags: ParmDecl>
  <TreeNodeEx: FunctionDecl>
    <str_id: ParmDecl>
    <flags: ParmDecl>
    <fmt: ParmDecl>
  <TreeNodeEx: FunctionDecl>
    <ptr_id: ParmDecl>
    <flags: ParmDecl>
    <fmt: ParmDecl>
  <TreeNodeExV: FunctionDecl>
    <str_id: ParmDecl>
    <flags: ParmDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <TreeNodeExV: FunctionDecl>
    <ptr_id: ParmDecl>
    <flags: ParmDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <TreePush: FunctionDecl>
    <str_id: ParmDecl>
  <TreePush: FunctionDecl>
    <ptr_id: ParmDecl>
  <TreePop: FunctionDecl>
  <GetTreeNodeToLabelSpacing: FunctionDecl>
  <CollapsingHeader: FunctionDecl>
    <label: ParmDecl>
    <flags: ParmDecl>
  <CollapsingHeader: FunctionDecl>
    <label: ParmDecl>
    <p_visible: ParmDecl>
    <flags: ParmDecl>
  <SetNextItemOpen: FunctionDecl>
    <is_open: ParmDecl>
    <cond: ParmDecl>
  <SetNextItemStorageID: FunctionDecl>
    <storage_id: ParmDecl>
  <Selectable: FunctionDecl>
    <label: ParmDecl>
    <selected: ParmDecl>
    <flags: ParmDecl>
    <size: ParmDecl>
  <Selectable: FunctionDecl>
    <label: ParmDecl>
    <p_selected: ParmDecl>
    <flags: ParmDecl>
    <size: ParmDecl>
  <BeginMultiSelect: FunctionDecl>
    <struct ImGuiMultiSelectIO: TypeRef>
    <flags: ParmDecl>
    <selection_size: ParmDecl>
    <items_count: ParmDecl>
  <EndMultiSelect: FunctionDecl>
    <struct ImGuiMultiSelectIO: TypeRef>
  <SetNextItemSelectionUserData: FunctionDecl>
    <selection_user_data: ParmDecl>
  <IsItemToggledSelection: FunctionDecl>
  <BeginListBox: FunctionDecl>
    <label: ParmDecl>
    <size: ParmDecl>
  <EndListBox: FunctionDecl>
  <ListBox: FunctionDecl>
    <label: ParmDecl>
    <current_item: ParmDecl>
    <items: ParmDecl>
    <items_count: ParmDecl>
    <height_in_items: ParmDecl>
  <ListBox: FunctionDecl>
    <label: ParmDecl>
    <current_item: ParmDecl>
    <getter: ParmDecl>
    <user_data: ParmDecl>
    <items_count: ParmDecl>
    <height_in_items: ParmDecl>
  <PlotLines: FunctionDecl>
    <label: ParmDecl>
    <values: ParmDecl>
    <values_count: ParmDecl>
    <values_offset: ParmDecl>
    <overlay_text: ParmDecl>
    <scale_min: ParmDecl>
    <scale_max: ParmDecl>
    <graph_size: ParmDecl>
    <stride: ParmDecl>
  <PlotLines: FunctionDecl>
    <label: ParmDecl>
    <values_getter: ParmDecl>
    <data: ParmDecl>
    <values_count: ParmDecl>
    <values_offset: ParmDecl>
    <overlay_text: ParmDecl>
    <scale_min: ParmDecl>
    <scale_max: ParmDecl>
    <graph_size: ParmDecl>
  <PlotHistogram: FunctionDecl>
    <label: ParmDecl>
    <values: ParmDecl>
    <values_count: ParmDecl>
    <values_offset: ParmDecl>
    <overlay_text: ParmDecl>
    <scale_min: ParmDecl>
    <scale_max: ParmDecl>
    <graph_size: ParmDecl>
    <stride: ParmDecl>
  <PlotHistogram: FunctionDecl>
    <label: ParmDecl>
    <values_getter: ParmDecl>
    <data: ParmDecl>
    <values_count: ParmDecl>
    <values_offset: ParmDecl>
    <overlay_text: ParmDecl>
    <scale_min: ParmDecl>
    <scale_max: ParmDecl>
    <graph_size: ParmDecl>
  <Value: FunctionDecl>
    <prefix: ParmDecl>
    <b: ParmDecl>
  <Value: FunctionDecl>
    <prefix: ParmDecl>
    <v: ParmDecl>
  <Value: FunctionDecl>
    <prefix: ParmDecl>
    <v: ParmDecl>
  <Value: FunctionDecl>
    <prefix: ParmDecl>
    <v: ParmDecl>
    <float_format: ParmDecl>
  <BeginMenuBar: FunctionDecl>
  <EndMenuBar: FunctionDecl>
  <BeginMainMenuBar: FunctionDecl>
  <EndMainMenuBar: FunctionDecl>
  <BeginMenu: FunctionDecl>
    <label: ParmDecl>
    <enabled: ParmDecl>
  <EndMenu: FunctionDecl>
  <MenuItem: FunctionDecl>
    <label: ParmDecl>
    <shortcut: ParmDecl>
    <selected: ParmDecl>
    <enabled: ParmDecl>
  <MenuItem: FunctionDecl>
    <label: ParmDecl>
    <shortcut: ParmDecl>
    <p_selected: ParmDecl>
    <enabled: ParmDecl>
  <BeginTooltip: FunctionDecl>
  <EndTooltip: FunctionDecl>
  <SetTooltip: FunctionDecl>
    <fmt: ParmDecl>
  <SetTooltipV: FunctionDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <BeginItemTooltip: FunctionDecl>
  <SetItemTooltip: FunctionDecl>
    <fmt: ParmDecl>
  <SetItemTooltipV: FunctionDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <BeginPopup: FunctionDecl>
    <str_id: ParmDecl>
    <flags: ParmDecl>
  <BeginPopupModal: FunctionDecl>
    <name: ParmDecl>
    <p_open: ParmDecl>
    <flags: ParmDecl>
  <EndPopup: FunctionDecl>
  <OpenPopup: FunctionDecl>
    <str_id: ParmDecl>
    <popup_flags: ParmDecl>
  <OpenPopup: FunctionDecl>
    <id: ParmDecl>
    <popup_flags: ParmDecl>
  <OpenPopupOnItemClick: FunctionDecl>
    <str_id: ParmDecl>
    <popup_flags: ParmDecl>
  <CloseCurrentPopup: FunctionDecl>
  <BeginPopupContextItem: FunctionDecl>
    <str_id: ParmDecl>
    <popup_flags: ParmDecl>
  <BeginPopupContextWindow: FunctionDecl>
    <str_id: ParmDecl>
    <popup_flags: ParmDecl>
  <BeginPopupContextVoid: FunctionDecl>
    <str_id: ParmDecl>
    <popup_flags: ParmDecl>
  <IsPopupOpen: FunctionDecl>
    <str_id: ParmDecl>
    <flags: ParmDecl>
  <BeginTable: FunctionDecl>
    <str_id: ParmDecl>
    <columns: ParmDecl>
    <flags: ParmDecl>
    <outer_size: ParmDecl>
    <inner_width: ParmDecl>
  <EndTable: FunctionDecl>
  <TableNextRow: FunctionDecl>
    <row_flags: ParmDecl>
    <min_row_height: ParmDecl>
  <TableNextColumn: FunctionDecl>
  <TableSetColumnIndex: FunctionDecl>
    <column_n: ParmDecl>
  <TableSetupColumn: FunctionDecl>
    <label: ParmDecl>
    <flags: ParmDecl>
    <init_width_or_weight: ParmDecl>
    <user_id: ParmDecl>
  <TableSetupScrollFreeze: FunctionDecl>
    <cols: ParmDecl>
    <rows: ParmDecl>
  <TableHeader: FunctionDecl>
    <label: ParmDecl>
  <TableHeadersRow: FunctionDecl>
  <TableAngledHeadersRow: FunctionDecl>
  <TableGetSortSpecs: FunctionDecl>
    <struct ImGuiTableSortSpecs: TypeRef>
  <TableGetColumnCount: FunctionDecl>
  <TableGetColumnIndex: FunctionDecl>
  <TableGetRowIndex: FunctionDecl>
  <TableGetColumnName: FunctionDecl>
    <column_n: ParmDecl>
  <TableGetColumnFlags: FunctionDecl>
    <ImGuiTableColumnFlags: TypeRef>
    <column_n: ParmDecl>
  <TableSetColumnEnabled: FunctionDecl>
    <column_n: ParmDecl>
    <v: ParmDecl>
  <TableGetHoveredColumn: FunctionDecl>
  <TableSetBgColor: FunctionDecl>
    <target: ParmDecl>
    <color: ParmDecl>
    <column_n: ParmDecl>
  <Columns: FunctionDecl>
    <count: ParmDecl>
    <id: ParmDecl>
    <borders: ParmDecl>
  <NextColumn: FunctionDecl>
  <GetColumnIndex: FunctionDecl>
  <GetColumnWidth: FunctionDecl>
    <column_index: ParmDecl>
  <SetColumnWidth: FunctionDecl>
    <column_index: ParmDecl>
    <width: ParmDecl>
  <GetColumnOffset: FunctionDecl>
    <column_index: ParmDecl>
  <SetColumnOffset: FunctionDecl>
    <column_index: ParmDecl>
    <offset_x: ParmDecl>
  <GetColumnsCount: FunctionDecl>
  <BeginTabBar: FunctionDecl>
    <str_id: ParmDecl>
    <flags: ParmDecl>
  <EndTabBar: FunctionDecl>
  <BeginTabItem: FunctionDecl>
    <label: ParmDecl>
    <p_open: ParmDecl>
    <flags: ParmDecl>
  <EndTabItem: FunctionDecl>
  <TabItemButton: FunctionDecl>
    <label: ParmDecl>
    <flags: ParmDecl>
  <SetTabItemClosed: FunctionDecl>
    <tab_or_docked_window_label: ParmDecl>
  <LogToTTY: FunctionDecl>
    <auto_open_depth: ParmDecl>
  <LogToFile: FunctionDecl>
    <auto_open_depth: ParmDecl>
    <filename: ParmDecl>
  <LogToClipboard: FunctionDecl>
    <auto_open_depth: ParmDecl>
  <LogFinish: FunctionDecl>
  <LogButtons: FunctionDecl>
  <LogText: FunctionDecl>
    <fmt: ParmDecl>
  <LogTextV: FunctionDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <BeginDragDropSource: FunctionDecl>
    <flags: ParmDecl>
  <SetDragDropPayload: FunctionDecl>
    <type: ParmDecl>
    <data: ParmDecl>
    <sz: ParmDecl>
    <cond: ParmDecl>
  <EndDragDropSource: FunctionDecl>
  <BeginDragDropTarget: FunctionDecl>
  <AcceptDragDropPayload: FunctionDecl>
    <struct ImGuiPayload: TypeRef>
    <type: ParmDecl>
    <flags: ParmDecl>
  <EndDragDropTarget: FunctionDecl>
  <GetDragDropPayload: FunctionDecl>
    <struct ImGuiPayload: TypeRef>
  <BeginDisabled: FunctionDecl>
    <disabled: ParmDecl>
  <EndDisabled: FunctionDecl>
  <PushClipRect: FunctionDecl>
    <clip_rect_min: ParmDecl>
    <clip_rect_max: ParmDecl>
    <intersect_with_current_clip_rect: ParmDecl>
  <PopClipRect: FunctionDecl>
  <SetItemDefaultFocus: FunctionDecl>
  <SetKeyboardFocusHere: FunctionDecl>
    <offset: ParmDecl>
  <SetNavCursorVisible: FunctionDecl>
    <visible: ParmDecl>
  <SetNextItemAllowOverlap: FunctionDecl>
  <IsItemHovered: FunctionDecl>
    <flags: ParmDecl>
  <IsItemActive: FunctionDecl>
  <IsItemFocused: FunctionDecl>
  <IsItemClicked: FunctionDecl>
    <mouse_button: ParmDecl>
  <IsItemVisible: FunctionDecl>
  <IsItemEdited: FunctionDecl>
  <IsItemActivated: FunctionDecl>
  <IsItemDeactivated: FunctionDecl>
  <IsItemDeactivatedAfterEdit: FunctionDecl>
  <IsItemToggledOpen: FunctionDecl>
  <IsAnyItemHovered: FunctionDecl>
  <IsAnyItemActive: FunctionDecl>
  <IsAnyItemFocused: FunctionDecl>
  <GetItemID: FunctionDecl>
    <ImGuiID: TypeRef>
  <GetItemRectMin: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetItemRectMax: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetItemRectSize: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetMainViewport: FunctionDecl>
    <struct ImGuiViewport: TypeRef>
  <GetBackgroundDrawList: FunctionDecl>
    <struct ImDrawList: TypeRef>
  <GetForegroundDrawList: FunctionDecl>
    <struct ImDrawList: TypeRef>
  <IsRectVisible: FunctionDecl>
    <size: ParmDecl>
  <IsRectVisible: FunctionDecl>
    <rect_min: ParmDecl>
    <rect_max: ParmDecl>
  <GetTime: FunctionDecl>
  <GetFrameCount: FunctionDecl>
  <GetDrawListSharedData: FunctionDecl>
    <struct ImDrawListSharedData: TypeRef>
  <GetStyleColorName: FunctionDecl>
    <idx: ParmDecl>
  <SetStateStorage: FunctionDecl>
    <storage: ParmDecl>
  <GetStateStorage: FunctionDecl>
    <struct ImGuiStorage: TypeRef>
  <CalcTextSize: FunctionDecl>
    <struct ImVec2: TypeRef>
    <text: ParmDecl>
    <text_end: ParmDecl>
    <hide_text_after_double_hash: ParmDecl>
    <wrap_width: ParmDecl>
  <ColorConvertU32ToFloat4: FunctionDecl>
    <struct ImVec4: TypeRef>
    <in: ParmDecl>
  <ColorConvertFloat4ToU32: FunctionDecl>
    <ImU32: TypeRef>
    <in: ParmDecl>
  <ColorConvertRGBtoHSV: FunctionDecl>
    <r: ParmDecl>
    <g: ParmDecl>
    <b: ParmDecl>
    <out_h: ParmDecl>
    <out_s: ParmDecl>
    <out_v: ParmDecl>
  <ColorConvertHSVtoRGB: FunctionDecl>
    <h: ParmDecl>
    <s: ParmDecl>
    <v: ParmDecl>
    <out_r: ParmDecl>
    <out_g: ParmDecl>
    <out_b: ParmDecl>
  <IsKeyDown: FunctionDecl>
    <key: ParmDecl>
  <IsKeyPressed: FunctionDecl>
    <key: ParmDecl>
    <repeat: ParmDecl>
  <IsKeyReleased: FunctionDecl>
    <key: ParmDecl>
  <IsKeyChordPressed: FunctionDecl>
    <key_chord: ParmDecl>
  <GetKeyPressedAmount: FunctionDecl>
    <key: ParmDecl>
    <repeat_delay: ParmDecl>
    <rate: ParmDecl>
  <GetKeyName: FunctionDecl>
    <key: ParmDecl>
  <SetNextFrameWantCaptureKeyboard: FunctionDecl>
    <want_capture_keyboard: ParmDecl>
  <Shortcut: FunctionDecl>
    <key_chord: ParmDecl>
    <flags: ParmDecl>
  <SetNextItemShortcut: FunctionDecl>
    <key_chord: ParmDecl>
    <flags: ParmDecl>
  <SetItemKeyOwner: FunctionDecl>
    <key: ParmDecl>
  <IsMouseDown: FunctionDecl>
    <button: ParmDecl>
  <IsMouseClicked: FunctionDecl>
    <button: ParmDecl>
    <repeat: ParmDecl>
  <IsMouseReleased: FunctionDecl>
    <button: ParmDecl>
  <IsMouseDoubleClicked: FunctionDecl>
    <button: ParmDecl>
  <IsMouseReleasedWithDelay: FunctionDecl>
    <button: ParmDecl>
    <delay: ParmDecl>
  <GetMouseClickedCount: FunctionDecl>
    <button: ParmDecl>
  <IsMouseHoveringRect: FunctionDecl>
    <r_min: ParmDecl>
    <r_max: ParmDecl>
    <clip: ParmDecl>
  <IsMousePosValid: FunctionDecl>
    <mouse_pos: ParmDecl>
  <IsAnyMouseDown: FunctionDecl>
  <GetMousePos: FunctionDecl>
    <struct ImVec2: TypeRef>
  <GetMousePosOnOpeningCurrentPopup: FunctionDecl>
    <struct ImVec2: TypeRef>
  <IsMouseDragging: FunctionDecl>
    <button: ParmDecl>
    <lock_threshold: ParmDecl>
  <GetMouseDragDelta: FunctionDecl>
    <struct ImVec2: TypeRef>
    <button: ParmDecl>
    <lock_threshold: ParmDecl>
  <ResetMouseDragDelta: FunctionDecl>
    <button: ParmDecl>
  <GetMouseCursor: FunctionDecl>
    <ImGuiMouseCursor: TypeRef>
  <SetMouseCursor: FunctionDecl>
    <cursor_type: ParmDecl>
  <SetNextFrameWantCaptureMouse: FunctionDecl>
    <want_capture_mouse: ParmDecl>
  <GetClipboardText: FunctionDecl>
  <SetClipboardText: FunctionDecl>
    <text: ParmDecl>
  <LoadIniSettingsFromDisk: FunctionDecl>
    <ini_filename: ParmDecl>
  <LoadIniSettingsFromMemory: FunctionDecl>
    <ini_data: ParmDecl>
    <ini_size: ParmDecl>
  <SaveIniSettingsToDisk: FunctionDecl>
    <ini_filename: ParmDecl>
  <SaveIniSettingsToMemory: FunctionDecl>
    <out_ini_size: ParmDecl>
  <DebugTextEncoding: FunctionDecl>
    <text: ParmDecl>
  <DebugFlashStyleColor: FunctionDecl>
    <idx: ParmDecl>
  <DebugStartItemPicker: FunctionDecl>
  <DebugCheckVersionAndDataLayout: FunctionDecl>
    <version_str: ParmDecl>
    <sz_io: ParmDecl>
    <sz_style: ParmDecl>
    <sz_vec2: ParmDecl>
    <sz_vec4: ParmDecl>
    <sz_drawvert: ParmDecl>
    <sz_drawidx: ParmDecl>
  <DebugLog: FunctionDecl>
    <fmt: ParmDecl>
  <DebugLogV: FunctionDecl>
    <fmt: ParmDecl>
    <args: ParmDecl>
  <SetAllocatorFunctions: FunctionDecl>
    <alloc_func: ParmDecl>
    <free_func: ParmDecl>
    <user_data: ParmDecl>
  <GetAllocatorFunctions: FunctionDecl>
    <p_alloc_func: ParmDecl>
    <p_free_func: ParmDecl>
    <p_user_data: ParmDecl>
  <MemAlloc: FunctionDecl>
    <size: ParmDecl>
  <MemFree: FunctionDecl>
    <ptr: ParmDecl>
<ImGuiWindowFlags_: EnumDecl>
  <ImGuiWindowFlags_None: EnumConstantDecl>
  <ImGuiWindowFlags_NoTitleBar: EnumConstantDecl>
  <ImGuiWindowFlags_NoResize: EnumConstantDecl>
  <ImGuiWindowFlags_NoMove: EnumConstantDecl>
  <ImGuiWindowFlags_NoScrollbar: EnumConstantDecl>
  <ImGuiWindowFlags_NoScrollWithMouse: EnumConstantDecl>
  <ImGuiWindowFlags_NoCollapse: EnumConstantDecl>
  <ImGuiWindowFlags_AlwaysAutoResize: EnumConstantDecl>
  <ImGuiWindowFlags_NoBackground: EnumConstantDecl>
  <ImGuiWindowFlags_NoSavedSettings: EnumConstantDecl>
  <ImGuiWindowFlags_NoMouseInputs: EnumConstantDecl>
  <ImGuiWindowFlags_MenuBar: EnumConstantDecl>
  <ImGuiWindowFlags_HorizontalScrollbar: EnumConstantDecl>
  <ImGuiWindowFlags_NoFocusOnAppearing: EnumConstantDecl>
  <ImGuiWindowFlags_NoBringToFrontOnFocus: EnumConstantDecl>
  <ImGuiWindowFlags_AlwaysVerticalScrollbar: EnumConstantDecl>
  <ImGuiWindowFlags_AlwaysHorizontalScrollbar: EnumConstantDecl>
  <ImGuiWindowFlags_NoNavInputs: EnumConstantDecl>
  <ImGuiWindowFlags_NoNavFocus: EnumConstantDecl>
  <ImGuiWindowFlags_UnsavedDocument: EnumConstantDecl>
  <ImGuiWindowFlags_NoNav: EnumConstantDecl>
  <ImGuiWindowFlags_NoDecoration: EnumConstantDecl>
  <ImGuiWindowFlags_NoInputs: EnumConstantDecl>
  <ImGuiWindowFlags_ChildWindow: EnumConstantDecl>
  <ImGuiWindowFlags_Tooltip: EnumConstantDecl>
  <ImGuiWindowFlags_Popup: EnumConstantDecl>
  <ImGuiWindowFlags_Modal: EnumConstantDecl>
  <ImGuiWindowFlags_ChildMenu: EnumConstantDecl>
<ImGuiChildFlags_: EnumDecl>
  <ImGuiChildFlags_None: EnumConstantDecl>
  <ImGuiChildFlags_Borders: EnumConstantDecl>
  <ImGuiChildFlags_AlwaysUseWindowPadding: EnumConstantDecl>
  <ImGuiChildFlags_ResizeX: EnumConstantDecl>
  <ImGuiChildFlags_ResizeY: EnumConstantDecl>
  <ImGuiChildFlags_AutoResizeX: EnumConstantDecl>
  <ImGuiChildFlags_AutoResizeY: EnumConstantDecl>
  <ImGuiChildFlags_AlwaysAutoResize: EnumConstantDecl>
  <ImGuiChildFlags_FrameStyle: EnumConstantDecl>
  <ImGuiChildFlags_NavFlattened: EnumConstantDecl>
<ImGuiItemFlags_: EnumDecl>
  <ImGuiItemFlags_None: EnumConstantDecl>
  <ImGuiItemFlags_NoTabStop: EnumConstantDecl>
  <ImGuiItemFlags_NoNav: EnumConstantDecl>
  <ImGuiItemFlags_NoNavDefaultFocus: EnumConstantDecl>
  <ImGuiItemFlags_ButtonRepeat: EnumConstantDecl>
  <ImGuiItemFlags_AutoClosePopups: EnumConstantDecl>
  <ImGuiItemFlags_AllowDuplicateId: EnumConstantDecl>
<ImGuiInputTextFlags_: EnumDecl>
  <ImGuiInputTextFlags_None: EnumConstantDecl>
  <ImGuiInputTextFlags_CharsDecimal: EnumConstantDecl>
  <ImGuiInputTextFlags_CharsHexadecimal: EnumConstantDecl>
  <ImGuiInputTextFlags_CharsScientific: EnumConstantDecl>
  <ImGuiInputTextFlags_CharsUppercase: EnumConstantDecl>
  <ImGuiInputTextFlags_CharsNoBlank: EnumConstantDecl>
  <ImGuiInputTextFlags_AllowTabInput: EnumConstantDecl>
  <ImGuiInputTextFlags_EnterReturnsTrue: EnumConstantDecl>
  <ImGuiInputTextFlags_EscapeClearsAll: EnumConstantDecl>
  <ImGuiInputTextFlags_CtrlEnterForNewLine: EnumConstantDecl>
  <ImGuiInputTextFlags_ReadOnly: EnumConstantDecl>
  <ImGuiInputTextFlags_Password: EnumConstantDecl>
  <ImGuiInputTextFlags_AlwaysOverwrite: EnumConstantDecl>
  <ImGuiInputTextFlags_AutoSelectAll: EnumConstantDecl>
  <ImGuiInputTextFlags_ParseEmptyRefVal: EnumConstantDecl>
  <ImGuiInputTextFlags_DisplayEmptyRefVal: EnumConstantDecl>
  <ImGuiInputTextFlags_NoHorizontalScroll: EnumConstantDecl>
  <ImGuiInputTextFlags_NoUndoRedo: EnumConstantDecl>
  <ImGuiInputTextFlags_ElideLeft: EnumConstantDecl>
  <ImGuiInputTextFlags_CallbackCompletion: EnumConstantDecl>
  <ImGuiInputTextFlags_CallbackHistory: EnumConstantDecl>
  <ImGuiInputTextFlags_CallbackAlways: EnumConstantDecl>
  <ImGuiInputTextFlags_CallbackCharFilter: EnumConstantDecl>
  <ImGuiInputTextFlags_CallbackResize: EnumConstantDecl>
  <ImGuiInputTextFlags_CallbackEdit: EnumConstantDecl>
<ImGuiTreeNodeFlags_: EnumDecl>
  <ImGuiTreeNodeFlags_None: EnumConstantDecl>
  <ImGuiTreeNodeFlags_Selected: EnumConstantDecl>
  <ImGuiTreeNodeFlags_Framed: EnumConstantDecl>
  <ImGuiTreeNodeFlags_AllowOverlap: EnumConstantDecl>
  <ImGuiTreeNodeFlags_NoTreePushOnOpen: EnumConstantDecl>
  <ImGuiTreeNodeFlags_NoAutoOpenOnLog: EnumConstantDecl>
  <ImGuiTreeNodeFlags_DefaultOpen: EnumConstantDecl>
  <ImGuiTreeNodeFlags_OpenOnDoubleClick: EnumConstantDecl>
  <ImGuiTreeNodeFlags_OpenOnArrow: EnumConstantDecl>
  <ImGuiTreeNodeFlags_Leaf: EnumConstantDecl>
  <ImGuiTreeNodeFlags_Bullet: EnumConstantDecl>
  <ImGuiTreeNodeFlags_FramePadding: EnumConstantDecl>
  <ImGuiTreeNodeFlags_SpanAvailWidth: EnumConstantDecl>
  <ImGuiTreeNodeFlags_SpanFullWidth: EnumConstantDecl>
  <ImGuiTreeNodeFlags_SpanLabelWidth: EnumConstantDecl>
  <ImGuiTreeNodeFlags_SpanAllColumns: EnumConstantDecl>
  <ImGuiTreeNodeFlags_LabelSpanAllColumns: EnumConstantDecl>
  <ImGuiTreeNodeFlags_NavLeftJumpsToParent: EnumConstantDecl>
  <ImGuiTreeNodeFlags_CollapsingHeader: EnumConstantDecl>
  <ImGuiTreeNodeFlags_DrawLinesNone: EnumConstantDecl>
  <ImGuiTreeNodeFlags_DrawLinesFull: EnumConstantDecl>
  <ImGuiTreeNodeFlags_DrawLinesToNodes: EnumConstantDecl>
<ImGuiPopupFlags_: EnumDecl>
  <ImGuiPopupFlags_None: EnumConstantDecl>
  <ImGuiPopupFlags_MouseButtonLeft: EnumConstantDecl>
  <ImGuiPopupFlags_MouseButtonRight: EnumConstantDecl>
  <ImGuiPopupFlags_MouseButtonMiddle: EnumConstantDecl>
  <ImGuiPopupFlags_MouseButtonMask_: EnumConstantDecl>
  <ImGuiPopupFlags_MouseButtonDefault_: EnumConstantDecl>
  <ImGuiPopupFlags_NoReopen: EnumConstantDecl>
  <ImGuiPopupFlags_NoOpenOverExistingPopup: EnumConstantDecl>
  <ImGuiPopupFlags_NoOpenOverItems: EnumConstantDecl>
  <ImGuiPopupFlags_AnyPopupId: EnumConstantDecl>
  <ImGuiPopupFlags_AnyPopupLevel: EnumConstantDecl>
  <ImGuiPopupFlags_AnyPopup: EnumConstantDecl>
<ImGuiSelectableFlags_: EnumDecl>
  <ImGuiSelectableFlags_None: EnumConstantDecl>
  <ImGuiSelectableFlags_NoAutoClosePopups: EnumConstantDecl>
  <ImGuiSelectableFlags_SpanAllColumns: EnumConstantDecl>
  <ImGuiSelectableFlags_AllowDoubleClick: EnumConstantDecl>
  <ImGuiSelectableFlags_Disabled: EnumConstantDecl>
  <ImGuiSelectableFlags_AllowOverlap: EnumConstantDecl>
  <ImGuiSelectableFlags_Highlight: EnumConstantDecl>
<ImGuiComboFlags_: EnumDecl>
  <ImGuiComboFlags_None: EnumConstantDecl>
  <ImGuiComboFlags_PopupAlignLeft: EnumConstantDecl>
  <ImGuiComboFlags_HeightSmall: EnumConstantDecl>
  <ImGuiComboFlags_HeightRegular: EnumConstantDecl>
  <ImGuiComboFlags_HeightLarge: EnumConstantDecl>
  <ImGuiComboFlags_HeightLargest: EnumConstantDecl>
  <ImGuiComboFlags_NoArrowButton: EnumConstantDecl>
  <ImGuiComboFlags_NoPreview: EnumConstantDecl>
  <ImGuiComboFlags_WidthFitPreview: EnumConstantDecl>
  <ImGuiComboFlags_HeightMask_: EnumConstantDecl>
<ImGuiTabBarFlags_: EnumDecl>
  <ImGuiTabBarFlags_None: EnumConstantDecl>
  <ImGuiTabBarFlags_Reorderable: EnumConstantDecl>
  <ImGuiTabBarFlags_AutoSelectNewTabs: EnumConstantDecl>
  <ImGuiTabBarFlags_TabListPopupButton: EnumConstantDecl>
  <ImGuiTabBarFlags_NoCloseWithMiddleMouseButton: EnumConstantDecl>
  <ImGuiTabBarFlags_NoTabListScrollingButtons: EnumConstantDecl>
  <ImGuiTabBarFlags_NoTooltip: EnumConstantDecl>
  <ImGuiTabBarFlags_DrawSelectedOverline: EnumConstantDecl>
  <ImGuiTabBarFlags_FittingPolicyResizeDown: EnumConstantDecl>
  <ImGuiTabBarFlags_FittingPolicyScroll: EnumConstantDecl>
  <ImGuiTabBarFlags_FittingPolicyMask_: EnumConstantDecl>
  <ImGuiTabBarFlags_FittingPolicyDefault_: EnumConstantDecl>
<ImGuiTabItemFlags_: EnumDecl>
  <ImGuiTabItemFlags_None: EnumConstantDecl>
  <ImGuiTabItemFlags_UnsavedDocument: EnumConstantDecl>
  <ImGuiTabItemFlags_SetSelected: EnumConstantDecl>
  <ImGuiTabItemFlags_NoCloseWithMiddleMouseButton: EnumConstantDecl>
  <ImGuiTabItemFlags_NoPushId: EnumConstantDecl>
  <ImGuiTabItemFlags_NoTooltip: EnumConstantDecl>
  <ImGuiTabItemFlags_NoReorder: EnumConstantDecl>
  <ImGuiTabItemFlags_Leading: EnumConstantDecl>
  <ImGuiTabItemFlags_Trailing: EnumConstantDecl>
  <ImGuiTabItemFlags_NoAssumedClosure: EnumConstantDecl>
<ImGuiFocusedFlags_: EnumDecl>
  <ImGuiFocusedFlags_None: EnumConstantDecl>
  <ImGuiFocusedFlags_ChildWindows: EnumConstantDecl>
  <ImGuiFocusedFlags_RootWindow: EnumConstantDecl>
  <ImGuiFocusedFlags_AnyWindow: EnumConstantDecl>
  <ImGuiFocusedFlags_NoPopupHierarchy: EnumConstantDecl>
  <ImGuiFocusedFlags_RootAndChildWindows: EnumConstantDecl>
<ImGuiHoveredFlags_: EnumDecl>
  <ImGuiHoveredFlags_None: EnumConstantDecl>
  <ImGuiHoveredFlags_ChildWindows: EnumConstantDecl>
  <ImGuiHoveredFlags_RootWindow: EnumConstantDecl>
  <ImGuiHoveredFlags_AnyWindow: EnumConstantDecl>
  <ImGuiHoveredFlags_NoPopupHierarchy: EnumConstantDecl>
  <ImGuiHoveredFlags_AllowWhenBlockedByPopup: EnumConstantDecl>
  <ImGuiHoveredFlags_AllowWhenBlockedByActiveItem: EnumConstantDecl>
  <ImGuiHoveredFlags_AllowWhenOverlappedByItem: EnumConstantDecl>
  <ImGuiHoveredFlags_AllowWhenOverlappedByWindow: EnumConstantDecl>
  <ImGuiHoveredFlags_AllowWhenDisabled: EnumConstantDecl>
  <ImGuiHoveredFlags_NoNavOverride: EnumConstantDecl>
  <ImGuiHoveredFlags_AllowWhenOverlapped: EnumConstantDecl>
  <ImGuiHoveredFlags_RectOnly: EnumConstantDecl>
  <ImGuiHoveredFlags_RootAndChildWindows: EnumConstantDecl>
  <ImGuiHoveredFlags_ForTooltip: EnumConstantDecl>
  <ImGuiHoveredFlags_Stationary: EnumConstantDecl>
  <ImGuiHoveredFlags_DelayNone: EnumConstantDecl>
  <ImGuiHoveredFlags_DelayShort: EnumConstantDecl>
  <ImGuiHoveredFlags_DelayNormal: EnumConstantDecl>
  <ImGuiHoveredFlags_NoSharedDelay: EnumConstantDecl>
<ImGuiDragDropFlags_: EnumDecl>
  <ImGuiDragDropFlags_None: EnumConstantDecl>
  <ImGuiDragDropFlags_SourceNoPreviewTooltip: EnumConstantDecl>
  <ImGuiDragDropFlags_SourceNoDisableHover: EnumConstantDecl>
  <ImGuiDragDropFlags_SourceNoHoldToOpenOthers: EnumConstantDecl>
  <ImGuiDragDropFlags_SourceAllowNullID: EnumConstantDecl>
  <ImGuiDragDropFlags_SourceExtern: EnumConstantDecl>
  <ImGuiDragDropFlags_PayloadAutoExpire: EnumConstantDecl>
  <ImGuiDragDropFlags_PayloadNoCrossContext: EnumConstantDecl>
  <ImGuiDragDropFlags_PayloadNoCrossProcess: EnumConstantDecl>
  <ImGuiDragDropFlags_AcceptBeforeDelivery: EnumConstantDecl>
  <ImGuiDragDropFlags_AcceptNoDrawDefaultRect: EnumConstantDecl>
  <ImGuiDragDropFlags_AcceptNoPreviewTooltip: EnumConstantDecl>
  <ImGuiDragDropFlags_AcceptPeekOnly: EnumConstantDecl>
<ImGuiDataType_: EnumDecl>
  <ImGuiDataType_S8: EnumConstantDecl>
  <ImGuiDataType_U8: EnumConstantDecl>
  <ImGuiDataType_S16: EnumConstantDecl>
  <ImGuiDataType_U16: EnumConstantDecl>
  <ImGuiDataType_S32: EnumConstantDecl>
  <ImGuiDataType_U32: EnumConstantDecl>
  <ImGuiDataType_S64: EnumConstantDecl>
  <ImGuiDataType_U64: EnumConstantDecl>
  <ImGuiDataType_Float: EnumConstantDecl>
  <ImGuiDataType_Double: EnumConstantDecl>
  <ImGuiDataType_Bool: EnumConstantDecl>
  <ImGuiDataType_String: EnumConstantDecl>
  <ImGuiDataType_COUNT: EnumConstantDecl>
<ImGuiDir: EnumDecl>
  <ImGuiDir_None: EnumConstantDecl>
  <ImGuiDir_Left: EnumConstantDecl>
  <ImGuiDir_Right: EnumConstantDecl>
  <ImGuiDir_Up: EnumConstantDecl>
  <ImGuiDir_Down: EnumConstantDecl>
  <ImGuiDir_COUNT: EnumConstantDecl>
<ImGuiSortDirection: EnumDecl>
  <ImGuiSortDirection_None: EnumConstantDecl>
  <ImGuiSortDirection_Ascending: EnumConstantDecl>
  <ImGuiSortDirection_Descending: EnumConstantDecl>
<ImGuiKey: EnumDecl>
  <ImGuiKey_None: EnumConstantDecl>
  <ImGuiKey_NamedKey_BEGIN: EnumConstantDecl>
  <ImGuiKey_Tab: EnumConstantDecl>
  <ImGuiKey_LeftArrow: EnumConstantDecl>
  <ImGuiKey_RightArrow: EnumConstantDecl>
  <ImGuiKey_UpArrow: EnumConstantDecl>
  <ImGuiKey_DownArrow: EnumConstantDecl>
  <ImGuiKey_PageUp: EnumConstantDecl>
  <ImGuiKey_PageDown: EnumConstantDecl>
  <ImGuiKey_Home: EnumConstantDecl>
  <ImGuiKey_End: EnumConstantDecl>
  <ImGuiKey_Insert: EnumConstantDecl>
  <ImGuiKey_Delete: EnumConstantDecl>
  <ImGuiKey_Backspace: EnumConstantDecl>
  <ImGuiKey_Space: EnumConstantDecl>
  <ImGuiKey_Enter: EnumConstantDecl>
  <ImGuiKey_Escape: EnumConstantDecl>
  <ImGuiKey_LeftCtrl: EnumConstantDecl>
  <ImGuiKey_LeftShift: EnumConstantDecl>
  <ImGuiKey_LeftAlt: EnumConstantDecl>
  <ImGuiKey_LeftSuper: EnumConstantDecl>
  <ImGuiKey_RightCtrl: EnumConstantDecl>
  <ImGuiKey_RightShift: EnumConstantDecl>
  <ImGuiKey_RightAlt: EnumConstantDecl>
  <ImGuiKey_RightSuper: EnumConstantDecl>
  <ImGuiKey_Menu: EnumConstantDecl>
  <ImGuiKey_0: EnumConstantDecl>
  <ImGuiKey_1: EnumConstantDecl>
  <ImGuiKey_2: EnumConstantDecl>
  <ImGuiKey_3: EnumConstantDecl>
  <ImGuiKey_4: EnumConstantDecl>
  <ImGuiKey_5: EnumConstantDecl>
  <ImGuiKey_6: EnumConstantDecl>
  <ImGuiKey_7: EnumConstantDecl>
  <ImGuiKey_8: EnumConstantDecl>
  <ImGuiKey_9: EnumConstantDecl>
  <ImGuiKey_A: EnumConstantDecl>
  <ImGuiKey_B: EnumConstantDecl>
  <ImGuiKey_C: EnumConstantDecl>
  <ImGuiKey_D: EnumConstantDecl>
  <ImGuiKey_E: EnumConstantDecl>
  <ImGuiKey_F: EnumConstantDecl>
  <ImGuiKey_G: EnumConstantDecl>
  <ImGuiKey_H: EnumConstantDecl>
  <ImGuiKey_I: EnumConstantDecl>
  <ImGuiKey_J: EnumConstantDecl>
  <ImGuiKey_K: EnumConstantDecl>
  <ImGuiKey_L: EnumConstantDecl>
  <ImGuiKey_M: EnumConstantDecl>
  <ImGuiKey_N: EnumConstantDecl>
  <ImGuiKey_O: EnumConstantDecl>
  <ImGuiKey_P: EnumConstantDecl>
  <ImGuiKey_Q: EnumConstantDecl>
  <ImGuiKey_R: EnumConstantDecl>
  <ImGuiKey_S: EnumConstantDecl>
  <ImGuiKey_T: EnumConstantDecl>
  <ImGuiKey_U: EnumConstantDecl>
  <ImGuiKey_V: EnumConstantDecl>
  <ImGuiKey_W: EnumConstantDecl>
  <ImGuiKey_X: EnumConstantDecl>
  <ImGuiKey_Y: EnumConstantDecl>
  <ImGuiKey_Z: EnumConstantDecl>
  <ImGuiKey_F1: EnumConstantDecl>
  <ImGuiKey_F2: EnumConstantDecl>
  <ImGuiKey_F3: EnumConstantDecl>
  <ImGuiKey_F4: EnumConstantDecl>
  <ImGuiKey_F5: EnumConstantDecl>
  <ImGuiKey_F6: EnumConstantDecl>
  <ImGuiKey_F7: EnumConstantDecl>
  <ImGuiKey_F8: EnumConstantDecl>
  <ImGuiKey_F9: EnumConstantDecl>
  <ImGuiKey_F10: EnumConstantDecl>
  <ImGuiKey_F11: EnumConstantDecl>
  <ImGuiKey_F12: EnumConstantDecl>
  <ImGuiKey_F13: EnumConstantDecl>
  <ImGuiKey_F14: EnumConstantDecl>
  <ImGuiKey_F15: EnumConstantDecl>
  <ImGuiKey_F16: EnumConstantDecl>
  <ImGuiKey_F17: EnumConstantDecl>
  <ImGuiKey_F18: EnumConstantDecl>
  <ImGuiKey_F19: EnumConstantDecl>
  <ImGuiKey_F20: EnumConstantDecl>
  <ImGuiKey_F21: EnumConstantDecl>
  <ImGuiKey_F22: EnumConstantDecl>
  <ImGuiKey_F23: EnumConstantDecl>
  <ImGuiKey_F24: EnumConstantDecl>
  <ImGuiKey_Apostrophe: EnumConstantDecl>
  <ImGuiKey_Comma: EnumConstantDecl>
  <ImGuiKey_Minus: EnumConstantDecl>
  <ImGuiKey_Period: EnumConstantDecl>
  <ImGuiKey_Slash: EnumConstantDecl>
  <ImGuiKey_Semicolon: EnumConstantDecl>
  <ImGuiKey_Equal: EnumConstantDecl>
  <ImGuiKey_LeftBracket: EnumConstantDecl>
  <ImGuiKey_Backslash: EnumConstantDecl>
  <ImGuiKey_RightBracket: EnumConstantDecl>
  <ImGuiKey_GraveAccent: EnumConstantDecl>
  <ImGuiKey_CapsLock: EnumConstantDecl>
  <ImGuiKey_ScrollLock: EnumConstantDecl>
  <ImGuiKey_NumLock: EnumConstantDecl>
  <ImGuiKey_PrintScreen: EnumConstantDecl>
  <ImGuiKey_Pause: EnumConstantDecl>
  <ImGuiKey_Keypad0: EnumConstantDecl>
  <ImGuiKey_Keypad1: EnumConstantDecl>
  <ImGuiKey_Keypad2: EnumConstantDecl>
  <ImGuiKey_Keypad3: EnumConstantDecl>
  <ImGuiKey_Keypad4: EnumConstantDecl>
  <ImGuiKey_Keypad5: EnumConstantDecl>
  <ImGuiKey_Keypad6: EnumConstantDecl>
  <ImGuiKey_Keypad7: EnumConstantDecl>
  <ImGuiKey_Keypad8: EnumConstantDecl>
  <ImGuiKey_Keypad9: EnumConstantDecl>
  <ImGuiKey_KeypadDecimal: EnumConstantDecl>
  <ImGuiKey_KeypadDivide: EnumConstantDecl>
  <ImGuiKey_KeypadMultiply: EnumConstantDecl>
  <ImGuiKey_KeypadSubtract: EnumConstantDecl>
  <ImGuiKey_KeypadAdd: EnumConstantDecl>
  <ImGuiKey_KeypadEnter: EnumConstantDecl>
  <ImGuiKey_KeypadEqual: EnumConstantDecl>
  <ImGuiKey_AppBack: EnumConstantDecl>
  <ImGuiKey_AppForward: EnumConstantDecl>
  <ImGuiKey_Oem102: EnumConstantDecl>
  <ImGuiKey_GamepadStart: EnumConstantDecl>
  <ImGuiKey_GamepadBack: EnumConstantDecl>
  <ImGuiKey_GamepadFaceLeft: EnumConstantDecl>
  <ImGuiKey_GamepadFaceRight: EnumConstantDecl>
  <ImGuiKey_GamepadFaceUp: EnumConstantDecl>
  <ImGuiKey_GamepadFaceDown: EnumConstantDecl>
  <ImGuiKey_GamepadDpadLeft: EnumConstantDecl>
  <ImGuiKey_GamepadDpadRight: EnumConstantDecl>
  <ImGuiKey_GamepadDpadUp: EnumConstantDecl>
  <ImGuiKey_GamepadDpadDown: EnumConstantDecl>
  <ImGuiKey_GamepadL1: EnumConstantDecl>
  <ImGuiKey_GamepadR1: EnumConstantDecl>
  <ImGuiKey_GamepadL2: EnumConstantDecl>
  <ImGuiKey_GamepadR2: EnumConstantDecl>
  <ImGuiKey_GamepadL3: EnumConstantDecl>
  <ImGuiKey_GamepadR3: EnumConstantDecl>
  <ImGuiKey_GamepadLStickLeft: EnumConstantDecl>
  <ImGuiKey_GamepadLStickRight: EnumConstantDecl>
  <ImGuiKey_GamepadLStickUp: EnumConstantDecl>
  <ImGuiKey_GamepadLStickDown: EnumConstantDecl>
  <ImGuiKey_GamepadRStickLeft: EnumConstantDecl>
  <ImGuiKey_GamepadRStickRight: EnumConstantDecl>
  <ImGuiKey_GamepadRStickUp: EnumConstantDecl>
  <ImGuiKey_GamepadRStickDown: EnumConstantDecl>
  <ImGuiKey_MouseLeft: EnumConstantDecl>
  <ImGuiKey_MouseRight: EnumConstantDecl>
  <ImGuiKey_MouseMiddle: EnumConstantDecl>
  <ImGuiKey_MouseX1: EnumConstantDecl>
  <ImGuiKey_MouseX2: EnumConstantDecl>
  <ImGuiKey_MouseWheelX: EnumConstantDecl>
  <ImGuiKey_MouseWheelY: EnumConstantDecl>
  <ImGuiKey_ReservedForModCtrl: EnumConstantDecl>
  <ImGuiKey_ReservedForModShift: EnumConstantDecl>
  <ImGuiKey_ReservedForModAlt: EnumConstantDecl>
  <ImGuiKey_ReservedForModSuper: EnumConstantDecl>
  <ImGuiKey_NamedKey_END: EnumConstantDecl>
  <ImGuiKey_NamedKey_COUNT: EnumConstantDecl>
  <ImGuiMod_None: EnumConstantDecl>
  <ImGuiMod_Ctrl: EnumConstantDecl>
  <ImGuiMod_Shift: EnumConstantDecl>
  <ImGuiMod_Alt: EnumConstantDecl>
  <ImGuiMod_Super: EnumConstantDecl>
  <ImGuiMod_Mask_: EnumConstantDecl>
<ImGuiInputFlags_: EnumDecl>
  <ImGuiInputFlags_None: EnumConstantDecl>
  <ImGuiInputFlags_Repeat: EnumConstantDecl>
  <ImGuiInputFlags_RouteActive: EnumConstantDecl>
  <ImGuiInputFlags_RouteFocused: EnumConstantDecl>
  <ImGuiInputFlags_RouteGlobal: EnumConstantDecl>
  <ImGuiInputFlags_RouteAlways: EnumConstantDecl>
  <ImGuiInputFlags_RouteOverFocused: EnumConstantDecl>
  <ImGuiInputFlags_RouteOverActive: EnumConstantDecl>
  <ImGuiInputFlags_RouteUnlessBgFocused: EnumConstantDecl>
  <ImGuiInputFlags_RouteFromRootWindow: EnumConstantDecl>
  <ImGuiInputFlags_Tooltip: EnumConstantDecl>
<ImGuiConfigFlags_: EnumDecl>
  <ImGuiConfigFlags_None: EnumConstantDecl>
  <ImGuiConfigFlags_NavEnableKeyboard: EnumConstantDecl>
  <ImGuiConfigFlags_NavEnableGamepad: EnumConstantDecl>
  <ImGuiConfigFlags_NoMouse: EnumConstantDecl>
  <ImGuiConfigFlags_NoMouseCursorChange: EnumConstantDecl>
  <ImGuiConfigFlags_NoKeyboard: EnumConstantDecl>
  <ImGuiConfigFlags_IsSRGB: EnumConstantDecl>
  <ImGuiConfigFlags_IsTouchScreen: EnumConstantDecl>
<ImGuiBackendFlags_: EnumDecl>
  <ImGuiBackendFlags_None: EnumConstantDecl>
  <ImGuiBackendFlags_HasGamepad: EnumConstantDecl>
  <ImGuiBackendFlags_HasMouseCursors: EnumConstantDecl>
  <ImGuiBackendFlags_HasSetMousePos: EnumConstantDecl>
  <ImGuiBackendFlags_RendererHasVtxOffset: EnumConstantDecl>
  <ImGuiBackendFlags_RendererHasTextures: EnumConstantDecl>
<ImGuiCol_: EnumDecl>
  <ImGuiCol_Text: EnumConstantDecl>
  <ImGuiCol_TextDisabled: EnumConstantDecl>
  <ImGuiCol_WindowBg: EnumConstantDecl>
  <ImGuiCol_ChildBg: EnumConstantDecl>
  <ImGuiCol_PopupBg: EnumConstantDecl>
  <ImGuiCol_Border: EnumConstantDecl>
  <ImGuiCol_BorderShadow: EnumConstantDecl>
  <ImGuiCol_FrameBg: EnumConstantDecl>
  <ImGuiCol_FrameBgHovered: EnumConstantDecl>
  <ImGuiCol_FrameBgActive: EnumConstantDecl>
  <ImGuiCol_TitleBg: EnumConstantDecl>
  <ImGuiCol_TitleBgActive: EnumConstantDecl>
  <ImGuiCol_TitleBgCollapsed: EnumConstantDecl>
  <ImGuiCol_MenuBarBg: EnumConstantDecl>
  <ImGuiCol_ScrollbarBg: EnumConstantDecl>
  <ImGuiCol_ScrollbarGrab: EnumConstantDecl>
  <ImGuiCol_ScrollbarGrabHovered: EnumConstantDecl>
  <ImGuiCol_ScrollbarGrabActive: EnumConstantDecl>
  <ImGuiCol_CheckMark: EnumConstantDecl>
  <ImGuiCol_SliderGrab: EnumConstantDecl>
  <ImGuiCol_SliderGrabActive: EnumConstantDecl>
  <ImGuiCol_Button: EnumConstantDecl>
  <ImGuiCol_ButtonHovered: EnumConstantDecl>
  <ImGuiCol_ButtonActive: EnumConstantDecl>
  <ImGuiCol_Header: EnumConstantDecl>
  <ImGuiCol_HeaderHovered: EnumConstantDecl>
  <ImGuiCol_HeaderActive: EnumConstantDecl>
  <ImGuiCol_Separator: EnumConstantDecl>
  <ImGuiCol_SeparatorHovered: EnumConstantDecl>
  <ImGuiCol_SeparatorActive: EnumConstantDecl>
  <ImGuiCol_ResizeGrip: EnumConstantDecl>
  <ImGuiCol_ResizeGripHovered: EnumConstantDecl>
  <ImGuiCol_ResizeGripActive: EnumConstantDecl>
  <ImGuiCol_InputTextCursor: EnumConstantDecl>
  <ImGuiCol_TabHovered: EnumConstantDecl>
  <ImGuiCol_Tab: EnumConstantDecl>
  <ImGuiCol_TabSelected: EnumConstantDecl>
  <ImGuiCol_TabSelectedOverline: EnumConstantDecl>
  <ImGuiCol_TabDimmed: EnumConstantDecl>
  <ImGuiCol_TabDimmedSelected: EnumConstantDecl>
  <ImGuiCol_TabDimmedSelectedOverline: EnumConstantDecl>
  <ImGuiCol_PlotLines: EnumConstantDecl>
  <ImGuiCol_PlotLinesHovered: EnumConstantDecl>
  <ImGuiCol_PlotHistogram: EnumConstantDecl>
  <ImGuiCol_PlotHistogramHovered: EnumConstantDecl>
  <ImGuiCol_TableHeaderBg: EnumConstantDecl>
  <ImGuiCol_TableBorderStrong: EnumConstantDecl>
  <ImGuiCol_TableBorderLight: EnumConstantDecl>
  <ImGuiCol_TableRowBg: EnumConstantDecl>
  <ImGuiCol_TableRowBgAlt: EnumConstantDecl>
  <ImGuiCol_TextLink: EnumConstantDecl>
  <ImGuiCol_TextSelectedBg: EnumConstantDecl>
  <ImGuiCol_TreeLines: EnumConstantDecl>
  <ImGuiCol_DragDropTarget: EnumConstantDecl>
  <ImGuiCol_NavCursor: EnumConstantDecl>
  <ImGuiCol_NavWindowingHighlight: EnumConstantDecl>
  <ImGuiCol_NavWindowingDimBg: EnumConstantDecl>
  <ImGuiCol_ModalWindowDimBg: EnumConstantDecl>
  <ImGuiCol_COUNT: EnumConstantDecl>
<ImGuiStyleVar_: EnumDecl>
  <ImGuiStyleVar_Alpha: EnumConstantDecl>
  <ImGuiStyleVar_DisabledAlpha: EnumConstantDecl>
  <ImGuiStyleVar_WindowPadding: EnumConstantDecl>
  <ImGuiStyleVar_WindowRounding: EnumConstantDecl>
  <ImGuiStyleVar_WindowBorderSize: EnumConstantDecl>
  <ImGuiStyleVar_WindowMinSize: EnumConstantDecl>
  <ImGuiStyleVar_WindowTitleAlign: EnumConstantDecl>
  <ImGuiStyleVar_ChildRounding: EnumConstantDecl>
  <ImGuiStyleVar_ChildBorderSize: EnumConstantDecl>
  <ImGuiStyleVar_PopupRounding: EnumConstantDecl>
  <ImGuiStyleVar_PopupBorderSize: EnumConstantDecl>
  <ImGuiStyleVar_FramePadding: EnumConstantDecl>
  <ImGuiStyleVar_FrameRounding: EnumConstantDecl>
  <ImGuiStyleVar_FrameBorderSize: EnumConstantDecl>
  <ImGuiStyleVar_ItemSpacing: EnumConstantDecl>
  <ImGuiStyleVar_ItemInnerSpacing: EnumConstantDecl>
  <ImGuiStyleVar_IndentSpacing: EnumConstantDecl>
  <ImGuiStyleVar_CellPadding: EnumConstantDecl>
  <ImGuiStyleVar_ScrollbarSize: EnumConstantDecl>
  <ImGuiStyleVar_ScrollbarRounding: EnumConstantDecl>
  <ImGuiStyleVar_GrabMinSize: EnumConstantDecl>
  <ImGuiStyleVar_GrabRounding: EnumConstantDecl>
  <ImGuiStyleVar_ImageBorderSize: EnumConstantDecl>
  <ImGuiStyleVar_TabRounding: EnumConstantDecl>
  <ImGuiStyleVar_TabBorderSize: EnumConstantDecl>
  <ImGuiStyleVar_TabBarBorderSize: EnumConstantDecl>
  <ImGuiStyleVar_TabBarOverlineSize: EnumConstantDecl>
  <ImGuiStyleVar_TableAngledHeadersAngle: EnumConstantDecl>
  <ImGuiStyleVar_TableAngledHeadersTextAlign: EnumConstantDecl>
  <ImGuiStyleVar_TreeLinesSize: EnumConstantDecl>
  <ImGuiStyleVar_TreeLinesRounding: EnumConstantDecl>
  <ImGuiStyleVar_ButtonTextAlign: EnumConstantDecl>
  <ImGuiStyleVar_SelectableTextAlign: EnumConstantDecl>
  <ImGuiStyleVar_SeparatorTextBorderSize: EnumConstantDecl>
  <ImGuiStyleVar_SeparatorTextAlign: EnumConstantDecl>
  <ImGuiStyleVar_SeparatorTextPadding: EnumConstantDecl>
  <ImGuiStyleVar_COUNT: EnumConstantDecl>
<ImGuiButtonFlags_: EnumDecl>
  <ImGuiButtonFlags_None: EnumConstantDecl>
  <ImGuiButtonFlags_MouseButtonLeft: EnumConstantDecl>
  <ImGuiButtonFlags_MouseButtonRight: EnumConstantDecl>
  <ImGuiButtonFlags_MouseButtonMiddle: EnumConstantDecl>
  <ImGuiButtonFlags_MouseButtonMask_: EnumConstantDecl>
  <ImGuiButtonFlags_EnableNav: EnumConstantDecl>
<ImGuiColorEditFlags_: EnumDecl>
  <ImGuiColorEditFlags_None: EnumConstantDecl>
  <ImGuiColorEditFlags_NoAlpha: EnumConstantDecl>
  <ImGuiColorEditFlags_NoPicker: EnumConstantDecl>
  <ImGuiColorEditFlags_NoOptions: EnumConstantDecl>
  <ImGuiColorEditFlags_NoSmallPreview: EnumConstantDecl>
  <ImGuiColorEditFlags_NoInputs: EnumConstantDecl>
  <ImGuiColorEditFlags_NoTooltip: EnumConstantDecl>
  <ImGuiColorEditFlags_NoLabel: EnumConstantDecl>
  <ImGuiColorEditFlags_NoSidePreview: EnumConstantDecl>
  <ImGuiColorEditFlags_NoDragDrop: EnumConstantDecl>
  <ImGuiColorEditFlags_NoBorder: EnumConstantDecl>
  <ImGuiColorEditFlags_AlphaOpaque: EnumConstantDecl>
  <ImGuiColorEditFlags_AlphaNoBg: EnumConstantDecl>
  <ImGuiColorEditFlags_AlphaPreviewHalf: EnumConstantDecl>
  <ImGuiColorEditFlags_AlphaBar: EnumConstantDecl>
  <ImGuiColorEditFlags_HDR: EnumConstantDecl>
  <ImGuiColorEditFlags_DisplayRGB: EnumConstantDecl>
  <ImGuiColorEditFlags_DisplayHSV: EnumConstantDecl>
  <ImGuiColorEditFlags_DisplayHex: EnumConstantDecl>
  <ImGuiColorEditFlags_Uint8: EnumConstantDecl>
  <ImGuiColorEditFlags_Float: EnumConstantDecl>
  <ImGuiColorEditFlags_PickerHueBar: EnumConstantDecl>
  <ImGuiColorEditFlags_PickerHueWheel: EnumConstantDecl>
  <ImGuiColorEditFlags_InputRGB: EnumConstantDecl>
  <ImGuiColorEditFlags_InputHSV: EnumConstantDecl>
  <ImGuiColorEditFlags_DefaultOptions_: EnumConstantDecl>
  <ImGuiColorEditFlags_AlphaMask_: EnumConstantDecl>
  <ImGuiColorEditFlags_DisplayMask_: EnumConstantDecl>
  <ImGuiColorEditFlags_DataTypeMask_: EnumConstantDecl>
  <ImGuiColorEditFlags_PickerMask_: EnumConstantDecl>
  <ImGuiColorEditFlags_InputMask_: EnumConstantDecl>
<ImGuiSliderFlags_: EnumDecl>
  <ImGuiSliderFlags_None: EnumConstantDecl>
  <ImGuiSliderFlags_Logarithmic: EnumConstantDecl>
  <ImGuiSliderFlags_NoRoundToFormat: EnumConstantDecl>
  <ImGuiSliderFlags_NoInput: EnumConstantDecl>
  <ImGuiSliderFlags_WrapAround: EnumConstantDecl>
  <ImGuiSliderFlags_ClampOnInput: EnumConstantDecl>
  <ImGuiSliderFlags_ClampZeroRange: EnumConstantDecl>
  <ImGuiSliderFlags_NoSpeedTweaks: EnumConstantDecl>
  <ImGuiSliderFlags_AlwaysClamp: EnumConstantDecl>
  <ImGuiSliderFlags_InvalidMask_: EnumConstantDecl>
<ImGuiMouseButton_: EnumDecl>
  <ImGuiMouseButton_Left: EnumConstantDecl>
  <ImGuiMouseButton_Right: EnumConstantDecl>
  <ImGuiMouseButton_Middle: EnumConstantDecl>
  <ImGuiMouseButton_COUNT: EnumConstantDecl>
<ImGuiMouseCursor_: EnumDecl>
  <ImGuiMouseCursor_None: EnumConstantDecl>
  <ImGuiMouseCursor_Arrow: EnumConstantDecl>
  <ImGuiMouseCursor_TextInput: EnumConstantDecl>
  <ImGuiMouseCursor_ResizeAll: EnumConstantDecl>
  <ImGuiMouseCursor_ResizeNS: EnumConstantDecl>
  <ImGuiMouseCursor_ResizeEW: EnumConstantDecl>
  <ImGuiMouseCursor_ResizeNESW: EnumConstantDecl>
  <ImGuiMouseCursor_ResizeNWSE: EnumConstantDecl>
  <ImGuiMouseCursor_Hand: EnumConstantDecl>
  <ImGuiMouseCursor_Wait: EnumConstantDecl>
  <ImGuiMouseCursor_Progress: EnumConstantDecl>
  <ImGuiMouseCursor_NotAllowed: EnumConstantDecl>
  <ImGuiMouseCursor_COUNT: EnumConstantDecl>
<ImGuiMouseSource: EnumDecl>
  <ImGuiMouseSource_Mouse: EnumConstantDecl>
  <ImGuiMouseSource_TouchScreen: EnumConstantDecl>
  <ImGuiMouseSource_Pen: EnumConstantDecl>
  <ImGuiMouseSource_COUNT: EnumConstantDecl>
<ImGuiCond_: EnumDecl>
  <ImGuiCond_None: EnumConstantDecl>
  <ImGuiCond_Always: EnumConstantDecl>
  <ImGuiCond_Once: EnumConstantDecl>
  <ImGuiCond_FirstUseEver: EnumConstantDecl>
  <ImGuiCond_Appearing: EnumConstantDecl>
<ImGuiTableFlags_: EnumDecl>
  <ImGuiTableFlags_None: EnumConstantDecl>
  <ImGuiTableFlags_Resizable: EnumConstantDecl>
  <ImGuiTableFlags_Reorderable: EnumConstantDecl>
  <ImGuiTableFlags_Hideable: EnumConstantDecl>
  <ImGuiTableFlags_Sortable: EnumConstantDecl>
  <ImGuiTableFlags_NoSavedSettings: EnumConstantDecl>
  <ImGuiTableFlags_ContextMenuInBody: EnumConstantDecl>
  <ImGuiTableFlags_RowBg: EnumConstantDecl>
  <ImGuiTableFlags_BordersInnerH: EnumConstantDecl>
  <ImGuiTableFlags_BordersOuterH: EnumConstantDecl>
  <ImGuiTableFlags_BordersInnerV: EnumConstantDecl>
  <ImGuiTableFlags_BordersOuterV: EnumConstantDecl>
  <ImGuiTableFlags_BordersH: EnumConstantDecl>
  <ImGuiTableFlags_BordersV: EnumConstantDecl>
  <ImGuiTableFlags_BordersInner: EnumConstantDecl>
  <ImGuiTableFlags_BordersOuter: EnumConstantDecl>
  <ImGuiTableFlags_Borders: EnumConstantDecl>
  <ImGuiTableFlags_NoBordersInBody: EnumConstantDecl>
  <ImGuiTableFlags_NoBordersInBodyUntilResize: EnumConstantDecl>
  <ImGuiTableFlags_SizingFixedFit: EnumConstantDecl>
  <ImGuiTableFlags_SizingFixedSame: EnumConstantDecl>
  <ImGuiTableFlags_SizingStretchProp: EnumConstantDecl>
  <ImGuiTableFlags_SizingStretchSame: EnumConstantDecl>
  <ImGuiTableFlags_NoHostExtendX: EnumConstantDecl>
  <ImGuiTableFlags_NoHostExtendY: EnumConstantDecl>
  <ImGuiTableFlags_NoKeepColumnsVisible: EnumConstantDecl>
  <ImGuiTableFlags_PreciseWidths: EnumConstantDecl>
  <ImGuiTableFlags_NoClip: EnumConstantDecl>
  <ImGuiTableFlags_PadOuterX: EnumConstantDecl>
  <ImGuiTableFlags_NoPadOuterX: EnumConstantDecl>
  <ImGuiTableFlags_NoPadInnerX: EnumConstantDecl>
  <ImGuiTableFlags_ScrollX: EnumConstantDecl>
  <ImGuiTableFlags_ScrollY: EnumConstantDecl>
  <ImGuiTableFlags_SortMulti: EnumConstantDecl>
  <ImGuiTableFlags_SortTristate: EnumConstantDecl>
  <ImGuiTableFlags_HighlightHoveredColumn: EnumConstantDecl>
  <ImGuiTableFlags_SizingMask_: EnumConstantDecl>
<ImGuiTableColumnFlags_: EnumDecl>
  <ImGuiTableColumnFlags_None: EnumConstantDecl>
  <ImGuiTableColumnFlags_Disabled: EnumConstantDecl>
  <ImGuiTableColumnFlags_DefaultHide: EnumConstantDecl>
  <ImGuiTableColumnFlags_DefaultSort: EnumConstantDecl>
  <ImGuiTableColumnFlags_WidthStretch: EnumConstantDecl>
  <ImGuiTableColumnFlags_WidthFixed: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoResize: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoReorder: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoHide: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoClip: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoSort: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoSortAscending: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoSortDescending: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoHeaderLabel: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoHeaderWidth: EnumConstantDecl>
  <ImGuiTableColumnFlags_PreferSortAscending: EnumConstantDecl>
  <ImGuiTableColumnFlags_PreferSortDescending: EnumConstantDecl>
  <ImGuiTableColumnFlags_IndentEnable: EnumConstantDecl>
  <ImGuiTableColumnFlags_IndentDisable: EnumConstantDecl>
  <ImGuiTableColumnFlags_AngledHeader: EnumConstantDecl>
  <ImGuiTableColumnFlags_IsEnabled: EnumConstantDecl>
  <ImGuiTableColumnFlags_IsVisible: EnumConstantDecl>
  <ImGuiTableColumnFlags_IsSorted: EnumConstantDecl>
  <ImGuiTableColumnFlags_IsHovered: EnumConstantDecl>
  <ImGuiTableColumnFlags_WidthMask_: EnumConstantDecl>
  <ImGuiTableColumnFlags_IndentMask_: EnumConstantDecl>
  <ImGuiTableColumnFlags_StatusMask_: EnumConstantDecl>
  <ImGuiTableColumnFlags_NoDirectResize_: EnumConstantDecl>
<ImGuiTableRowFlags_: EnumDecl>
  <ImGuiTableRowFlags_None: EnumConstantDecl>
  <ImGuiTableRowFlags_Headers: EnumConstantDecl>
<ImGuiTableBgTarget_: EnumDecl>
  <ImGuiTableBgTarget_None: EnumConstantDecl>
  <ImGuiTableBgTarget_RowBg0: EnumConstantDecl>
  <ImGuiTableBgTarget_RowBg1: EnumConstantDecl>
  <ImGuiTableBgTarget_CellBg: EnumConstantDecl>
<ImGuiTableSortSpecs: StructDecl>
  <Specs: FieldDecl>
  <SpecsCount: FieldDecl>
  <SpecsDirty: FieldDecl>
  <ImGuiTableSortSpecs: CXXConstructor>
<ImGuiTableColumnSortSpecs: StructDecl>
  <ColumnUserID: FieldDecl>
  <ColumnIndex: FieldDecl>
  <SortOrder: FieldDecl>
  <SortDirection: FieldDecl>
  <ImGuiTableColumnSortSpecs: CXXConstructor>
<ImNewWrapper: StructDecl>
<operator new: FunctionDecl>
  <: ParmDecl>
  <: ParmDecl>
  <ptr: ParmDecl>
  <: CompoundStmt>
<operator delete: FunctionDecl>
  <: ParmDecl>
  <: ParmDecl>
  <: ParmDecl>
  <: CompoundStmt>
<IM_DELETE: FunctionTemplate>
<ImVector: ClassTemplate>
<ImGuiStyle: StructDecl>
  <FontSizeBase: FieldDecl>
  <FontScaleMain: FieldDecl>
  <FontScaleDpi: FieldDecl>
  <Alpha: FieldDecl>
  <DisabledAlpha: FieldDecl>
  <WindowPadding: FieldDecl>
  <WindowRounding: FieldDecl>
  <WindowBorderSize: FieldDecl>
  <WindowBorderHoverPadding: FieldDecl>
  <WindowMinSize: FieldDecl>
  <WindowTitleAlign: FieldDecl>
  <WindowMenuButtonPosition: FieldDecl>
  <ChildRounding: FieldDecl>
  <ChildBorderSize: FieldDecl>
  <PopupRounding: FieldDecl>
  <PopupBorderSize: FieldDecl>
  <FramePadding: FieldDecl>
  <FrameRounding: FieldDecl>
  <FrameBorderSize: FieldDecl>
  <ItemSpacing: FieldDecl>
  <ItemInnerSpacing: FieldDecl>
  <CellPadding: FieldDecl>
  <TouchExtraPadding: FieldDecl>
  <IndentSpacing: FieldDecl>
  <ColumnsMinSpacing: FieldDecl>
  <ScrollbarSize: FieldDecl>
  <ScrollbarRounding: FieldDecl>
  <GrabMinSize: FieldDecl>
  <GrabRounding: FieldDecl>
  <LogSliderDeadzone: FieldDecl>
  <ImageBorderSize: FieldDecl>
  <TabRounding: FieldDecl>
  <TabBorderSize: FieldDecl>
  <TabCloseButtonMinWidthSelected: FieldDecl>
  <TabCloseButtonMinWidthUnselected: FieldDecl>
  <TabBarBorderSize: FieldDecl>
  <TabBarOverlineSize: FieldDecl>
  <TableAngledHeadersAngle: FieldDecl>
  <TableAngledHeadersTextAlign: FieldDecl>
  <TreeLinesFlags: FieldDecl>
  <TreeLinesSize: FieldDecl>
  <TreeLinesRounding: FieldDecl>
  <ColorButtonPosition: FieldDecl>
  <ButtonTextAlign: FieldDecl>
  <SelectableTextAlign: FieldDecl>
  <SeparatorTextBorderSize: FieldDecl>
  <SeparatorTextAlign: FieldDecl>
  <SeparatorTextPadding: FieldDecl>
  <DisplayWindowPadding: FieldDecl>
  <DisplaySafeAreaPadding: FieldDecl>
  <MouseCursorScale: FieldDecl>
  <AntiAliasedLines: FieldDecl>
  <AntiAliasedLinesUseTex: FieldDecl>
  <AntiAliasedFill: FieldDecl>
  <CurveTessellationTol: FieldDecl>
  <CircleTessellationMaxError: FieldDecl>
  <Colors: FieldDecl>
  <HoverStationaryDelay: FieldDecl>
  <HoverDelayShort: FieldDecl>
  <HoverDelayNormal: FieldDecl>
  <HoverFlagsForTooltipMouse: FieldDecl>
  <HoverFlagsForTooltipNav: FieldDecl>
  <_MainScale: FieldDecl>
  <_NextFrameFontSizeBase: FieldDecl>
  <ImGuiStyle: CXXConstructor>
  <ScaleAllSizes: CXXMethod>
<ImGuiKeyData: StructDecl>
  <Down: FieldDecl>
  <DownDuration: FieldDecl>
  <DownDurationPrev: FieldDecl>
  <AnalogValue: FieldDecl>
<ImGuiIO: StructDecl>
  <ConfigFlags: FieldDecl>
  <BackendFlags: FieldDecl>
  <DisplaySize: FieldDecl>
  <DisplayFramebufferScale: FieldDecl>
  <DeltaTime: FieldDecl>
  <IniSavingRate: FieldDecl>
  <IniFilename: FieldDecl>
  <LogFilename: FieldDecl>
  <UserData: FieldDecl>
  <Fonts: FieldDecl>
  <FontDefault: FieldDecl>
  <FontAllowUserScaling: FieldDecl>
  <ConfigNavSwapGamepadButtons: FieldDecl>
  <ConfigNavMoveSetMousePos: FieldDecl>
  <ConfigNavCaptureKeyboard: FieldDecl>
  <ConfigNavEscapeClearFocusItem: FieldDecl>
  <ConfigNavEscapeClearFocusWindow: FieldDecl>
  <ConfigNavCursorVisibleAuto: FieldDecl>
  <ConfigNavCursorVisibleAlways: FieldDecl>
  <MouseDrawCursor: FieldDecl>
  <ConfigMacOSXBehaviors: FieldDecl>
  <ConfigInputTrickleEventQueue: FieldDecl>
  <ConfigInputTextCursorBlink: FieldDecl>
  <ConfigInputTextEnterKeepActive: FieldDecl>
  <ConfigDragClickToInputText: FieldDecl>
  <ConfigWindowsResizeFromEdges: FieldDecl>
  <ConfigWindowsMoveFromTitleBarOnly: FieldDecl>
  <ConfigWindowsCopyContentsWithCtrlC: FieldDecl>
  <ConfigScrollbarScrollByPage: FieldDecl>
  <ConfigMemoryCompactTimer: FieldDecl>
  <MouseDoubleClickTime: FieldDecl>
  <MouseDoubleClickMaxDist: FieldDecl>
  <MouseDragThreshold: FieldDecl>
  <KeyRepeatDelay: FieldDecl>
  <KeyRepeatRate: FieldDecl>
  <ConfigErrorRecovery: FieldDecl>
  <ConfigErrorRecoveryEnableAssert: FieldDecl>
  <ConfigErrorRecoveryEnableDebugLog: FieldDecl>
  <ConfigErrorRecoveryEnableTooltip: FieldDecl>
  <ConfigDebugIsDebuggerPresent: FieldDecl>
  <ConfigDebugHighlightIdConflicts: FieldDecl>
  <ConfigDebugHighlightIdConflictsShowItemPicker: FieldDecl>
  <ConfigDebugBeginReturnValueOnce: FieldDecl>
  <ConfigDebugBeginReturnValueLoop: FieldDecl>
  <ConfigDebugIgnoreFocusLoss: FieldDecl>
  <ConfigDebugIniSettings: FieldDecl>
  <BackendPlatformName: FieldDecl>
  <BackendRendererName: FieldDecl>
  <BackendPlatformUserData: FieldDecl>
  <BackendRendererUserData: FieldDecl>
  <BackendLanguageUserData: FieldDecl>
  <AddKeyEvent: CXXMethod>
  <AddKeyAnalogEvent: CXXMethod>
  <AddMousePosEvent: CXXMethod>
  <AddMouseButtonEvent: CXXMethod>
  <AddMouseWheelEvent: CXXMethod>
  <AddMouseSourceEvent: CXXMethod>
  <AddFocusEvent: CXXMethod>
  <AddInputCharacter: CXXMethod>
  <AddInputCharacterUTF16: CXXMethod>
  <AddInputCharactersUTF8: CXXMethod>
  <SetKeyEventNativeData: CXXMethod>
  <SetAppAcceptingEvents: CXXMethod>
  <ClearEventsQueue: CXXMethod>
  <ClearInputKeys: CXXMethod>
  <ClearInputMouse: CXXMethod>
  <WantCaptureMouse: FieldDecl>
  <WantCaptureKeyboard: FieldDecl>
  <WantTextInput: FieldDecl>
  <WantSetMousePos: FieldDecl>
  <WantSaveIniSettings: FieldDecl>
  <NavActive: FieldDecl>
  <NavVisible: FieldDecl>
  <Framerate: FieldDecl>
  <MetricsRenderVertices: FieldDecl>
  <MetricsRenderIndices: FieldDecl>
  <MetricsRenderWindows: FieldDecl>
  <MetricsActiveWindows: FieldDecl>
  <MouseDelta: FieldDecl>
  <Ctx: FieldDecl>
  <MousePos: FieldDecl>
  <MouseDown: FieldDecl>
  <MouseWheel: FieldDecl>
  <MouseWheelH: FieldDecl>
  <MouseSource: FieldDecl>
  <KeyCtrl: FieldDecl>
  <KeyShift: FieldDecl>
  <KeyAlt: FieldDecl>
  <KeySuper: FieldDecl>
  <KeyMods: FieldDecl>
  <KeysData: FieldDecl>
  <WantCaptureMouseUnlessPopupClose: FieldDecl>
  <MousePosPrev: FieldDecl>
  <MouseClickedPos: FieldDecl>
  <MouseClickedTime: FieldDecl>
  <MouseClicked: FieldDecl>
  <MouseDoubleClicked: FieldDecl>
  <MouseClickedCount: FieldDecl>
  <MouseClickedLastCount: FieldDecl>
  <MouseReleased: FieldDecl>
  <MouseReleasedTime: FieldDecl>
  <MouseDownOwned: FieldDecl>
  <MouseDownOwnedUnlessPopupClose: FieldDecl>
  <MouseWheelRequestAxisSwap: FieldDecl>
  <MouseCtrlLeftAsRightClick: FieldDecl>
  <MouseDownDuration: FieldDecl>
  <MouseDownDurationPrev: FieldDecl>
  <MouseDragMaxDistanceSqr: FieldDecl>
  <PenPressure: FieldDecl>
  <AppFocusLost: FieldDecl>
  <AppAcceptingEvents: FieldDecl>
  <InputQueueSurrogate: FieldDecl>
  <InputQueueCharacters: FieldDecl>
  <ImGuiIO: CXXConstructor>
<sizeOfT: VarDecl>
<ImGuiInputTextCallbackData: StructDecl>
  <Ctx: FieldDecl>
  <EventFlag: FieldDecl>
  <Flags: FieldDecl>
  <UserData: FieldDecl>
  <EventChar: FieldDecl>
  <EventKey: FieldDecl>
  <Buf: FieldDecl>
  <BufTextLen: FieldDecl>
  <BufSize: FieldDecl>
  <BufDirty: FieldDecl>
  <CursorPos: FieldDecl>
  <SelectionStart: FieldDecl>
  <SelectionEnd: FieldDecl>
  <ImGuiInputTextCallbackData: CXXConstructor>
  <DeleteChars: CXXMethod>
  <InsertChars: CXXMethod>
  <SelectAll: CXXMethod>
  <ClearSelection: CXXMethod>
  <HasSelection: CXXMethod>
<ImGuiSizeCallbackData: StructDecl>
  <UserData: FieldDecl>
  <Pos: FieldDecl>
  <CurrentSize: FieldDecl>
  <DesiredSize: FieldDecl>
<ImGuiPayload: StructDecl>
  <Data: FieldDecl>
  <DataSize: FieldDecl>
  <SourceId: FieldDecl>
  <SourceParentId: FieldDecl>
  <DataFrameCount: FieldDecl>
  <DataType: FieldDecl>
  <Preview: FieldDecl>
  <Delivery: FieldDecl>
  <ImGuiPayload: CXXConstructor>
  <Clear: CXXMethod>
  <IsDataType: CXXMethod>
  <IsPreview: CXXMethod>
  <IsDelivery: CXXMethod>
<ImGuiOnceUponAFrame: StructDecl>
  <ImGuiOnceUponAFrame: CXXConstructor>
  <RefFrame: FieldDecl>
  <operator bool: CXXConversion>
<ImGuiTextFilter: StructDecl>
  <ImGuiTextFilter: CXXConstructor>
  <Draw: CXXMethod>
  <PassFilter: CXXMethod>
  <Build: CXXMethod>
  <Clear: CXXMethod>
  <IsActive: CXXMethod>
  <ImGuiTextRange: StructDecl>
warning: Processing function declaration not in a namespace, deferring to the global.
    <b: FieldDecl>
    <e: FieldDecl>
    <ImGuiTextRange: CXXConstructor>
    <ImGuiTextRange: CXXConstructor>
    <empty: CXXMethod>
    <split: CXXMethod>
  <InputBuf: FieldDecl>
  <Filters: FieldDecl>
  <CountGrep: FieldDecl>
<ImGuiTextBuffer: StructDecl>
  <Buf: FieldDecl>
  <EmptyString: VarDecl>
  <ImGuiTextBuffer: CXXConstructor>
  <operator[]: CXXMethod>
  <begin: CXXMethod>
  <end: CXXMethod>
  <size: CXXMethod>
  <empty: CXXMethod>
  <clear: CXXMethod>
  <resize: CXXMethod>
  <reserve: CXXMethod>
  <c_str: CXXMethod>
  <append: CXXMethod>
  <appendf: CXXMethod>
  <appendfv: CXXMethod>
<ImGuiStoragePair: StructDecl>
  <key: FieldDecl>
  <: UnionDecl>
  <ImGuiStoragePair: CXXConstructor>
  <ImGuiStoragePair: CXXConstructor>
  <ImGuiStoragePair: CXXConstructor>
<ImGuiStorage: StructDecl>
  <Data: FieldDecl>
  <Clear: CXXMethod>
  <GetInt: CXXMethod>
  <SetInt: CXXMethod>
  <GetBool: CXXMethod>
  <SetBool: CXXMethod>
  <GetFloat: CXXMethod>
  <SetFloat: CXXMethod>
  <GetVoidPtr: CXXMethod>
  <SetVoidPtr: CXXMethod>
  <GetIntRef: CXXMethod>
  <GetBoolRef: CXXMethod>
  <GetFloatRef: CXXMethod>
  <GetVoidPtrRef: CXXMethod>
  <BuildSortByKey: CXXMethod>
  <SetAllInt: CXXMethod>
<ImGuiListClipper: StructDecl>
  <Ctx: FieldDecl>
  <DisplayStart: FieldDecl>
  <DisplayEnd: FieldDecl>
  <ItemsCount: FieldDecl>
  <ItemsHeight: FieldDecl>
  <StartPosY: FieldDecl>
  <StartSeekOffsetY: FieldDecl>
  <TempData: FieldDecl>
  <ImGuiListClipper: CXXConstructor>
  <~ImGuiListClipper: CXXDestructor>
  <Begin: CXXMethod>
  <End: CXXMethod>
  <Step: CXXMethod>
  <IncludeItemByIndex: CXXMethod>
  <IncludeItemsByIndex: CXXMethod>
  <SeekCursorForItem: CXXMethod>
<ImColor: StructDecl>
  <Value: FieldDecl>
  <ImColor: CXXConstructor>
  <ImColor: CXXConstructor>
  <ImColor: CXXConstructor>
  <ImColor: CXXConstructor>
  <ImColor: CXXConstructor>
  <operator unsigned int: CXXConversion>
  <operator ImVec4: CXXConversion>
  <SetHSV: CXXMethod>
  <HSV: CXXMethod>
<ImGuiMultiSelectFlags_: EnumDecl>
  <ImGuiMultiSelectFlags_None: EnumConstantDecl>
  <ImGuiMultiSelectFlags_SingleSelect: EnumConstantDecl>
  <ImGuiMultiSelectFlags_NoSelectAll: EnumConstantDecl>
  <ImGuiMultiSelectFlags_NoRangeSelect: EnumConstantDecl>
  <ImGuiMultiSelectFlags_NoAutoSelect: EnumConstantDecl>
  <ImGuiMultiSelectFlags_NoAutoClear: EnumConstantDecl>
  <ImGuiMultiSelectFlags_NoAutoClearOnReselect: EnumConstantDecl>
  <ImGuiMultiSelectFlags_BoxSelect1d: EnumConstantDecl>
  <ImGuiMultiSelectFlags_BoxSelect2d: EnumConstantDecl>
  <ImGuiMultiSelectFlags_BoxSelectNoScroll: EnumConstantDecl>
  <ImGuiMultiSelectFlags_ClearOnEscape: EnumConstantDecl>
  <ImGuiMultiSelectFlags_ClearOnClickVoid: EnumConstantDecl>
  <ImGuiMultiSelectFlags_ScopeWindow: EnumConstantDecl>
  <ImGuiMultiSelectFlags_ScopeRect: EnumConstantDecl>
  <ImGuiMultiSelectFlags_SelectOnClick: EnumConstantDecl>
  <ImGuiMultiSelectFlags_SelectOnClickRelease: EnumConstantDecl>
  <ImGuiMultiSelectFlags_NavWrapX: EnumConstantDecl>
<ImGuiMultiSelectIO: StructDecl>
  <Requests: FieldDecl>
  <RangeSrcItem: FieldDecl>
  <NavIdItem: FieldDecl>
  <NavIdSelected: FieldDecl>
  <RangeSrcReset: FieldDecl>
  <ItemsCount: FieldDecl>
<ImGuiSelectionRequestType: EnumDecl>
  <ImGuiSelectionRequestType_None: EnumConstantDecl>
  <ImGuiSelectionRequestType_SetAll: EnumConstantDecl>
  <ImGuiSelectionRequestType_SetRange: EnumConstantDecl>
<ImGuiSelectionRequest: StructDecl>
  <Type: FieldDecl>
  <Selected: FieldDecl>
  <RangeDirection: FieldDecl>
  <RangeFirstItem: FieldDecl>
  <RangeLastItem: FieldDecl>
<ImGuiSelectionBasicStorage: StructDecl>
  <Size: FieldDecl>
  <PreserveOrder: FieldDecl>
  <UserData: FieldDecl>
  <AdapterIndexToStorageId: FieldDecl>
  <_SelectionOrder: FieldDecl>
  <_Storage: FieldDecl>
  <ImGuiSelectionBasicStorage: CXXConstructor>
  <ApplyRequests: CXXMethod>
  <Contains: CXXMethod>
  <Clear: CXXMethod>
  <Swap: CXXMethod>
  <SetItemSelected: CXXMethod>
  <GetNextSelectedItem: CXXMethod>
  <GetStorageIdFromIndex: CXXMethod>
<ImGuiSelectionExternalStorage: StructDecl>
  <UserData: FieldDecl>
  <AdapterSetItemSelected: FieldDecl>
  <ImGuiSelectionExternalStorage: CXXConstructor>
  <ApplyRequests: CXXMethod>
<ImDrawIdx: TypedefDecl>
<ImDrawCallback: TypedefDecl>
<ImDrawCmd: StructDecl>
  <ClipRect: FieldDecl>
  <TexRef: FieldDecl>
  <VtxOffset: FieldDecl>
  <IdxOffset: FieldDecl>
  <ElemCount: FieldDecl>
  <UserCallback: FieldDecl>
  <UserCallbackData: FieldDecl>
  <UserCallbackDataSize: FieldDecl>
  <UserCallbackDataOffset: FieldDecl>
  <ImDrawCmd: CXXConstructor>
  <GetTexID: CXXMethod>
<ImDrawVert: StructDecl>
  <pos: FieldDecl>
  <uv: FieldDecl>
  <col: FieldDecl>
<ImDrawCmdHeader: StructDecl>
  <ClipRect: FieldDecl>
  <TexRef: FieldDecl>
  <VtxOffset: FieldDecl>
<ImDrawChannel: StructDecl>
  <_CmdBuffer: FieldDecl>
  <_IdxBuffer: FieldDecl>
<ImDrawListSplitter: StructDecl>
  <_Current: FieldDecl>
  <_Count: FieldDecl>
  <_Channels: FieldDecl>
  <ImDrawListSplitter: CXXConstructor>
  <~ImDrawListSplitter: CXXDestructor>
  <Clear: CXXMethod>
  <ClearFreeMemory: CXXMethod>
  <Split: CXXMethod>
  <Merge: CXXMethod>
  <SetCurrentChannel: CXXMethod>
<ImDrawFlags_: EnumDecl>
  <ImDrawFlags_None: EnumConstantDecl>
  <ImDrawFlags_Closed: EnumConstantDecl>
  <ImDrawFlags_RoundCornersTopLeft: EnumConstantDecl>
  <ImDrawFlags_RoundCornersTopRight: EnumConstantDecl>
  <ImDrawFlags_RoundCornersBottomLeft: EnumConstantDecl>
  <ImDrawFlags_RoundCornersBottomRight: EnumConstantDecl>
  <ImDrawFlags_RoundCornersNone: EnumConstantDecl>
  <ImDrawFlags_RoundCornersTop: EnumConstantDecl>
  <ImDrawFlags_RoundCornersBottom: EnumConstantDecl>
  <ImDrawFlags_RoundCornersLeft: EnumConstantDecl>
  <ImDrawFlags_RoundCornersRight: EnumConstantDecl>
  <ImDrawFlags_RoundCornersAll: EnumConstantDecl>
  <ImDrawFlags_RoundCornersDefault_: EnumConstantDecl>
  <ImDrawFlags_RoundCornersMask_: EnumConstantDecl>
<ImDrawListFlags_: EnumDecl>
  <ImDrawListFlags_None: EnumConstantDecl>
  <ImDrawListFlags_AntiAliasedLines: EnumConstantDecl>
  <ImDrawListFlags_AntiAliasedLinesUseTex: EnumConstantDecl>
  <ImDrawListFlags_AntiAliasedFill: EnumConstantDecl>
  <ImDrawListFlags_AllowVtxOffset: EnumConstantDecl>
<ImDrawList: StructDecl>
  <CmdBuffer: FieldDecl>
  <IdxBuffer: FieldDecl>
  <VtxBuffer: FieldDecl>
  <Flags: FieldDecl>
  <_VtxCurrentIdx: FieldDecl>
  <_Data: FieldDecl>
  <_VtxWritePtr: FieldDecl>
  <_IdxWritePtr: FieldDecl>
  <_Path: FieldDecl>
  <_CmdHeader: FieldDecl>
  <_Splitter: FieldDecl>
  <_ClipRectStack: FieldDecl>
  <_TextureStack: FieldDecl>
  <_CallbacksDataBuf: FieldDecl>
  <_FringeScale: FieldDecl>
  <_OwnerName: FieldDecl>
  <ImDrawList: CXXConstructor>
  <~ImDrawList: CXXDestructor>
  <PushClipRect: CXXMethod>
  <PushClipRectFullScreen: CXXMethod>
  <PopClipRect: CXXMethod>
  <PushTexture: CXXMethod>
  <PopTexture: CXXMethod>
  <GetClipRectMin: CXXMethod>
  <GetClipRectMax: CXXMethod>
  <AddLine: CXXMethod>
  <AddRect: CXXMethod>
  <AddRectFilled: CXXMethod>
  <AddRectFilledMultiColor: CXXMethod>
  <AddQuad: CXXMethod>
  <AddQuadFilled: CXXMethod>
  <AddTriangle: CXXMethod>
  <AddTriangleFilled: CXXMethod>
  <AddCircle: CXXMethod>
  <AddCircleFilled: CXXMethod>
  <AddNgon: CXXMethod>
  <AddNgonFilled: CXXMethod>
  <AddEllipse: CXXMethod>
  <AddEllipseFilled: CXXMethod>
  <AddText: CXXMethod>
  <AddText: CXXMethod>
  <AddBezierCubic: CXXMethod>
  <AddBezierQuadratic: CXXMethod>
  <AddPolyline: CXXMethod>
  <AddConvexPolyFilled: CXXMethod>
  <AddConcavePolyFilled: CXXMethod>
  <AddImage: CXXMethod>
  <AddImageQuad: CXXMethod>
  <AddImageRounded: CXXMethod>
  <PathClear: CXXMethod>
  <PathLineTo: CXXMethod>
  <PathLineToMergeDuplicate: CXXMethod>
  <PathFillConvex: CXXMethod>
  <PathFillConcave: CXXMethod>
  <PathStroke: CXXMethod>
  <PathArcTo: CXXMethod>
  <PathArcToFast: CXXMethod>
  <PathEllipticalArcTo: CXXMethod>
  <PathBezierCubicCurveTo: CXXMethod>
  <PathBezierQuadraticCurveTo: CXXMethod>
  <PathRect: CXXMethod>
  <AddCallback: CXXMethod>
  <AddDrawCmd: CXXMethod>
  <CloneOutput: CXXMethod>
  <ChannelsSplit: CXXMethod>
  <ChannelsMerge: CXXMethod>
  <ChannelsSetCurrent: CXXMethod>
  <PrimReserve: CXXMethod>
  <PrimUnreserve: CXXMethod>
  <PrimRect: CXXMethod>
  <PrimRectUV: CXXMethod>
  <PrimQuadUV: CXXMethod>
  <PrimWriteVtx: CXXMethod>
  <PrimWriteIdx: CXXMethod>
  <PrimVtx: CXXMethod>
  <_SetDrawListSharedData: CXXMethod>
  <_ResetForNewFrame: CXXMethod>
  <_ClearFreeMemory: CXXMethod>
  <_PopUnusedDrawCmd: CXXMethod>
  <_TryMergeDrawCmds: CXXMethod>
  <_OnChangedClipRect: CXXMethod>
  <_OnChangedTexture: CXXMethod>
  <_OnChangedVtxOffset: CXXMethod>
  <_SetTexture: CXXMethod>
  <_CalcCircleAutoSegmentCount: CXXMethod>
  <_PathArcToFastEx: CXXMethod>
  <_PathArcToN: CXXMethod>
<ImDrawData: StructDecl>
  <Valid: FieldDecl>
  <CmdListsCount: FieldDecl>
  <TotalIdxCount: FieldDecl>
  <TotalVtxCount: FieldDecl>
  <CmdLists: FieldDecl>
  <DisplayPos: FieldDecl>
  <DisplaySize: FieldDecl>
  <FramebufferScale: FieldDecl>
  <OwnerViewport: FieldDecl>
  <Textures: FieldDecl>
  <ImDrawData: CXXConstructor>
  <Clear: CXXMethod>
  <AddDrawList: CXXMethod>
  <DeIndexAllBuffers: CXXMethod>
  <ScaleClipRects: CXXMethod>
<ImTextureFormat: EnumDecl>
  <ImTextureFormat_RGBA32: EnumConstantDecl>
  <ImTextureFormat_Alpha8: EnumConstantDecl>
<ImTextureStatus: EnumDecl>
  <ImTextureStatus_OK: EnumConstantDecl>
  <ImTextureStatus_Destroyed: EnumConstantDecl>
  <ImTextureStatus_WantCreate: EnumConstantDecl>
  <ImTextureStatus_WantUpdates: EnumConstantDecl>
  <ImTextureStatus_WantDestroy: EnumConstantDecl>
<ImTextureRect: StructDecl>
  <x: FieldDecl>
  <y: FieldDecl>
  <w: FieldDecl>
  <h: FieldDecl>
<ImTextureData: StructDecl>
  <UniqueID: FieldDecl>
  <Status: FieldDecl>
  <BackendUserData: FieldDecl>
  <TexID: FieldDecl>
  <Format: FieldDecl>
  <Width: FieldDecl>
  <Height: FieldDecl>
  <BytesPerPixel: FieldDecl>
  <Pixels: FieldDecl>
  <UsedRect: FieldDecl>
  <UpdateRect: FieldDecl>
  <Updates: FieldDecl>
  <UnusedFrames: FieldDecl>
  <RefCount: FieldDecl>
  <UseColors: FieldDecl>
  <WantDestroyNextFrame: FieldDecl>
  <ImTextureData: CXXConstructor>
  <~ImTextureData: CXXDestructor>
  <Create: CXXMethod>
  <DestroyPixels: CXXMethod>
  <GetPixels: CXXMethod>
  <GetPixelsAt: CXXMethod>
  <GetSizeInBytes: CXXMethod>
  <GetPitch: CXXMethod>
  <GetTexRef: CXXMethod>
  <GetTexID: CXXMethod>
  <SetTexID: CXXMethod>
  <SetStatus: CXXMethod>
<ImFontConfig: StructDecl>
  <Name: FieldDecl>
  <FontData: FieldDecl>
  <FontDataSize: FieldDecl>
  <FontDataOwnedByAtlas: FieldDecl>
  <MergeMode: FieldDecl>
  <PixelSnapH: FieldDecl>
  <PixelSnapV: FieldDecl>
  <OversampleH: FieldDecl>
  <OversampleV: FieldDecl>
  <EllipsisChar: FieldDecl>
  <SizePixels: FieldDecl>
  <GlyphRanges: FieldDecl>
  <GlyphExcludeRanges: FieldDecl>
  <GlyphOffset: FieldDecl>
  <GlyphMinAdvanceX: FieldDecl>
  <GlyphMaxAdvanceX: FieldDecl>
  <GlyphExtraAdvanceX: FieldDecl>
  <FontNo: FieldDecl>
  <FontLoaderFlags: FieldDecl>
  <RasterizerMultiply: FieldDecl>
  <RasterizerDensity: FieldDecl>
  <Flags: FieldDecl>
  <DstFont: FieldDecl>
  <FontLoader: FieldDecl>
  <FontLoaderData: FieldDecl>
  <ImFontConfig: CXXConstructor>
<ImFontGlyph: StructDecl>
  <Colored: FieldDecl>
  <Visible: FieldDecl>
  <SourceIdx: FieldDecl>
  <Codepoint: FieldDecl>
  <AdvanceX: FieldDecl>
  <X0: FieldDecl>
  <Y0: FieldDecl>
  <X1: FieldDecl>
  <Y1: FieldDecl>
  <U0: FieldDecl>
  <V0: FieldDecl>
  <U1: FieldDecl>
  <V1: FieldDecl>
  <PackId: FieldDecl>
  <ImFontGlyph: CXXConstructor>
<ImFontGlyphRangesBuilder: StructDecl>
  <UsedChars: FieldDecl>
  <ImFontGlyphRangesBuilder: CXXConstructor>
  <Clear: CXXMethod>
  <GetBit: CXXMethod>
  <SetBit: CXXMethod>
  <AddChar: CXXMethod>
  <AddText: CXXMethod>
  <AddRanges: CXXMethod>
  <BuildRanges: CXXMethod>
<ImFontAtlasRectId: TypedefDecl>
<ImFontAtlasRect: StructDecl>
  <x: FieldDecl>
  <y: FieldDecl>
  <w: FieldDecl>
  <h: FieldDecl>
  <uv0: FieldDecl>
  <uv1: FieldDecl>
  <ImFontAtlasRect: CXXConstructor>
<ImFontAtlasFlags_: EnumDecl>
  <ImFontAtlasFlags_None: EnumConstantDecl>
  <ImFontAtlasFlags_NoPowerOfTwoHeight: EnumConstantDecl>
  <ImFontAtlasFlags_NoMouseCursors: EnumConstantDecl>
  <ImFontAtlasFlags_NoBakedLines: EnumConstantDecl>
<ImFontAtlas: StructDecl>
  <ImFontAtlas: CXXConstructor>
  <~ImFontAtlas: CXXDestructor>
  <AddFont: CXXMethod>
  <AddFontDefault: CXXMethod>
  <AddFontFromFileTTF: CXXMethod>
  <AddFontFromMemoryTTF: CXXMethod>
  <AddFontFromMemoryCompressedTTF: CXXMethod>
  <AddFontFromMemoryCompressedBase85TTF: CXXMethod>
  <RemoveFont: CXXMethod>
  <Clear: CXXMethod>
  <CompactCache: CXXMethod>
  <SetFontLoader: CXXMethod>
  <ClearInputData: CXXMethod>
  <ClearFonts: CXXMethod>
  <ClearTexData: CXXMethod>
  <GetGlyphRangesDefault: CXXMethod>
  <AddCustomRect: CXXMethod>
  <RemoveCustomRect: CXXMethod>
  <GetCustomRect: CXXMethod>
  <Flags: FieldDecl>
  <TexDesiredFormat: FieldDecl>
  <TexGlyphPadding: FieldDecl>
  <TexMinWidth: FieldDecl>
  <TexMinHeight: FieldDecl>
  <TexMaxWidth: FieldDecl>
  <TexMaxHeight: FieldDecl>
  <UserData: FieldDecl>
  <TexRef: FieldDecl>
  <TexData: FieldDecl>
  <TexList: FieldDecl>
  <Locked: FieldDecl>
  <RendererHasTextures: FieldDecl>
  <TexIsBuilt: FieldDecl>
  <TexPixelsUseColors: FieldDecl>
  <TexUvScale: FieldDecl>
  <TexUvWhitePixel: FieldDecl>
  <Fonts: FieldDecl>
  <Sources: FieldDecl>
  <TexUvLines: FieldDecl>
  <TexNextUniqueID: FieldDecl>
  <FontNextUniqueID: FieldDecl>
  <DrawListSharedDatas: FieldDecl>
  <Builder: FieldDecl>
  <FontLoader: FieldDecl>
  <FontLoaderName: FieldDecl>
  <FontLoaderData: FieldDecl>
  <FontLoaderFlags: FieldDecl>
  <RefCount: FieldDecl>
  <OwnerContext: FieldDecl>
<ImFontBaked: StructDecl>
  <IndexAdvanceX: FieldDecl>
  <FallbackAdvanceX: FieldDecl>
  <Size: FieldDecl>
  <RasterizerDensity: FieldDecl>
  <IndexLookup: FieldDecl>
  <Glyphs: FieldDecl>
  <FallbackGlyphIndex: FieldDecl>
  <Ascent: FieldDecl>
  <Descent: FieldDecl>
  <MetricsTotalSurface: FieldDecl>
  <WantDestroy: FieldDecl>
  <LockLoadingFallback: FieldDecl>
  <LastUsedFrame: FieldDecl>
  <BakedId: FieldDecl>
  <ContainerFont: FieldDecl>
  <FontLoaderDatas: FieldDecl>
  <ImFontBaked: CXXConstructor>
  <ClearOutputData: CXXMethod>
  <FindGlyph: CXXMethod>
  <FindGlyphNoFallback: CXXMethod>
  <GetCharAdvance: CXXMethod>
  <IsGlyphLoaded: CXXMethod>
<ImFontFlags_: EnumDecl>
  <ImFontFlags_None: EnumConstantDecl>
  <ImFontFlags_NoLoadError: EnumConstantDecl>
  <ImFontFlags_NoLoadGlyphs: EnumConstantDecl>
  <ImFontFlags_LockBakedSizes: EnumConstantDecl>
<ImFont: StructDecl>
  <LastBaked: FieldDecl>
  <ContainerAtlas: FieldDecl>
  <Flags: FieldDecl>
  <CurrentRasterizerDensity: FieldDecl>
  <FontId: FieldDecl>
  <LegacySize: FieldDecl>
  <Sources: FieldDecl>
  <EllipsisChar: FieldDecl>
  <FallbackChar: FieldDecl>
  <Used8kPagesMap: FieldDecl>
  <EllipsisAutoBake: FieldDecl>
  <RemapPairs: FieldDecl>
  <ImFont: CXXConstructor>
  <~ImFont: CXXDestructor>
  <IsGlyphInFont: CXXMethod>
  <IsLoaded: CXXMethod>
  <GetDebugName: CXXMethod>
  <GetFontBaked: CXXMethod>
  <CalcTextSizeA: CXXMethod>
  <CalcWordWrapPosition: CXXMethod>
  <RenderChar: CXXMethod>
  <RenderText: CXXMethod>
  <ClearOutputData: CXXMethod>
  <AddRemapChar: CXXMethod>
  <IsGlyphRangeUnused: CXXMethod>
<GetTexID: CXXMethod>
<GetTexID: CXXMethod>
<ImGuiViewportFlags_: EnumDecl>
  <ImGuiViewportFlags_None: EnumConstantDecl>
  <ImGuiViewportFlags_IsPlatformWindow: EnumConstantDecl>
  <ImGuiViewportFlags_IsPlatformMonitor: EnumConstantDecl>
  <ImGuiViewportFlags_OwnedByApp: EnumConstantDecl>
<ImGuiViewport: StructDecl>
  <ID: FieldDecl>
  <Flags: FieldDecl>
  <Pos: FieldDecl>
  <Size: FieldDecl>
  <FramebufferScale: FieldDecl>
  <WorkPos: FieldDecl>
  <WorkSize: FieldDecl>
  <PlatformHandle: FieldDecl>
  <PlatformHandleRaw: FieldDecl>
  <ImGuiViewport: CXXConstructor>
  <GetCenter: CXXMethod>
  <GetWorkCenter: CXXMethod>
<ImGuiPlatformIO: StructDecl>
  <ImGuiPlatformIO: CXXConstructor>
  <Platform_GetClipboardTextFn: FieldDecl>
  <Platform_SetClipboardTextFn: FieldDecl>
  <Platform_ClipboardUserData: FieldDecl>
  <Platform_OpenInShellFn: FieldDecl>
  <Platform_OpenInShellUserData: FieldDecl>
  <Platform_SetImeDataFn: FieldDecl>
  <Platform_ImeUserData: FieldDecl>
  <Platform_LocaleDecimalPoint: FieldDecl>
  <Renderer_TextureMaxWidth: FieldDecl>
  <Renderer_TextureMaxHeight: FieldDecl>
  <Renderer_RenderState: FieldDecl>
  <Textures: FieldDecl>
<ImGuiPlatformImeData: StructDecl>
  <WantVisible: FieldDecl>
  <WantTextInput: FieldDecl>
  <InputPos: FieldDecl>
  <InputLineHeight: FieldDecl>
  <ViewportId: FieldDecl>
  <ImGuiPlatformImeData: CXXConstructor>
Program:
namespace <global> {
  typedef unsigned int ImGuiID;
  typedef signed char ImS8;
  typedef unsigned char ImU8;
  typedef short ImS16;
  typedef unsigned short ImU16;
  typedef int ImS32;
  typedef unsigned int ImU32;
  typedef long long ImS64;
  typedef unsigned long long ImU64;
  struct ImDrawChannel {
  };
  struct ImDrawCmd {
  };
  struct ImDrawData {
  };
  struct ImDrawList {
  };
  struct ImDrawListSharedData {
  };
  struct ImDrawListSplitter {
  };
  struct ImDrawVert {
  };
  struct ImFont {
  };
  struct ImFontAtlas {
  };
  struct ImFontAtlasBuilder {
  };
  struct ImFontAtlasRect {
  };
  struct ImFontBaked {
  };
  struct ImFontConfig {
  };
  struct ImFontGlyph {
  };
  struct ImFontGlyphRangesBuilder {
  };
  struct ImFontLoader {
  };
  struct ImTextureData {
  };
  struct ImTextureRect {
  };
  struct ImColor {
  };
  struct ImGuiContext {
  };
  struct ImGuiIO {
  };
  struct ImGuiInputTextCallbackData {
  };
  struct ImGuiKeyData {
  };
  struct ImGuiListClipper {
  };
  struct ImGuiMultiSelectIO {
  };
  struct ImGuiOnceUponAFrame {
  };
  struct ImGuiPayload {
  };
  struct ImGuiPlatformIO {
  };
  struct ImGuiPlatformImeData {
  };
  struct ImGuiSelectionBasicStorage {
  };
  struct ImGuiSelectionExternalStorage {
  };
  struct ImGuiSelectionRequest {
  };
  struct ImGuiSizeCallbackData {
  };
  struct ImGuiStorage {
  };
  struct ImGuiStoragePair {
  };
  struct ImGuiStyle {
  };
  struct ImGuiTableSortSpecs {
  };
  struct ImGuiTableColumnSortSpecs {
  };
  struct ImGuiTextBuffer {
  };
  struct ImGuiTextFilter {
  };
  struct ImGuiViewport {
  };
  enum(int) ImGuiDir {
  };
  enum(int) ImGuiKey {
  };
  enum(int) ImGuiMouseSource {
  };
  enum(ImU8) ImGuiSortDirection {
  };
  typedef int ImGuiCol;
  typedef int ImGuiCond;
  typedef int ImGuiDataType;
  typedef int ImGuiMouseButton;
  typedef int ImGuiMouseCursor;
  typedef int ImGuiStyleVar;
  typedef int ImGuiTableBgTarget;
  typedef int ImDrawFlags;
  typedef int ImDrawListFlags;
  typedef int ImFontFlags;
  typedef int ImFontAtlasFlags;
  typedef int ImGuiBackendFlags;
  typedef int ImGuiButtonFlags;
  typedef int ImGuiChildFlags;
  typedef int ImGuiColorEditFlags;
  typedef int ImGuiConfigFlags;
  typedef int ImGuiComboFlags;
  typedef int ImGuiDragDropFlags;
  typedef int ImGuiFocusedFlags;
  typedef int ImGuiHoveredFlags;
  typedef int ImGuiInputFlags;
  typedef int ImGuiInputTextFlags;
  typedef int ImGuiItemFlags;
  typedef int ImGuiKeyChord;
  typedef int ImGuiPopupFlags;
  typedef int ImGuiMultiSelectFlags;
  typedef int ImGuiSelectableFlags;
  typedef int ImGuiSliderFlags;
  typedef int ImGuiTabBarFlags;
  typedef int ImGuiTabItemFlags;
  typedef int ImGuiTableFlags;
  typedef int ImGuiTableColumnFlags;
  typedef int ImGuiTableRowFlags;
  typedef int ImGuiTreeNodeFlags;
  typedef int ImGuiViewportFlags;
  typedef int ImGuiWindowFlags;
  typedef unsigned int ImWchar32;
  typedef unsigned short ImWchar16;
  typedef ImWchar16 ImWchar;
  typedef ImS64 ImGuiSelectionUserData;
  typedef int (*)(ImGuiInputTextCallbackData *) ImGuiInputTextCallback;
  typedef void (*)(ImGuiSizeCallbackData *) ImGuiSizeCallback;
  typedef void *(*)(size_t, void *) ImGuiMemAllocFunc;
  typedef void (*)(void *, void *) ImGuiMemFreeFunc;
  struct ImVec2 {
  };
  struct ImVec4 {
  };
  typedef ImU64 ImTextureID;
  struct ImTextureRef {
  };
  namespace ImGui {
    fn CreateContext(shared_font_atlas: ImFontAtlas *) ImGuiContext *;
    fn DestroyContext(ctx: ImGuiContext *) void;
    fn GetCurrentContext() ImGuiContext *;
    fn SetCurrentContext(ctx: ImGuiContext *) void;
    fn GetIO() ImGuiIO &;
    fn GetPlatformIO() ImGuiPlatformIO &;
    fn GetStyle() ImGuiStyle &;
    fn NewFrame() void;
    fn EndFrame() void;
    fn Render() void;
    fn GetDrawData() ImDrawData *;
    fn ShowDemoWindow(p_open: bool *) void;
    fn ShowMetricsWindow(p_open: bool *) void;
    fn ShowDebugLogWindow(p_open: bool *) void;
    fn ShowIDStackToolWindow(p_open: bool *) void;
    fn ShowAboutWindow(p_open: bool *) void;
    fn ShowStyleEditor(ref: ImGuiStyle *) void;
    fn ShowStyleSelector(label: const char *) bool;
    fn ShowFontSelector(label: const char *) void;
    fn ShowUserGuide() void;
    fn GetVersion() const char *;
    fn StyleColorsDark(dst: ImGuiStyle *) void;
    fn StyleColorsLight(dst: ImGuiStyle *) void;
    fn StyleColorsClassic(dst: ImGuiStyle *) void;
    fn Begin(name: const char *, p_open: bool *, flags: ImGuiWindowFlags) bool;
    fn End() void;
    fn BeginChild(str_id: const char *, size: const ImVec2 &, child_flags: ImGuiChildFlags, window_flags: ImGuiWindowFlags) bool;
    fn BeginChild(id: ImGuiID, size: const ImVec2 &, child_flags: ImGuiChildFlags, window_flags: ImGuiWindowFlags) bool;
    fn EndChild() void;
    fn IsWindowAppearing() bool;
    fn IsWindowCollapsed() bool;
    fn IsWindowFocused(flags: ImGuiFocusedFlags) bool;
    fn IsWindowHovered(flags: ImGuiHoveredFlags) bool;
    fn GetWindowDrawList() ImDrawList *;
    fn GetWindowPos() ImVec2;
    fn GetWindowSize() ImVec2;
    fn GetWindowWidth() float;
    fn GetWindowHeight() float;
    fn SetNextWindowPos(pos: const ImVec2 &, cond: ImGuiCond, pivot: const ImVec2 &) void;
    fn SetNextWindowSize(size: const ImVec2 &, cond: ImGuiCond) void;
    fn SetNextWindowSizeConstraints(size_min: const ImVec2 &, size_max: const ImVec2 &, custom_callback: ImGuiSizeCallback, custom_callback_data: void *) void;
    fn SetNextWindowContentSize(size: const ImVec2 &) void;
    fn SetNextWindowCollapsed(collapsed: bool, cond: ImGuiCond) void;
    fn SetNextWindowFocus() void;
    fn SetNextWindowScroll(scroll: const ImVec2 &) void;
    fn SetNextWindowBgAlpha(alpha: float) void;
    fn SetWindowPos(pos: const ImVec2 &, cond: ImGuiCond) void;
    fn SetWindowSize(size: const ImVec2 &, cond: ImGuiCond) void;
    fn SetWindowCollapsed(collapsed: bool, cond: ImGuiCond) void;
    fn SetWindowFocus() void;
    fn SetWindowPos(name: const char *, pos: const ImVec2 &, cond: ImGuiCond) void;
    fn SetWindowSize(name: const char *, size: const ImVec2 &, cond: ImGuiCond) void;
    fn SetWindowCollapsed(name: const char *, collapsed: bool, cond: ImGuiCond) void;
    fn SetWindowFocus(name: const char *) void;
    fn GetScrollX() float;
    fn GetScrollY() float;
    fn SetScrollX(scroll_x: float) void;
    fn SetScrollY(scroll_y: float) void;
    fn GetScrollMaxX() float;
    fn GetScrollMaxY() float;
    fn SetScrollHereX(center_x_ratio: float) void;
    fn SetScrollHereY(center_y_ratio: float) void;
    fn SetScrollFromPosX(local_x: float, center_x_ratio: float) void;
    fn SetScrollFromPosY(local_y: float, center_y_ratio: float) void;
    fn PushFont(font: ImFont *, font_size_base_unscaled: float) void;
    fn PopFont() void;
    fn GetFont() ImFont *;
    fn GetFontSize() float;
    fn GetFontBaked() ImFontBaked *;
    fn PushStyleColor(idx: ImGuiCol, col: ImU32) void;
    fn PushStyleColor(idx: ImGuiCol, col: const ImVec4 &) void;
    fn PopStyleColor(count: int) void;
    fn PushStyleVar(idx: ImGuiStyleVar, val: float) void;
    fn PushStyleVar(idx: ImGuiStyleVar, val: const ImVec2 &) void;
    fn PushStyleVarX(idx: ImGuiStyleVar, val_x: float) void;
    fn PushStyleVarY(idx: ImGuiStyleVar, val_y: float) void;
    fn PopStyleVar(count: int) void;
    fn PushItemFlag(option: ImGuiItemFlags, enabled: bool) void;
    fn PopItemFlag() void;
    fn PushItemWidth(item_width: float) void;
    fn PopItemWidth() void;
    fn SetNextItemWidth(item_width: float) void;
    fn CalcItemWidth() float;
    fn PushTextWrapPos(wrap_local_pos_x: float) void;
    fn PopTextWrapPos() void;
    fn GetFontTexUvWhitePixel() ImVec2;
    fn GetColorU32(idx: ImGuiCol, alpha_mul: float) ImU32;
    fn GetColorU32(col: const ImVec4 &) ImU32;
    fn GetColorU32(col: ImU32, alpha_mul: float) ImU32;
    fn GetStyleColorVec4(idx: ImGuiCol) const ImVec4 &;
    fn GetCursorScreenPos() ImVec2;
    fn SetCursorScreenPos(pos: const ImVec2 &) void;
    fn GetContentRegionAvail() ImVec2;
    fn GetCursorPos() ImVec2;
    fn GetCursorPosX() float;
    fn GetCursorPosY() float;
    fn SetCursorPos(local_pos: const ImVec2 &) void;
    fn SetCursorPosX(local_x: float) void;
    fn SetCursorPosY(local_y: float) void;
    fn GetCursorStartPos() ImVec2;
    fn Separator() void;
    fn SameLine(offset_from_start_x: float, spacing: float) void;
    fn NewLine() void;
    fn Spacing() void;
    fn Dummy(size: const ImVec2 &) void;
    fn Indent(indent_w: float) void;
    fn Unindent(indent_w: float) void;
    fn BeginGroup() void;
    fn EndGroup() void;
    fn AlignTextToFramePadding() void;
    fn GetTextLineHeight() float;
    fn GetTextLineHeightWithSpacing() float;
    fn GetFrameHeight() float;
    fn GetFrameHeightWithSpacing() float;
    fn PushID(str_id: const char *) void;
    fn PushID(str_id_begin: const char *, str_id_end: const char *) void;
    fn PushID(ptr_id: const void *) void;
    fn PushID(int_id: int) void;
    fn PopID() void;
    fn GetID(str_id: const char *) ImGuiID;
    fn GetID(str_id_begin: const char *, str_id_end: const char *) ImGuiID;
    fn GetID(ptr_id: const void *) ImGuiID;
    fn GetID(int_id: int) ImGuiID;
    fn TextUnformatted(text: const char *, text_end: const char *) void;
    fn Text(fmt: const char *) void;
    fn TextV(fmt: const char *, args: va_list) void;
    fn TextColored(col: const ImVec4 &, fmt: const char *) void;
    fn TextColoredV(col: const ImVec4 &, fmt: const char *, args: va_list) void;
    fn TextDisabled(fmt: const char *) void;
    fn TextDisabledV(fmt: const char *, args: va_list) void;
    fn TextWrapped(fmt: const char *) void;
    fn TextWrappedV(fmt: const char *, args: va_list) void;
    fn LabelText(label: const char *, fmt: const char *) void;
    fn LabelTextV(label: const char *, fmt: const char *, args: va_list) void;
    fn BulletText(fmt: const char *) void;
    fn BulletTextV(fmt: const char *, args: va_list) void;
    fn SeparatorText(label: const char *) void;
    fn Button(label: const char *, size: const ImVec2 &) bool;
    fn SmallButton(label: const char *) bool;
    fn InvisibleButton(str_id: const char *, size: const ImVec2 &, flags: ImGuiButtonFlags) bool;
    fn ArrowButton(str_id: const char *, dir: ImGuiDir) bool;
    fn Checkbox(label: const char *, v: bool *) bool;
    fn CheckboxFlags(label: const char *, flags: int *, flags_value: int) bool;
    fn CheckboxFlags(label: const char *, flags: unsigned int *, flags_value: unsigned int) bool;
    fn RadioButton(label: const char *, active: bool) bool;
    fn RadioButton(label: const char *, v: int *, v_button: int) bool;
    fn ProgressBar(fraction: float, size_arg: const ImVec2 &, overlay: const char *) void;
    fn Bullet() void;
    fn TextLink(label: const char *) bool;
    fn TextLinkOpenURL(label: const char *, url: const char *) bool;
    fn Image(tex_ref: ImTextureRef, image_size: const ImVec2 &, uv0: const ImVec2 &, uv1: const ImVec2 &) void;
    fn ImageWithBg(tex_ref: ImTextureRef, image_size: const ImVec2 &, uv0: const ImVec2 &, uv1: const ImVec2 &, bg_col: const ImVec4 &, tint_col: const ImVec4 &) void;
    fn ImageButton(str_id: const char *, tex_ref: ImTextureRef, image_size: const ImVec2 &, uv0: const ImVec2 &, uv1: const ImVec2 &, bg_col: const ImVec4 &, tint_col: const ImVec4 &) bool;
    fn BeginCombo(label: const char *, preview_value: const char *, flags: ImGuiComboFlags) bool;
    fn EndCombo() void;
    fn Combo(label: const char *, current_item: int *, items: const char *const[], items_count: int, popup_max_height_in_items: int) bool;
    fn Combo(label: const char *, current_item: int *, items_separated_by_zeros: const char *, popup_max_height_in_items: int) bool;
    fn Combo(label: const char *, current_item: int *, getter: const char *(*)(void *, int), user_data: void *, items_count: int, popup_max_height_in_items: int) bool;
    fn DragFloat(label: const char *, v: float *, v_speed: float, v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragFloat2(label: const char *, v: float[2], v_speed: float, v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragFloat3(label: const char *, v: float[3], v_speed: float, v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragFloat4(label: const char *, v: float[4], v_speed: float, v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragFloatRange2(label: const char *, v_current_min: float *, v_current_max: float *, v_speed: float, v_min: float, v_max: float, format: const char *, format_max: const char *, flags: ImGuiSliderFlags) bool;
    fn DragInt(label: const char *, v: int *, v_speed: float, v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragInt2(label: const char *, v: int[2], v_speed: float, v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragInt3(label: const char *, v: int[3], v_speed: float, v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragInt4(label: const char *, v: int[4], v_speed: float, v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragIntRange2(label: const char *, v_current_min: int *, v_current_max: int *, v_speed: float, v_min: int, v_max: int, format: const char *, format_max: const char *, flags: ImGuiSliderFlags) bool;
    fn DragScalar(label: const char *, data_type: ImGuiDataType, p_data: void *, v_speed: float, p_min: const void *, p_max: const void *, format: const char *, flags: ImGuiSliderFlags) bool;
    fn DragScalarN(label: const char *, data_type: ImGuiDataType, p_data: void *, components: int, v_speed: float, p_min: const void *, p_max: const void *, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderFloat(label: const char *, v: float *, v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderFloat2(label: const char *, v: float[2], v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderFloat3(label: const char *, v: float[3], v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderFloat4(label: const char *, v: float[4], v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderAngle(label: const char *, v_rad: float *, v_degrees_min: float, v_degrees_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderInt(label: const char *, v: int *, v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderInt2(label: const char *, v: int[2], v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderInt3(label: const char *, v: int[3], v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderInt4(label: const char *, v: int[4], v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderScalar(label: const char *, data_type: ImGuiDataType, p_data: void *, p_min: const void *, p_max: const void *, format: const char *, flags: ImGuiSliderFlags) bool;
    fn SliderScalarN(label: const char *, data_type: ImGuiDataType, p_data: void *, components: int, p_min: const void *, p_max: const void *, format: const char *, flags: ImGuiSliderFlags) bool;
    fn VSliderFloat(label: const char *, size: const ImVec2 &, v: float *, v_min: float, v_max: float, format: const char *, flags: ImGuiSliderFlags) bool;
    fn VSliderInt(label: const char *, size: const ImVec2 &, v: int *, v_min: int, v_max: int, format: const char *, flags: ImGuiSliderFlags) bool;
    fn VSliderScalar(label: const char *, size: const ImVec2 &, data_type: ImGuiDataType, p_data: void *, p_min: const void *, p_max: const void *, format: const char *, flags: ImGuiSliderFlags) bool;
    fn InputText(label: const char *, buf: char *, buf_size: size_t, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: void *) bool;
    fn InputTextMultiline(label: const char *, buf: char *, buf_size: size_t, size: const ImVec2 &, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: void *) bool;
    fn InputTextWithHint(label: const char *, hint: const char *, buf: char *, buf_size: size_t, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: void *) bool;
    fn InputFloat(label: const char *, v: float *, step: float, step_fast: float, format: const char *, flags: ImGuiInputTextFlags) bool;
    fn InputFloat2(label: const char *, v: float[2], format: const char *, flags: ImGuiInputTextFlags) bool;
    fn InputFloat3(label: const char *, v: float[3], format: const char *, flags: ImGuiInputTextFlags) bool;
    fn InputFloat4(label: const char *, v: float[4], format: const char *, flags: ImGuiInputTextFlags) bool;
    fn InputInt(label: const char *, v: int *, step: int, step_fast: int, flags: ImGuiInputTextFlags) bool;
    fn InputInt2(label: const char *, v: int[2], flags: ImGuiInputTextFlags) bool;
    fn InputInt3(label: const char *, v: int[3], flags: ImGuiInputTextFlags) bool;
    fn InputInt4(label: const char *, v: int[4], flags: ImGuiInputTextFlags) bool;
    fn InputDouble(label: const char *, v: double *, step: double, step_fast: double, format: const char *, flags: ImGuiInputTextFlags) bool;
    fn InputScalar(label: const char *, data_type: ImGuiDataType, p_data: void *, p_step: const void *, p_step_fast: const void *, format: const char *, flags: ImGuiInputTextFlags) bool;
    fn InputScalarN(label: const char *, data_type: ImGuiDataType, p_data: void *, components: int, p_step: const void *, p_step_fast: const void *, format: const char *, flags: ImGuiInputTextFlags) bool;
    fn ColorEdit3(label: const char *, col: float[3], flags: ImGuiColorEditFlags) bool;
    fn ColorEdit4(label: const char *, col: float[4], flags: ImGuiColorEditFlags) bool;
    fn ColorPicker3(label: const char *, col: float[3], flags: ImGuiColorEditFlags) bool;
    fn ColorPicker4(label: const char *, col: float[4], flags: ImGuiColorEditFlags, ref_col: const float *) bool;
    fn ColorButton(desc_id: const char *, col: const ImVec4 &, flags: ImGuiColorEditFlags, size: const ImVec2 &) bool;
    fn SetColorEditOptions(flags: ImGuiColorEditFlags) void;
    fn TreeNode(label: const char *) bool;
    fn TreeNode(str_id: const char *, fmt: const char *) bool;
    fn TreeNode(ptr_id: const void *, fmt: const char *) bool;
    fn TreeNodeV(str_id: const char *, fmt: const char *, args: va_list) bool;
    fn TreeNodeV(ptr_id: const void *, fmt: const char *, args: va_list) bool;
    fn TreeNodeEx(label: const char *, flags: ImGuiTreeNodeFlags) bool;
    fn TreeNodeEx(str_id: const char *, flags: ImGuiTreeNodeFlags, fmt: const char *) bool;
    fn TreeNodeEx(ptr_id: const void *, flags: ImGuiTreeNodeFlags, fmt: const char *) bool;
    fn TreeNodeExV(str_id: const char *, flags: ImGuiTreeNodeFlags, fmt: const char *, args: va_list) bool;
    fn TreeNodeExV(ptr_id: const void *, flags: ImGuiTreeNodeFlags, fmt: const char *, args: va_list) bool;
    fn TreePush(str_id: const char *) void;
    fn TreePush(ptr_id: const void *) void;
    fn TreePop() void;
    fn GetTreeNodeToLabelSpacing() float;
    fn CollapsingHeader(label: const char *, flags: ImGuiTreeNodeFlags) bool;
    fn CollapsingHeader(label: const char *, p_visible: bool *, flags: ImGuiTreeNodeFlags) bool;
    fn SetNextItemOpen(is_open: bool, cond: ImGuiCond) void;
    fn SetNextItemStorageID(storage_id: ImGuiID) void;
    fn Selectable(label: const char *, selected: bool, flags: ImGuiSelectableFlags, size: const ImVec2 &) bool;
    fn Selectable(label: const char *, p_selected: bool *, flags: ImGuiSelectableFlags, size: const ImVec2 &) bool;
    fn BeginMultiSelect(flags: ImGuiMultiSelectFlags, selection_size: int, items_count: int) ImGuiMultiSelectIO *;
    fn EndMultiSelect() ImGuiMultiSelectIO *;
    fn SetNextItemSelectionUserData(selection_user_data: ImGuiSelectionUserData) void;
    fn IsItemToggledSelection() bool;
    fn BeginListBox(label: const char *, size: const ImVec2 &) bool;
    fn EndListBox() void;
    fn ListBox(label: const char *, current_item: int *, items: const char *const[], items_count: int, height_in_items: int) bool;
    fn ListBox(label: const char *, current_item: int *, getter: const char *(*)(void *, int), user_data: void *, items_count: int, height_in_items: int) bool;
    fn PlotLines(label: const char *, values: const float *, values_count: int, values_offset: int, overlay_text: const char *, scale_min: float, scale_max: float, graph_size: ImVec2, stride: int) void;
    fn PlotLines(label: const char *, values_getter: float (*)(void *, int), data: void *, values_count: int, values_offset: int, overlay_text: const char *, scale_min: float, scale_max: float, graph_size: ImVec2) void;
    fn PlotHistogram(label: const char *, values: const float *, values_count: int, values_offset: int, overlay_text: const char *, scale_min: float, scale_max: float, graph_size: ImVec2, stride: int) void;
    fn PlotHistogram(label: const char *, values_getter: float (*)(void *, int), data: void *, values_count: int, values_offset: int, overlay_text: const char *, scale_min: float, scale_max: float, graph_size: ImVec2) void;
    fn Value(prefix: const char *, b: bool) void;
    fn Value(prefix: const char *, v: int) void;
    fn Value(prefix: const char *, v: unsigned int) void;
    fn Value(prefix: const char *, v: float, float_format: const char *) void;
    fn BeginMenuBar() bool;
    fn EndMenuBar() void;
    fn BeginMainMenuBar() bool;
    fn EndMainMenuBar() void;
    fn BeginMenu(label: const char *, enabled: bool) bool;
    fn EndMenu() void;
    fn MenuItem(label: const char *, shortcut: const char *, selected: bool, enabled: bool) bool;
    fn MenuItem(label: const char *, shortcut: const char *, p_selected: bool *, enabled: bool) bool;
    fn BeginTooltip() bool;
    fn EndTooltip() void;
    fn SetTooltip(fmt: const char *) void;
    fn SetTooltipV(fmt: const char *, args: va_list) void;
    fn BeginItemTooltip() bool;
    fn SetItemTooltip(fmt: const char *) void;
    fn SetItemTooltipV(fmt: const char *, args: va_list) void;
    fn BeginPopup(str_id: const char *, flags: ImGuiWindowFlags) bool;
    fn BeginPopupModal(name: const char *, p_open: bool *, flags: ImGuiWindowFlags) bool;
    fn EndPopup() void;
    fn OpenPopup(str_id: const char *, popup_flags: ImGuiPopupFlags) void;
    fn OpenPopup(id: ImGuiID, popup_flags: ImGuiPopupFlags) void;
    fn OpenPopupOnItemClick(str_id: const char *, popup_flags: ImGuiPopupFlags) void;
    fn CloseCurrentPopup() void;
    fn BeginPopupContextItem(str_id: const char *, popup_flags: ImGuiPopupFlags) bool;
    fn BeginPopupContextWindow(str_id: const char *, popup_flags: ImGuiPopupFlags) bool;
    fn BeginPopupContextVoid(str_id: const char *, popup_flags: ImGuiPopupFlags) bool;
    fn IsPopupOpen(str_id: const char *, flags: ImGuiPopupFlags) bool;
    fn BeginTable(str_id: const char *, columns: int, flags: ImGuiTableFlags, outer_size: const ImVec2 &, inner_width: float) bool;
    fn EndTable() void;
    fn TableNextRow(row_flags: ImGuiTableRowFlags, min_row_height: float) void;
    fn TableNextColumn() bool;
    fn TableSetColumnIndex(column_n: int) bool;
    fn TableSetupColumn(label: const char *, flags: ImGuiTableColumnFlags, init_width_or_weight: float, user_id: ImGuiID) void;
    fn TableSetupScrollFreeze(cols: int, rows: int) void;
    fn TableHeader(label: const char *) void;
    fn TableHeadersRow() void;
    fn TableAngledHeadersRow() void;
    fn TableGetSortSpecs() ImGuiTableSortSpecs *;
    fn TableGetColumnCount() int;
    fn TableGetColumnIndex() int;
    fn TableGetRowIndex() int;
    fn TableGetColumnName(column_n: int) const char *;
    fn TableGetColumnFlags(column_n: int) ImGuiTableColumnFlags;
    fn TableSetColumnEnabled(column_n: int, v: bool) void;
    fn TableGetHoveredColumn() int;
    fn TableSetBgColor(target: ImGuiTableBgTarget, color: ImU32, column_n: int) void;
    fn Columns(count: int, id: const char *, borders: bool) void;
    fn NextColumn() void;
    fn GetColumnIndex() int;
    fn GetColumnWidth(column_index: int) float;
    fn SetColumnWidth(column_index: int, width: float) void;
    fn GetColumnOffset(column_index: int) float;
    fn SetColumnOffset(column_index: int, offset_x: float) void;
    fn GetColumnsCount() int;
    fn BeginTabBar(str_id: const char *, flags: ImGuiTabBarFlags) bool;
    fn EndTabBar() void;
    fn BeginTabItem(label: const char *, p_open: bool *, flags: ImGuiTabItemFlags) bool;
    fn EndTabItem() void;
    fn TabItemButton(label: const char *, flags: ImGuiTabItemFlags) bool;
    fn SetTabItemClosed(tab_or_docked_window_label: const char *) void;
    fn LogToTTY(auto_open_depth: int) void;
    fn LogToFile(auto_open_depth: int, filename: const char *) void;
    fn LogToClipboard(auto_open_depth: int) void;
    fn LogFinish() void;
    fn LogButtons() void;
    fn LogText(fmt: const char *) void;
    fn LogTextV(fmt: const char *, args: va_list) void;
    fn BeginDragDropSource(flags: ImGuiDragDropFlags) bool;
    fn SetDragDropPayload(type: const char *, data: const void *, sz: size_t, cond: ImGuiCond) bool;
    fn EndDragDropSource() void;
    fn BeginDragDropTarget() bool;
    fn AcceptDragDropPayload(type: const char *, flags: ImGuiDragDropFlags) const ImGuiPayload *;
    fn EndDragDropTarget() void;
    fn GetDragDropPayload() const ImGuiPayload *;
    fn BeginDisabled(disabled: bool) void;
    fn EndDisabled() void;
    fn PushClipRect(clip_rect_min: const ImVec2 &, clip_rect_max: const ImVec2 &, intersect_with_current_clip_rect: bool) void;
    fn PopClipRect() void;
    fn SetItemDefaultFocus() void;
    fn SetKeyboardFocusHere(offset: int) void;
    fn SetNavCursorVisible(visible: bool) void;
    fn SetNextItemAllowOverlap() void;
    fn IsItemHovered(flags: ImGuiHoveredFlags) bool;
    fn IsItemActive() bool;
    fn IsItemFocused() bool;
    fn IsItemClicked(mouse_button: ImGuiMouseButton) bool;
    fn IsItemVisible() bool;
    fn IsItemEdited() bool;
    fn IsItemActivated() bool;
    fn IsItemDeactivated() bool;
    fn IsItemDeactivatedAfterEdit() bool;
    fn IsItemToggledOpen() bool;
    fn IsAnyItemHovered() bool;
    fn IsAnyItemActive() bool;
    fn IsAnyItemFocused() bool;
    fn GetItemID() ImGuiID;
    fn GetItemRectMin() ImVec2;
    fn GetItemRectMax() ImVec2;
    fn GetItemRectSize() ImVec2;
    fn GetMainViewport() ImGuiViewport *;
    fn GetBackgroundDrawList() ImDrawList *;
    fn GetForegroundDrawList() ImDrawList *;
    fn IsRectVisible(size: const ImVec2 &) bool;
    fn IsRectVisible(rect_min: const ImVec2 &, rect_max: const ImVec2 &) bool;
    fn GetTime() double;
    fn GetFrameCount() int;
    fn GetDrawListSharedData() ImDrawListSharedData *;
    fn GetStyleColorName(idx: ImGuiCol) const char *;
    fn SetStateStorage(storage: ImGuiStorage *) void;
    fn GetStateStorage() ImGuiStorage *;
    fn CalcTextSize(text: const char *, text_end: const char *, hide_text_after_double_hash: bool, wrap_width: float) ImVec2;
    fn ColorConvertU32ToFloat4(in: ImU32) ImVec4;
    fn ColorConvertFloat4ToU32(in: const ImVec4 &) ImU32;
    fn ColorConvertRGBtoHSV(r: float, g: float, b: float, out_h: float &, out_s: float &, out_v: float &) void;
    fn ColorConvertHSVtoRGB(h: float, s: float, v: float, out_r: float &, out_g: float &, out_b: float &) void;
    fn IsKeyDown(key: ImGuiKey) bool;
    fn IsKeyPressed(key: ImGuiKey, repeat: bool) bool;
    fn IsKeyReleased(key: ImGuiKey) bool;
    fn IsKeyChordPressed(key_chord: ImGuiKeyChord) bool;
    fn GetKeyPressedAmount(key: ImGuiKey, repeat_delay: float, rate: float) int;
    fn GetKeyName(key: ImGuiKey) const char *;
    fn SetNextFrameWantCaptureKeyboard(want_capture_keyboard: bool) void;
    fn Shortcut(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags) bool;
    fn SetNextItemShortcut(key_chord: ImGuiKeyChord, flags: ImGuiInputFlags) void;
    fn SetItemKeyOwner(key: ImGuiKey) void;
    fn IsMouseDown(button: ImGuiMouseButton) bool;
    fn IsMouseClicked(button: ImGuiMouseButton, repeat: bool) bool;
    fn IsMouseReleased(button: ImGuiMouseButton) bool;
    fn IsMouseDoubleClicked(button: ImGuiMouseButton) bool;
    fn IsMouseReleasedWithDelay(button: ImGuiMouseButton, delay: float) bool;
    fn GetMouseClickedCount(button: ImGuiMouseButton) int;
    fn IsMouseHoveringRect(r_min: const ImVec2 &, r_max: const ImVec2 &, clip: bool) bool;
    fn IsMousePosValid(mouse_pos: const ImVec2 *) bool;
    fn IsAnyMouseDown() bool;
    fn GetMousePos() ImVec2;
    fn GetMousePosOnOpeningCurrentPopup() ImVec2;
    fn IsMouseDragging(button: ImGuiMouseButton, lock_threshold: float) bool;
    fn GetMouseDragDelta(button: ImGuiMouseButton, lock_threshold: float) ImVec2;
    fn ResetMouseDragDelta(button: ImGuiMouseButton) void;
    fn GetMouseCursor() ImGuiMouseCursor;
    fn SetMouseCursor(cursor_type: ImGuiMouseCursor) void;
    fn SetNextFrameWantCaptureMouse(want_capture_mouse: bool) void;
    fn GetClipboardText() const char *;
    fn SetClipboardText(text: const char *) void;
    fn LoadIniSettingsFromDisk(ini_filename: const char *) void;
    fn LoadIniSettingsFromMemory(ini_data: const char *, ini_size: size_t) void;
    fn SaveIniSettingsToDisk(ini_filename: const char *) void;
    fn SaveIniSettingsToMemory(out_ini_size: size_t *) const char *;
    fn DebugTextEncoding(text: const char *) void;
    fn DebugFlashStyleColor(idx: ImGuiCol) void;
    fn DebugStartItemPicker() void;
    fn DebugCheckVersionAndDataLayout(version_str: const char *, sz_io: size_t, sz_style: size_t, sz_vec2: size_t, sz_vec4: size_t, sz_drawvert: size_t, sz_drawidx: size_t) bool;
    fn DebugLog(fmt: const char *) void;
    fn DebugLogV(fmt: const char *, args: va_list) void;
    fn SetAllocatorFunctions(alloc_func: ImGuiMemAllocFunc, free_func: ImGuiMemFreeFunc, user_data: void *) void;
    fn GetAllocatorFunctions(p_alloc_func: ImGuiMemAllocFunc *, p_free_func: ImGuiMemFreeFunc *, p_user_data: void **) void;
    fn MemAlloc(size: size_t) void *;
    fn MemFree(ptr: void *) void;
  };
  enum(int) ImGuiWindowFlags_ {
  };
  enum(int) ImGuiChildFlags_ {
  };
  enum(int) ImGuiItemFlags_ {
  };
  enum(int) ImGuiInputTextFlags_ {
  };
  enum(int) ImGuiTreeNodeFlags_ {
  };
  enum(int) ImGuiPopupFlags_ {
  };
  enum(int) ImGuiSelectableFlags_ {
  };
  enum(int) ImGuiComboFlags_ {
  };
  enum(int) ImGuiTabBarFlags_ {
  };
  enum(int) ImGuiTabItemFlags_ {
  };
  enum(int) ImGuiFocusedFlags_ {
  };
  enum(int) ImGuiHoveredFlags_ {
  };
  enum(int) ImGuiDragDropFlags_ {
  };
  enum(int) ImGuiDataType_ {
  };
  enum(int) ImGuiDir {
  };
  enum(ImU8) ImGuiSortDirection {
  };
  enum(int) ImGuiKey {
  };
  enum(int) ImGuiInputFlags_ {
  };
  enum(int) ImGuiConfigFlags_ {
  };
  enum(int) ImGuiBackendFlags_ {
  };
  enum(int) ImGuiCol_ {
  };
  enum(int) ImGuiStyleVar_ {
  };
  enum(int) ImGuiButtonFlags_ {
  };
  enum(int) ImGuiColorEditFlags_ {
  };
  enum(int) ImGuiSliderFlags_ {
  };
  enum(int) ImGuiMouseButton_ {
  };
  enum(int) ImGuiMouseCursor_ {
  };
  enum(int) ImGuiMouseSource {
  };
  enum(int) ImGuiCond_ {
  };
  enum(int) ImGuiTableFlags_ {
  };
  enum(int) ImGuiTableColumnFlags_ {
  };
  enum(int) ImGuiTableRowFlags_ {
  };
  enum(int) ImGuiTableBgTarget_ {
  };
  struct ImGuiTableSortSpecs {
  };
  struct ImGuiTableColumnSortSpecs {
  };
  struct ImNewWrapper {
  };
  fn operator new(: size_t, : ImNewWrapper, ptr: void *) void *;
  fn operator delete(: void *, : ImNewWrapper, : void *) void;
  struct ImGuiStyle {
  };
  struct ImGuiKeyData {
  };
  struct ImGuiIO {
  };
  struct ImGuiInputTextCallbackData {
  };
  struct ImGuiSizeCallbackData {
  };
  struct ImGuiPayload {
  };
  struct ImGuiOnceUponAFrame {
  };
  struct ImGuiTextFilter {
  };
  struct ImGuiTextRange {
  };
  struct ImGuiTextBuffer {
  };
  struct ImGuiStoragePair {
  };
  struct ImGuiStorage {
  };
  struct ImGuiListClipper {
  };
  struct ImColor {
  };
  enum(int) ImGuiMultiSelectFlags_ {
  };
  struct ImGuiMultiSelectIO {
  };
  enum(int) ImGuiSelectionRequestType {
  };
  struct ImGuiSelectionRequest {
  };
  struct ImGuiSelectionBasicStorage {
  };
  struct ImGuiSelectionExternalStorage {
  };
  typedef unsigned short ImDrawIdx;
  typedef void (*)(const ImDrawList *, const ImDrawCmd *) ImDrawCallback;
  struct ImDrawCmd {
  };
  struct ImDrawVert {
  };
  struct ImDrawCmdHeader {
  };
  struct ImDrawChannel {
  };
  struct ImDrawListSplitter {
  };
  enum(int) ImDrawFlags_ {
  };
  enum(int) ImDrawListFlags_ {
  };
  struct ImDrawList {
  };
  struct ImDrawData {
  };
  enum(int) ImTextureFormat {
  };
  enum(int) ImTextureStatus {
  };
  struct ImTextureRect {
  };
  struct ImTextureData {
  };
  struct ImFontConfig {
  };
  struct ImFontGlyph {
  };
  struct ImFontGlyphRangesBuilder {
  };
  typedef int ImFontAtlasRectId;
  struct ImFontAtlasRect {
  };
  enum(int) ImFontAtlasFlags_ {
  };
  struct ImFontAtlas {
  };
  struct ImFontBaked {
  };
  enum(int) ImFontFlags_ {
  };
  struct ImFont {
  };
  enum(int) ImGuiViewportFlags_ {
  };
  struct ImGuiViewport {
  };
  struct ImGuiPlatformIO {
  };
  struct ImGuiPlatformImeData {
  };
};
