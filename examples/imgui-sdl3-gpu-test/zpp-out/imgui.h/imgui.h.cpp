// This file was auto-generated by github:nukkeldev/zpp; I wouldn't recommend editing it.

#include <stdarg.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wformat-security"

#include "imgui.h"
#include "imgui_impl_sdl3.h"
#include "imgui_impl_sdlgpu3.h"

extern "C" unsigned long long ImTextureRef_GetTexID__d8dce782ceb9ab42(ImTextureRef* obj) {
	return obj->GetTexID();
}
extern "C" ImGuiContext* ImGui_CreateContext__9c317cc3bbd69792(ImFontAtlas* shared_font_atlas) {
	return ImGui::CreateContext(shared_font_atlas);
}
extern "C" void ImGui_DestroyContext__33355240a3c270a1(ImGuiContext* ctx) {
	ImGui::DestroyContext(ctx);
}
extern "C" ImGuiContext* ImGui_GetCurrentContext__bfcbdecf32b4f9ee() {
	return ImGui::GetCurrentContext();
}
extern "C" void ImGui_SetCurrentContext__cf8edc56a4c808a8(ImGuiContext* ctx) {
	ImGui::SetCurrentContext(ctx);
}
extern "C" ImGuiIO* ImGui_GetIO__867c1837c428c2c0() {
	return &ImGui::GetIO();
}
extern "C" ImGuiPlatformIO* ImGui_GetPlatformIO__2abb1642f8d692ff() {
	return &ImGui::GetPlatformIO();
}
extern "C" ImGuiStyle* ImGui_GetStyle__ce2435ddf1d8bbdc() {
	return &ImGui::GetStyle();
}
extern "C" void ImGui_NewFrame__c7eb4c9ef72f9a92() {
	ImGui::NewFrame();
}
extern "C" void ImGui_EndFrame__85cb800eb2d049e1() {
	ImGui::EndFrame();
}
extern "C" void ImGui_Render__d74f51afaad3bb45() {
	ImGui::Render();
}
extern "C" ImDrawData* ImGui_GetDrawData__75b329a9337a4684() {
	return ImGui::GetDrawData();
}
extern "C" void ImGui_ShowDemoWindow__bf3697c59b1e3f56(bool* p_open) {
	ImGui::ShowDemoWindow(p_open);
}
extern "C" void ImGui_ShowMetricsWindow__1b1d940fa8fb0d3(bool* p_open) {
	ImGui::ShowMetricsWindow(p_open);
}
extern "C" void ImGui_ShowDebugLogWindow__61c59fe9a4ee63dd(bool* p_open) {
	ImGui::ShowDebugLogWindow(p_open);
}
extern "C" void ImGui_ShowIDStackToolWindow__3f55c4ebf0c26a3d(bool* p_open) {
	ImGui::ShowIDStackToolWindow(p_open);
}
extern "C" void ImGui_ShowAboutWindow__8e94b4fe17f9480a(bool* p_open) {
	ImGui::ShowAboutWindow(p_open);
}
extern "C" void ImGui_ShowStyleEditor__9295e9c397962dd9(ImGuiStyle* ref) {
	ImGui::ShowStyleEditor(ref);
}
extern "C" bool ImGui_ShowStyleSelector__15aa917f33eeee46(const char* label) {
	return ImGui::ShowStyleSelector(label);
}
extern "C" void ImGui_ShowFontSelector__7279f694874f3f6f(const char* label) {
	ImGui::ShowFontSelector(label);
}
extern "C" void ImGui_ShowUserGuide__b7066157174a867a() {
	ImGui::ShowUserGuide();
}
extern "C" const char* ImGui_GetVersion__6769da60bc608dcb() {
	return ImGui::GetVersion();
}
extern "C" void ImGui_StyleColorsDark__f3026e652fa5a3d4(ImGuiStyle* dst) {
	ImGui::StyleColorsDark(dst);
}
extern "C" void ImGui_StyleColorsLight__cbe762f272234e68(ImGuiStyle* dst) {
	ImGui::StyleColorsLight(dst);
}
extern "C" void ImGui_StyleColorsClassic__ec37fdbb560abf49(ImGuiStyle* dst) {
	ImGui::StyleColorsClassic(dst);
}
extern "C" bool ImGui_Begin__5ca733c608c9f722(const char* name, bool* p_open, int flags) {
	return ImGui::Begin(name, p_open, flags);
}
extern "C" void ImGui_End__891dd9019e6ec9af() {
	ImGui::End();
}
extern "C" bool ImGui_BeginChild__b62a89170c85f9f4(const char* str_id, const ImVec2* size, int child_flags, int window_flags) {
	return ImGui::BeginChild(str_id, *size, child_flags, window_flags);
}
extern "C" bool ImGui_BeginChild__b62a89170c85f9f4_1(unsigned int id, const ImVec2* size, int child_flags, int window_flags) {
	return ImGui::BeginChild(id, *size, child_flags, window_flags);
}
extern "C" void ImGui_EndChild__748a79294f8d079c() {
	ImGui::EndChild();
}
extern "C" bool ImGui_IsWindowAppearing__d8ef0284b9adfaf3() {
	return ImGui::IsWindowAppearing();
}
extern "C" bool ImGui_IsWindowCollapsed__70e65449d3ca41a3() {
	return ImGui::IsWindowCollapsed();
}
extern "C" bool ImGui_IsWindowFocused__3f96fdfb44995054(int flags) {
	return ImGui::IsWindowFocused(flags);
}
extern "C" bool ImGui_IsWindowHovered__9aa3442dcec331b0(int flags) {
	return ImGui::IsWindowHovered(flags);
}
extern "C" ImDrawList* ImGui_GetWindowDrawList__d62b561ccc2f14a5() {
	return ImGui::GetWindowDrawList();
}
extern "C" void ImGui_GetWindowPos__9c3da571577684d9(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetWindowPos();
}
extern "C" void ImGui_GetWindowSize__d07ac5451ca160a6(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetWindowSize();
}
extern "C" float ImGui_GetWindowWidth__1ec35a8c320310f() {
	return ImGui::GetWindowWidth();
}
extern "C" float ImGui_GetWindowHeight__87734b279d1f95ed() {
	return ImGui::GetWindowHeight();
}
extern "C" void ImGui_SetNextWindowPos__f0b25f79948ac461(const ImVec2* pos, int cond, const ImVec2* pivot) {
	ImGui::SetNextWindowPos(*pos, cond, *pivot);
}
extern "C" void ImGui_SetNextWindowSize__793a40bb853049cc(const ImVec2* size, int cond) {
	ImGui::SetNextWindowSize(*size, cond);
}
extern "C" void ImGui_SetNextWindowSizeConstraints__96ea5ee82c357b37(const ImVec2* size_min, const ImVec2* size_max, void (*custom_callback)(ImGuiSizeCallbackData*), void* custom_callback_data) {
	ImGui::SetNextWindowSizeConstraints(*size_min, *size_max, custom_callback, custom_callback_data);
}
extern "C" void ImGui_SetNextWindowContentSize__8a51bfd3137dc3df(const ImVec2* size) {
	ImGui::SetNextWindowContentSize(*size);
}
extern "C" void ImGui_SetNextWindowCollapsed__2761348ab0ff9f09(bool collapsed, int cond) {
	ImGui::SetNextWindowCollapsed(collapsed, cond);
}
extern "C" void ImGui_SetNextWindowFocus__83b1465119475af() {
	ImGui::SetNextWindowFocus();
}
extern "C" void ImGui_SetNextWindowScroll__bb3b6dc045ee5fcd(const ImVec2* scroll) {
	ImGui::SetNextWindowScroll(*scroll);
}
extern "C" void ImGui_SetNextWindowBgAlpha__7c4214955c599924(float alpha) {
	ImGui::SetNextWindowBgAlpha(alpha);
}
extern "C" void ImGui_SetWindowPos__ca231277021bb406(const ImVec2* pos, int cond) {
	ImGui::SetWindowPos(*pos, cond);
}
extern "C" void ImGui_SetWindowSize__73f4884420006287(const ImVec2* size, int cond) {
	ImGui::SetWindowSize(*size, cond);
}
extern "C" void ImGui_SetWindowCollapsed__f8b42d292820f5f5(bool collapsed, int cond) {
	ImGui::SetWindowCollapsed(collapsed, cond);
}
extern "C" void ImGui_SetWindowFocus__e3dec7b29fcf4747() {
	ImGui::SetWindowFocus();
}
extern "C" void ImGui_SetWindowPos__ca231277021bb406_1(const char* name, const ImVec2* pos, int cond) {
	ImGui::SetWindowPos(name, *pos, cond);
}
extern "C" void ImGui_SetWindowSize__73f4884420006287_1(const char* name, const ImVec2* size, int cond) {
	ImGui::SetWindowSize(name, *size, cond);
}
extern "C" void ImGui_SetWindowCollapsed__f8b42d292820f5f5_1(const char* name, bool collapsed, int cond) {
	ImGui::SetWindowCollapsed(name, collapsed, cond);
}
extern "C" void ImGui_SetWindowFocus__e3dec7b29fcf4747_1(const char* name) {
	ImGui::SetWindowFocus(name);
}
extern "C" float ImGui_GetScrollX__84968e0c6bdcd61b() {
	return ImGui::GetScrollX();
}
extern "C" float ImGui_GetScrollY__d1cf11a9dca5eea5() {
	return ImGui::GetScrollY();
}
extern "C" void ImGui_SetScrollX__5a55f048357054ad(float scroll_x) {
	ImGui::SetScrollX(scroll_x);
}
extern "C" void ImGui_SetScrollY__6c7ff2b3c6eacd5b(float scroll_y) {
	ImGui::SetScrollY(scroll_y);
}
extern "C" float ImGui_GetScrollMaxX__314d38c641ba3a5a() {
	return ImGui::GetScrollMaxX();
}
extern "C" float ImGui_GetScrollMaxY__629cefd1030bceb9() {
	return ImGui::GetScrollMaxY();
}
extern "C" void ImGui_SetScrollHereX__d18377632477bfc8(float center_x_ratio) {
	ImGui::SetScrollHereX(center_x_ratio);
}
extern "C" void ImGui_SetScrollHereY__b0041332a8430e31(float center_y_ratio) {
	ImGui::SetScrollHereY(center_y_ratio);
}
extern "C" void ImGui_SetScrollFromPosX__73b6c80d834f33b2(float local_x, float center_x_ratio) {
	ImGui::SetScrollFromPosX(local_x, center_x_ratio);
}
extern "C" void ImGui_SetScrollFromPosY__ef44d3f321cca53a(float local_y, float center_y_ratio) {
	ImGui::SetScrollFromPosY(local_y, center_y_ratio);
}
extern "C" void ImGui_PushFont__57a48dfb3f59b615(ImFont* font, float font_size_base_unscaled) {
	ImGui::PushFont(font, font_size_base_unscaled);
}
extern "C" void ImGui_PopFont__e69ab332756a54c9() {
	ImGui::PopFont();
}
extern "C" ImFont* ImGui_GetFont__c886c34a5d91fad9() {
	return ImGui::GetFont();
}
extern "C" float ImGui_GetFontSize__b261006d1784e993() {
	return ImGui::GetFontSize();
}
extern "C" ImFontBaked* ImGui_GetFontBaked__3f06989c0a78b9d3() {
	return ImGui::GetFontBaked();
}
extern "C" void ImGui_PushStyleColor__87b647a88ff97a78(int idx, unsigned int col) {
	ImGui::PushStyleColor(idx, col);
}
extern "C" void ImGui_PushStyleColor__87b647a88ff97a78_1(int idx, const ImVec4* col) {
	ImGui::PushStyleColor(idx, *col);
}
extern "C" void ImGui_PopStyleColor__b8867429a4a3514e(int count) {
	ImGui::PopStyleColor(count);
}
extern "C" void ImGui_PushStyleVar__3d7496da947837c5(int idx, float val) {
	ImGui::PushStyleVar(idx, val);
}
extern "C" void ImGui_PushStyleVar__3d7496da947837c5_1(int idx, const ImVec2* val) {
	ImGui::PushStyleVar(idx, *val);
}
extern "C" void ImGui_PushStyleVarX__e1edf590a5efc94d(int idx, float val_x) {
	ImGui::PushStyleVarX(idx, val_x);
}
extern "C" void ImGui_PushStyleVarY__9a47e6fce2470943(int idx, float val_y) {
	ImGui::PushStyleVarY(idx, val_y);
}
extern "C" void ImGui_PopStyleVar__133858151c313dfc(int count) {
	ImGui::PopStyleVar(count);
}
extern "C" void ImGui_PushItemFlag__ac157aa2a70e24a5(int option, bool enabled) {
	ImGui::PushItemFlag(option, enabled);
}
extern "C" void ImGui_PopItemFlag__2bd31c7dc71b28a9() {
	ImGui::PopItemFlag();
}
extern "C" void ImGui_PushItemWidth__8a4b1e33423001bf(float item_width) {
	ImGui::PushItemWidth(item_width);
}
extern "C" void ImGui_PopItemWidth__a460714259b22669() {
	ImGui::PopItemWidth();
}
extern "C" void ImGui_SetNextItemWidth__dd36b3db0cbfbee8(float item_width) {
	ImGui::SetNextItemWidth(item_width);
}
extern "C" float ImGui_CalcItemWidth__70ec92cb8051a755() {
	return ImGui::CalcItemWidth();
}
extern "C" void ImGui_PushTextWrapPos__87f1f983d508839f(float wrap_local_pos_x) {
	ImGui::PushTextWrapPos(wrap_local_pos_x);
}
extern "C" void ImGui_PopTextWrapPos__aab213687042221b() {
	ImGui::PopTextWrapPos();
}
extern "C" void ImGui_GetFontTexUvWhitePixel__d4cfaebda0fb1871(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetFontTexUvWhitePixel();
}
extern "C" unsigned int ImGui_GetColorU32__6c8565e89ac391a(int idx, float alpha_mul) {
	return ImGui::GetColorU32(idx, alpha_mul);
}
extern "C" unsigned int ImGui_GetColorU32__6c8565e89ac391a_1(const ImVec4* col) {
	return ImGui::GetColorU32(*col);
}
extern "C" unsigned int ImGui_GetColorU32__6c8565e89ac391a_2(unsigned int col, float alpha_mul) {
	return ImGui::GetColorU32(col, alpha_mul);
}
extern "C" const ImVec4* ImGui_GetStyleColorVec4__5c8f7f462421a3ef(int idx) {
	return &ImGui::GetStyleColorVec4(idx);
}
extern "C" void ImGui_GetCursorScreenPos__d51c49a91c35dfd8(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetCursorScreenPos();
}
extern "C" void ImGui_SetCursorScreenPos__b9044e0998623734(const ImVec2* pos) {
	ImGui::SetCursorScreenPos(*pos);
}
extern "C" void ImGui_GetContentRegionAvail__c0e1c737c8050afd(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetContentRegionAvail();
}
extern "C" void ImGui_GetCursorPos__3f9edd37baa45304(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetCursorPos();
}
extern "C" float ImGui_GetCursorPosX__b2a3841e1222fce1() {
	return ImGui::GetCursorPosX();
}
extern "C" float ImGui_GetCursorPosY__2edbcf99dd193efe() {
	return ImGui::GetCursorPosY();
}
extern "C" void ImGui_SetCursorPos__b128b896f245bd95(const ImVec2* local_pos) {
	ImGui::SetCursorPos(*local_pos);
}
extern "C" void ImGui_SetCursorPosX__97ad7c67ea44b428(float local_x) {
	ImGui::SetCursorPosX(local_x);
}
extern "C" void ImGui_SetCursorPosY__fa5a7e361476b9b8(float local_y) {
	ImGui::SetCursorPosY(local_y);
}
extern "C" void ImGui_GetCursorStartPos__c7930fa4bf3886b(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetCursorStartPos();
}
extern "C" void ImGui_Separator__ef50d635e9b2c5da() {
	ImGui::Separator();
}
extern "C" void ImGui_SameLine__19388aad62c2dfcf(float offset_from_start_x, float spacing) {
	ImGui::SameLine(offset_from_start_x, spacing);
}
extern "C" void ImGui_NewLine__d04a7caa9a9f89c8() {
	ImGui::NewLine();
}
extern "C" void ImGui_Spacing__173d4916acba51a5() {
	ImGui::Spacing();
}
extern "C" void ImGui_Dummy__25db99e558deb632(const ImVec2* size) {
	ImGui::Dummy(*size);
}
extern "C" void ImGui_Indent__6247f93594279607(float indent_w) {
	ImGui::Indent(indent_w);
}
extern "C" void ImGui_Unindent__42ea795e352a8ac4(float indent_w) {
	ImGui::Unindent(indent_w);
}
extern "C" void ImGui_BeginGroup__2fdce6f84c57ba7() {
	ImGui::BeginGroup();
}
extern "C" void ImGui_EndGroup__ab8c40173d0e8caf() {
	ImGui::EndGroup();
}
extern "C" void ImGui_AlignTextToFramePadding__72c39acb262c8946() {
	ImGui::AlignTextToFramePadding();
}
extern "C" float ImGui_GetTextLineHeight__1b5674cc51da2dda() {
	return ImGui::GetTextLineHeight();
}
extern "C" float ImGui_GetTextLineHeightWithSpacing__18a388dc29f73481() {
	return ImGui::GetTextLineHeightWithSpacing();
}
extern "C" float ImGui_GetFrameHeight__c1b4a6f8a6f600cf() {
	return ImGui::GetFrameHeight();
}
extern "C" float ImGui_GetFrameHeightWithSpacing__2618fb3737ae118() {
	return ImGui::GetFrameHeightWithSpacing();
}
extern "C" void ImGui_PushID__c1f47dc30561eb97(const char* str_id) {
	ImGui::PushID(str_id);
}
extern "C" void ImGui_PushID__c1f47dc30561eb97_1(const char* str_id_begin, const char* str_id_end) {
	ImGui::PushID(str_id_begin, str_id_end);
}
extern "C" void ImGui_PushID__c1f47dc30561eb97_2(const void* ptr_id) {
	ImGui::PushID(ptr_id);
}
extern "C" void ImGui_PushID__c1f47dc30561eb97_3(int int_id) {
	ImGui::PushID(int_id);
}
extern "C" void ImGui_PopID__f836dcff58c09f7a() {
	ImGui::PopID();
}
extern "C" unsigned int ImGui_GetID__3c6145040d727c96(const char* str_id) {
	return ImGui::GetID(str_id);
}
extern "C" unsigned int ImGui_GetID__3c6145040d727c96_1(const char* str_id_begin, const char* str_id_end) {
	return ImGui::GetID(str_id_begin, str_id_end);
}
extern "C" unsigned int ImGui_GetID__3c6145040d727c96_2(const void* ptr_id) {
	return ImGui::GetID(ptr_id);
}
extern "C" unsigned int ImGui_GetID__3c6145040d727c96_3(int int_id) {
	return ImGui::GetID(int_id);
}
extern "C" void ImGui_TextUnformatted__a7b97b5a7ebce722(const char* text, const char* text_end) {
	ImGui::TextUnformatted(text, text_end);
}
extern "C" void ImGui_Text__5e98d1ef5d3f41bd(const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::Text(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_TextV__2c72c613835cffdf(const char* fmt, char* args) {
	ImGui::TextV(fmt, args);
}
extern "C" void ImGui_TextColored__49b349d1af96e43e(const ImVec4* col, const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::TextColored(*col, fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_TextColoredV__5b9a62df7a068eb3(const ImVec4* col, const char* fmt, char* args) {
	ImGui::TextColoredV(*col, fmt, args);
}
extern "C" void ImGui_TextDisabled__92ec324b4be7a6f2(const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::TextDisabled(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_TextDisabledV__50d5260b03138928(const char* fmt, char* args) {
	ImGui::TextDisabledV(fmt, args);
}
extern "C" void ImGui_TextWrapped__ed4a12dc9ab5f371(const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::TextWrapped(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_TextWrappedV__d77e855d2ecbecb2(const char* fmt, char* args) {
	ImGui::TextWrappedV(fmt, args);
}
extern "C" void ImGui_LabelText__1c776b0da8834f2a(const char* label, const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::LabelText(label, fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_LabelTextV__3d1b1739b4df6cf6(const char* label, const char* fmt, char* args) {
	ImGui::LabelTextV(label, fmt, args);
}
extern "C" void ImGui_BulletText__ff1531d7aa2f61e4(const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::BulletText(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_BulletTextV__aadf1dfd679856c6(const char* fmt, char* args) {
	ImGui::BulletTextV(fmt, args);
}
extern "C" void ImGui_SeparatorText__73af9b61ffe008a9(const char* label) {
	ImGui::SeparatorText(label);
}
extern "C" bool ImGui_Button__e28abe15ad2a7be8(const char* label, const ImVec2* size) {
	return ImGui::Button(label, *size);
}
extern "C" bool ImGui_SmallButton__6812ee491c7f6878(const char* label) {
	return ImGui::SmallButton(label);
}
extern "C" bool ImGui_InvisibleButton__7affb17028b1cc7(const char* str_id, const ImVec2* size, int flags) {
	return ImGui::InvisibleButton(str_id, *size, flags);
}
extern "C" bool ImGui_ArrowButton__87f42cbc97fe4d85(const char* str_id, ImGuiDir dir) {
	return ImGui::ArrowButton(str_id, dir);
}
extern "C" bool ImGui_Checkbox__3499a6c7b80278b8(const char* label, bool* v) {
	return ImGui::Checkbox(label, v);
}
extern "C" bool ImGui_CheckboxFlags__42b093e3a3e5aa3(const char* label, int* flags, int flags_value) {
	return ImGui::CheckboxFlags(label, flags, flags_value);
}
extern "C" bool ImGui_CheckboxFlags__42b093e3a3e5aa3_1(const char* label, unsigned int* flags, unsigned int flags_value) {
	return ImGui::CheckboxFlags(label, flags, flags_value);
}
extern "C" bool ImGui_RadioButton__fee2fe660618d769(const char* label, bool active) {
	return ImGui::RadioButton(label, active);
}
extern "C" bool ImGui_RadioButton__fee2fe660618d769_1(const char* label, int* v, int v_button) {
	return ImGui::RadioButton(label, v, v_button);
}
extern "C" void ImGui_ProgressBar__3871449f79d4c768(float fraction, const ImVec2* size_arg, const char* overlay) {
	ImGui::ProgressBar(fraction, *size_arg, overlay);
}
extern "C" void ImGui_Bullet__157dc592949a90fe() {
	ImGui::Bullet();
}
extern "C" bool ImGui_TextLink__b7377a716215da2c(const char* label) {
	return ImGui::TextLink(label);
}
extern "C" bool ImGui_TextLinkOpenURL__2d673e51a68188b8(const char* label, const char* url) {
	return ImGui::TextLinkOpenURL(label, url);
}
extern "C" void ImGui_Image__342c5ebe2ac95d69(ImTextureRef tex_ref, const ImVec2* image_size, const ImVec2* uv0, const ImVec2* uv1) {
	ImGui::Image(tex_ref, *image_size, *uv0, *uv1);
}
extern "C" void ImGui_ImageWithBg__b8052ea7f43c19e6(ImTextureRef tex_ref, const ImVec2* image_size, const ImVec2* uv0, const ImVec2* uv1, const ImVec4* bg_col, const ImVec4* tint_col) {
	ImGui::ImageWithBg(tex_ref, *image_size, *uv0, *uv1, *bg_col, *tint_col);
}
extern "C" bool ImGui_ImageButton__603286a5b208ba3a(const char* str_id, ImTextureRef tex_ref, const ImVec2* image_size, const ImVec2* uv0, const ImVec2* uv1, const ImVec4* bg_col, const ImVec4* tint_col) {
	return ImGui::ImageButton(str_id, tex_ref, *image_size, *uv0, *uv1, *bg_col, *tint_col);
}
extern "C" bool ImGui_BeginCombo__982eb6157ae00543(const char* label, const char* preview_value, int flags) {
	return ImGui::BeginCombo(label, preview_value, flags);
}
extern "C" void ImGui_EndCombo__7b85c20ecad8113c() {
	ImGui::EndCombo();
}
extern "C" bool ImGui_Combo__33b7a8c5bbd21f1c(const char* label, int* current_item, const char* items[], int items_count, int popup_max_height_in_items) {
	return ImGui::Combo(label, current_item, items, items_count, popup_max_height_in_items);
}
extern "C" bool ImGui_Combo__33b7a8c5bbd21f1c_1(const char* label, int* current_item, const char* items_separated_by_zeros, int popup_max_height_in_items) {
	return ImGui::Combo(label, current_item, items_separated_by_zeros, popup_max_height_in_items);
}
extern "C" bool ImGui_Combo__33b7a8c5bbd21f1c_2(const char* label, int* current_item, const char* (*getter)(void*, int), void* user_data, int items_count, int popup_max_height_in_items) {
	return ImGui::Combo(label, current_item, getter, user_data, items_count, popup_max_height_in_items);
}
extern "C" bool ImGui_DragFloat__2dc3ae63ba4838e5(const char* label, float* v, float v_speed, float v_min, float v_max, const char* format, int flags) {
	return ImGui::DragFloat(label, v, v_speed, v_min, v_max, format, flags);
}
extern "C" bool ImGui_DragFloat2__8d9fe5eb1a30b1ed(const char* label, float v[2], float v_speed, float v_min, float v_max, const char* format, int flags) {
	return ImGui::DragFloat2(label, v, v_speed, v_min, v_max, format, flags);
}
extern "C" bool ImGui_DragFloat3__50571b34758bde05(const char* label, float v[3], float v_speed, float v_min, float v_max, const char* format, int flags) {
	return ImGui::DragFloat3(label, v, v_speed, v_min, v_max, format, flags);
}
extern "C" bool ImGui_DragFloat4__6b7a71b0474266f(const char* label, float v[4], float v_speed, float v_min, float v_max, const char* format, int flags) {
	return ImGui::DragFloat4(label, v, v_speed, v_min, v_max, format, flags);
}
extern "C" bool ImGui_DragFloatRange2__dc5350ec4962166(const char* label, float* v_current_min, float* v_current_max, float v_speed, float v_min, float v_max, const char* format, const char* format_max, int flags) {
	return ImGui::DragFloatRange2(label, v_current_min, v_current_max, v_speed, v_min, v_max, format, format_max, flags);
}
extern "C" bool ImGui_DragInt__48968c18374e6155(const char* label, int* v, float v_speed, int v_min, int v_max, const char* format, int flags) {
	return ImGui::DragInt(label, v, v_speed, v_min, v_max, format, flags);
}
extern "C" bool ImGui_DragInt2__4a9cbfee33f542eb(const char* label, int v[2], float v_speed, int v_min, int v_max, const char* format, int flags) {
	return ImGui::DragInt2(label, v, v_speed, v_min, v_max, format, flags);
}
extern "C" bool ImGui_DragInt3__acb39df9ce4ad4ee(const char* label, int v[3], float v_speed, int v_min, int v_max, const char* format, int flags) {
	return ImGui::DragInt3(label, v, v_speed, v_min, v_max, format, flags);
}
extern "C" bool ImGui_DragInt4__2ce7c23c675dc127(const char* label, int v[4], float v_speed, int v_min, int v_max, const char* format, int flags) {
	return ImGui::DragInt4(label, v, v_speed, v_min, v_max, format, flags);
}
extern "C" bool ImGui_DragIntRange2__4bd494b56354a8db(const char* label, int* v_current_min, int* v_current_max, float v_speed, int v_min, int v_max, const char* format, const char* format_max, int flags) {
	return ImGui::DragIntRange2(label, v_current_min, v_current_max, v_speed, v_min, v_max, format, format_max, flags);
}
extern "C" bool ImGui_DragScalar__6f89f343e11e6509(const char* label, int data_type, void* p_data, float v_speed, const void* p_min, const void* p_max, const char* format, int flags) {
	return ImGui::DragScalar(label, data_type, p_data, v_speed, p_min, p_max, format, flags);
}
extern "C" bool ImGui_DragScalarN__ed4b5a615065148d(const char* label, int data_type, void* p_data, int components, float v_speed, const void* p_min, const void* p_max, const char* format, int flags) {
	return ImGui::DragScalarN(label, data_type, p_data, components, v_speed, p_min, p_max, format, flags);
}
extern "C" bool ImGui_SliderFloat__8399777afcd36ad4(const char* label, float* v, float v_min, float v_max, const char* format, int flags) {
	return ImGui::SliderFloat(label, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_SliderFloat2__2919a8fede815d44(const char* label, float v[2], float v_min, float v_max, const char* format, int flags) {
	return ImGui::SliderFloat2(label, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_SliderFloat3__29272244e3ee6130(const char* label, float v[3], float v_min, float v_max, const char* format, int flags) {
	return ImGui::SliderFloat3(label, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_SliderFloat4__f8d7b5965b0e3d6c(const char* label, float v[4], float v_min, float v_max, const char* format, int flags) {
	return ImGui::SliderFloat4(label, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_SliderAngle__e2ef2656c22a6e81(const char* label, float* v_rad, float v_degrees_min, float v_degrees_max, const char* format, int flags) {
	return ImGui::SliderAngle(label, v_rad, v_degrees_min, v_degrees_max, format, flags);
}
extern "C" bool ImGui_SliderInt__b28ef1af6824a1e3(const char* label, int* v, int v_min, int v_max, const char* format, int flags) {
	return ImGui::SliderInt(label, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_SliderInt2__271097e76dee05c6(const char* label, int v[2], int v_min, int v_max, const char* format, int flags) {
	return ImGui::SliderInt2(label, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_SliderInt3__87cf89f9012a5f5a(const char* label, int v[3], int v_min, int v_max, const char* format, int flags) {
	return ImGui::SliderInt3(label, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_SliderInt4__f1cc04f2b79d4aa0(const char* label, int v[4], int v_min, int v_max, const char* format, int flags) {
	return ImGui::SliderInt4(label, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_SliderScalar__b382a45ea0a95840(const char* label, int data_type, void* p_data, const void* p_min, const void* p_max, const char* format, int flags) {
	return ImGui::SliderScalar(label, data_type, p_data, p_min, p_max, format, flags);
}
extern "C" bool ImGui_SliderScalarN__11edf311ba51a3e4(const char* label, int data_type, void* p_data, int components, const void* p_min, const void* p_max, const char* format, int flags) {
	return ImGui::SliderScalarN(label, data_type, p_data, components, p_min, p_max, format, flags);
}
extern "C" bool ImGui_VSliderFloat__a024399e5bb6641b(const char* label, const ImVec2* size, float* v, float v_min, float v_max, const char* format, int flags) {
	return ImGui::VSliderFloat(label, *size, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_VSliderInt__a09b40107a01af8e(const char* label, const ImVec2* size, int* v, int v_min, int v_max, const char* format, int flags) {
	return ImGui::VSliderInt(label, *size, v, v_min, v_max, format, flags);
}
extern "C" bool ImGui_VSliderScalar__bd3c9c10bbffc6d6(const char* label, const ImVec2* size, int data_type, void* p_data, const void* p_min, const void* p_max, const char* format, int flags) {
	return ImGui::VSliderScalar(label, *size, data_type, p_data, p_min, p_max, format, flags);
}
extern "C" bool ImGui_InputText__fb724d96c0a5a49f(const char* label, char* buf, unsigned long long buf_size, int flags, int (*callback)(ImGuiInputTextCallbackData*), void* user_data) {
	return ImGui::InputText(label, buf, buf_size, flags, callback, user_data);
}
extern "C" bool ImGui_InputTextMultiline__5c703f04cb39e5b7(const char* label, char* buf, unsigned long long buf_size, const ImVec2* size, int flags, int (*callback)(ImGuiInputTextCallbackData*), void* user_data) {
	return ImGui::InputTextMultiline(label, buf, buf_size, *size, flags, callback, user_data);
}
extern "C" bool ImGui_InputTextWithHint__be7651508dbae4e5(const char* label, const char* hint, char* buf, unsigned long long buf_size, int flags, int (*callback)(ImGuiInputTextCallbackData*), void* user_data) {
	return ImGui::InputTextWithHint(label, hint, buf, buf_size, flags, callback, user_data);
}
extern "C" bool ImGui_InputFloat__2f9ccf037b725ed1(const char* label, float* v, float step, float step_fast, const char* format, int flags) {
	return ImGui::InputFloat(label, v, step, step_fast, format, flags);
}
extern "C" bool ImGui_InputFloat2__8ab44e1eae8baa7c(const char* label, float v[2], const char* format, int flags) {
	return ImGui::InputFloat2(label, v, format, flags);
}
extern "C" bool ImGui_InputFloat3__4c27204fb850b1fa(const char* label, float v[3], const char* format, int flags) {
	return ImGui::InputFloat3(label, v, format, flags);
}
extern "C" bool ImGui_InputFloat4__fe6d60c91b449b3(const char* label, float v[4], const char* format, int flags) {
	return ImGui::InputFloat4(label, v, format, flags);
}
extern "C" bool ImGui_InputInt__97f2b8e96dff3897(const char* label, int* v, int step, int step_fast, int flags) {
	return ImGui::InputInt(label, v, step, step_fast, flags);
}
extern "C" bool ImGui_InputInt2__6e8e822a289682b6(const char* label, int v[2], int flags) {
	return ImGui::InputInt2(label, v, flags);
}
extern "C" bool ImGui_InputInt3__9f57243a13b3dac3(const char* label, int v[3], int flags) {
	return ImGui::InputInt3(label, v, flags);
}
extern "C" bool ImGui_InputInt4__277bec0a8ee60136(const char* label, int v[4], int flags) {
	return ImGui::InputInt4(label, v, flags);
}
extern "C" bool ImGui_InputDouble__8f499ad741e36516(const char* label, double* v, double step, double step_fast, const char* format, int flags) {
	return ImGui::InputDouble(label, v, step, step_fast, format, flags);
}
extern "C" bool ImGui_InputScalar__7d1e21d8a7b17e92(const char* label, int data_type, void* p_data, const void* p_step, const void* p_step_fast, const char* format, int flags) {
	return ImGui::InputScalar(label, data_type, p_data, p_step, p_step_fast, format, flags);
}
extern "C" bool ImGui_InputScalarN__6a41d1d3d997cf9b(const char* label, int data_type, void* p_data, int components, const void* p_step, const void* p_step_fast, const char* format, int flags) {
	return ImGui::InputScalarN(label, data_type, p_data, components, p_step, p_step_fast, format, flags);
}
extern "C" bool ImGui_ColorEdit3__a241faa37c3a725c(const char* label, float col[3], int flags) {
	return ImGui::ColorEdit3(label, col, flags);
}
extern "C" bool ImGui_ColorEdit4__37f67f5756b3920e(const char* label, float col[4], int flags) {
	return ImGui::ColorEdit4(label, col, flags);
}
extern "C" bool ImGui_ColorPicker3__48ebd68e4816d1a6(const char* label, float col[3], int flags) {
	return ImGui::ColorPicker3(label, col, flags);
}
extern "C" bool ImGui_ColorPicker4__26de24f880244bc2(const char* label, float col[4], int flags, const float* ref_col) {
	return ImGui::ColorPicker4(label, col, flags, ref_col);
}
extern "C" bool ImGui_ColorButton__ba849f85186e6fcc(const char* desc_id, const ImVec4* col, int flags, const ImVec2* size) {
	return ImGui::ColorButton(desc_id, *col, flags, *size);
}
extern "C" void ImGui_SetColorEditOptions__1e2d52cd718e6e29(int flags) {
	ImGui::SetColorEditOptions(flags);
}
extern "C" bool ImGui_TreeNode__80a9c1696e07455c(const char* label) {
	return ImGui::TreeNode(label);
}
extern "C" bool ImGui_TreeNode__80a9c1696e07455c_1(const char* str_id, const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	auto __ZPP_result = ImGui::TreeNode(str_id, fmt);
	va_end(__ZPP_args);
	return __ZPP_result;
}
extern "C" bool ImGui_TreeNode__80a9c1696e07455c_2(const void* ptr_id, const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	auto __ZPP_result = ImGui::TreeNode(ptr_id, fmt);
	va_end(__ZPP_args);
	return __ZPP_result;
}
extern "C" bool ImGui_TreeNodeV__3c21e2484267a68a(const char* str_id, const char* fmt, char* args) {
	return ImGui::TreeNodeV(str_id, fmt, args);
}
extern "C" bool ImGui_TreeNodeV__3c21e2484267a68a_1(const void* ptr_id, const char* fmt, char* args) {
	return ImGui::TreeNodeV(ptr_id, fmt, args);
}
extern "C" bool ImGui_TreeNodeEx__42a1e2acbf282485(const char* label, int flags) {
	return ImGui::TreeNodeEx(label, flags);
}
extern "C" bool ImGui_TreeNodeEx__42a1e2acbf282485_1(const char* str_id, int flags, const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	auto __ZPP_result = ImGui::TreeNodeEx(str_id, flags, fmt);
	va_end(__ZPP_args);
	return __ZPP_result;
}
extern "C" bool ImGui_TreeNodeEx__42a1e2acbf282485_2(const void* ptr_id, int flags, const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	auto __ZPP_result = ImGui::TreeNodeEx(ptr_id, flags, fmt);
	va_end(__ZPP_args);
	return __ZPP_result;
}
extern "C" bool ImGui_TreeNodeExV__ffd3bf7a0e94717d(const char* str_id, int flags, const char* fmt, char* args) {
	return ImGui::TreeNodeExV(str_id, flags, fmt, args);
}
extern "C" bool ImGui_TreeNodeExV__ffd3bf7a0e94717d_1(const void* ptr_id, int flags, const char* fmt, char* args) {
	return ImGui::TreeNodeExV(ptr_id, flags, fmt, args);
}
extern "C" void ImGui_TreePush__dea7774114d872d0(const char* str_id) {
	ImGui::TreePush(str_id);
}
extern "C" void ImGui_TreePush__dea7774114d872d0_1(const void* ptr_id) {
	ImGui::TreePush(ptr_id);
}
extern "C" void ImGui_TreePop__4e7b0e88a0b90cd9() {
	ImGui::TreePop();
}
extern "C" float ImGui_GetTreeNodeToLabelSpacing__ce241a94d50dd4a4() {
	return ImGui::GetTreeNodeToLabelSpacing();
}
extern "C" bool ImGui_CollapsingHeader__e8c045bc87177fd1(const char* label, int flags) {
	return ImGui::CollapsingHeader(label, flags);
}
extern "C" bool ImGui_CollapsingHeader__e8c045bc87177fd1_1(const char* label, bool* p_visible, int flags) {
	return ImGui::CollapsingHeader(label, p_visible, flags);
}
extern "C" void ImGui_SetNextItemOpen__418247d9e1902364(bool is_open, int cond) {
	ImGui::SetNextItemOpen(is_open, cond);
}
extern "C" void ImGui_SetNextItemStorageID__f2ee1ba9a88e5f7e(unsigned int storage_id) {
	ImGui::SetNextItemStorageID(storage_id);
}
extern "C" bool ImGui_Selectable__23766c4a0e015856(const char* label, bool selected, int flags, const ImVec2* size) {
	return ImGui::Selectable(label, selected, flags, *size);
}
extern "C" bool ImGui_Selectable__23766c4a0e015856_1(const char* label, bool* p_selected, int flags, const ImVec2* size) {
	return ImGui::Selectable(label, p_selected, flags, *size);
}
extern "C" ImGuiMultiSelectIO* ImGui_BeginMultiSelect__200a20f6d0e19c98(int flags, int selection_size, int items_count) {
	return ImGui::BeginMultiSelect(flags, selection_size, items_count);
}
extern "C" ImGuiMultiSelectIO* ImGui_EndMultiSelect__9dc309364baed42f() {
	return ImGui::EndMultiSelect();
}
extern "C" void ImGui_SetNextItemSelectionUserData__d280e461897b7eb0(long long selection_user_data) {
	ImGui::SetNextItemSelectionUserData(selection_user_data);
}
extern "C" bool ImGui_IsItemToggledSelection__63c4439a14e13650() {
	return ImGui::IsItemToggledSelection();
}
extern "C" bool ImGui_BeginListBox__7e6694cd16075fa5(const char* label, const ImVec2* size) {
	return ImGui::BeginListBox(label, *size);
}
extern "C" void ImGui_EndListBox__b7ccb453c404411c() {
	ImGui::EndListBox();
}
extern "C" bool ImGui_ListBox__1fb0d4c51b313761(const char* label, int* current_item, const char* items[], int items_count, int height_in_items) {
	return ImGui::ListBox(label, current_item, items, items_count, height_in_items);
}
extern "C" bool ImGui_ListBox__1fb0d4c51b313761_1(const char* label, int* current_item, const char* (*getter)(void*, int), void* user_data, int items_count, int height_in_items) {
	return ImGui::ListBox(label, current_item, getter, user_data, items_count, height_in_items);
}
extern "C" void ImGui_PlotLines__40060fba323f9778(const char* label, const float* values, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride) {
	ImGui::PlotLines(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, stride);
}
extern "C" void ImGui_PlotLines__40060fba323f9778_1(const char* label, float (*values_getter)(void*, int), void* data, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size) {
	ImGui::PlotLines(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size);
}
extern "C" void ImGui_PlotHistogram__83ffde114549bbf(const char* label, const float* values, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride) {
	ImGui::PlotHistogram(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, stride);
}
extern "C" void ImGui_PlotHistogram__83ffde114549bbf_1(const char* label, float (*values_getter)(void*, int), void* data, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size) {
	ImGui::PlotHistogram(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size);
}
extern "C" void ImGui_Value__410e34259fd7958d(const char* prefix, bool b) {
	ImGui::Value(prefix, b);
}
extern "C" void ImGui_Value__410e34259fd7958d_1(const char* prefix, int v) {
	ImGui::Value(prefix, v);
}
extern "C" void ImGui_Value__410e34259fd7958d_2(const char* prefix, unsigned int v) {
	ImGui::Value(prefix, v);
}
extern "C" void ImGui_Value__410e34259fd7958d_3(const char* prefix, float v, const char* float_format) {
	ImGui::Value(prefix, v, float_format);
}
extern "C" bool ImGui_BeginMenuBar__68eeb36db997f2aa() {
	return ImGui::BeginMenuBar();
}
extern "C" void ImGui_EndMenuBar__2190bd3f73ed4e5() {
	ImGui::EndMenuBar();
}
extern "C" bool ImGui_BeginMainMenuBar__451d9c3f72982fe6() {
	return ImGui::BeginMainMenuBar();
}
extern "C" void ImGui_EndMainMenuBar__90fb7d8bf9e94f56() {
	ImGui::EndMainMenuBar();
}
extern "C" bool ImGui_BeginMenu__e8b6450765271e0f(const char* label, bool enabled) {
	return ImGui::BeginMenu(label, enabled);
}
extern "C" void ImGui_EndMenu__842571ebafc35d29() {
	ImGui::EndMenu();
}
extern "C" bool ImGui_MenuItem__26da1c3957b55a90(const char* label, const char* shortcut, bool selected, bool enabled) {
	return ImGui::MenuItem(label, shortcut, selected, enabled);
}
extern "C" bool ImGui_MenuItem__26da1c3957b55a90_1(const char* label, const char* shortcut, bool* p_selected, bool enabled) {
	return ImGui::MenuItem(label, shortcut, p_selected, enabled);
}
extern "C" bool ImGui_BeginTooltip__edd44921c3ee49eb() {
	return ImGui::BeginTooltip();
}
extern "C" void ImGui_EndTooltip__70cac3b751c22e07() {
	ImGui::EndTooltip();
}
extern "C" void ImGui_SetTooltip__d2ed7ef13a15aae0(const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::SetTooltip(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_SetTooltipV__a0f2a64e0e655680(const char* fmt, char* args) {
	ImGui::SetTooltipV(fmt, args);
}
extern "C" bool ImGui_BeginItemTooltip__531fce1ba6d5b8f3() {
	return ImGui::BeginItemTooltip();
}
extern "C" void ImGui_SetItemTooltip__7cdd6c788467f187(const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::SetItemTooltip(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_SetItemTooltipV__e748cd91d869d2a1(const char* fmt, char* args) {
	ImGui::SetItemTooltipV(fmt, args);
}
extern "C" bool ImGui_BeginPopup__af7decd105d1b4c6(const char* str_id, int flags) {
	return ImGui::BeginPopup(str_id, flags);
}
extern "C" bool ImGui_BeginPopupModal__c39277cb1c014458(const char* name, bool* p_open, int flags) {
	return ImGui::BeginPopupModal(name, p_open, flags);
}
extern "C" void ImGui_EndPopup__64bfeaf471d1644e() {
	ImGui::EndPopup();
}
extern "C" void ImGui_OpenPopup__620aad0c8e1a1f4a(const char* str_id, int popup_flags) {
	ImGui::OpenPopup(str_id, popup_flags);
}
extern "C" void ImGui_OpenPopup__620aad0c8e1a1f4a_1(unsigned int id, int popup_flags) {
	ImGui::OpenPopup(id, popup_flags);
}
extern "C" void ImGui_OpenPopupOnItemClick__e2d226632f22c20(const char* str_id, int popup_flags) {
	ImGui::OpenPopupOnItemClick(str_id, popup_flags);
}
extern "C" void ImGui_CloseCurrentPopup__9e57b10955023e7a() {
	ImGui::CloseCurrentPopup();
}
extern "C" bool ImGui_BeginPopupContextItem__780d058c91b31ff8(const char* str_id, int popup_flags) {
	return ImGui::BeginPopupContextItem(str_id, popup_flags);
}
extern "C" bool ImGui_BeginPopupContextWindow__f71efb0fc1cbb3f9(const char* str_id, int popup_flags) {
	return ImGui::BeginPopupContextWindow(str_id, popup_flags);
}
extern "C" bool ImGui_BeginPopupContextVoid__e84a1cab0911c654(const char* str_id, int popup_flags) {
	return ImGui::BeginPopupContextVoid(str_id, popup_flags);
}
extern "C" bool ImGui_IsPopupOpen__24a7cc6afaeb53cf(const char* str_id, int flags) {
	return ImGui::IsPopupOpen(str_id, flags);
}
extern "C" bool ImGui_BeginTable__7c86f34a38366f03(const char* str_id, int columns, int flags, const ImVec2* outer_size, float inner_width) {
	return ImGui::BeginTable(str_id, columns, flags, *outer_size, inner_width);
}
extern "C" void ImGui_EndTable__36da284655b62d61() {
	ImGui::EndTable();
}
extern "C" void ImGui_TableNextRow__44dde2910f4eef96(int row_flags, float min_row_height) {
	ImGui::TableNextRow(row_flags, min_row_height);
}
extern "C" bool ImGui_TableNextColumn__9116ca99147d2990() {
	return ImGui::TableNextColumn();
}
extern "C" bool ImGui_TableSetColumnIndex__8eb2c94e78a9d32d(int column_n) {
	return ImGui::TableSetColumnIndex(column_n);
}
extern "C" void ImGui_TableSetupColumn__395380f03ff7ab03(const char* label, int flags, float init_width_or_weight, unsigned int user_id) {
	ImGui::TableSetupColumn(label, flags, init_width_or_weight, user_id);
}
extern "C" void ImGui_TableSetupScrollFreeze__4d12d0f92856d348(int cols, int rows) {
	ImGui::TableSetupScrollFreeze(cols, rows);
}
extern "C" void ImGui_TableHeader__798a00acf3a5128b(const char* label) {
	ImGui::TableHeader(label);
}
extern "C" void ImGui_TableHeadersRow__5fceeaeb416d187d() {
	ImGui::TableHeadersRow();
}
extern "C" void ImGui_TableAngledHeadersRow__9fb41a9800d49aff() {
	ImGui::TableAngledHeadersRow();
}
extern "C" ImGuiTableSortSpecs* ImGui_TableGetSortSpecs__5df8fd79c76dac0e() {
	return ImGui::TableGetSortSpecs();
}
extern "C" int ImGui_TableGetColumnCount__6e99a71548595f29() {
	return ImGui::TableGetColumnCount();
}
extern "C" int ImGui_TableGetColumnIndex__cec05d99739117() {
	return ImGui::TableGetColumnIndex();
}
extern "C" int ImGui_TableGetRowIndex__788b594343a799cd() {
	return ImGui::TableGetRowIndex();
}
extern "C" const char* ImGui_TableGetColumnName__563a353bb3fef88a(int column_n) {
	return ImGui::TableGetColumnName(column_n);
}
extern "C" int ImGui_TableGetColumnFlags__5588304353ee148c(int column_n) {
	return ImGui::TableGetColumnFlags(column_n);
}
extern "C" void ImGui_TableSetColumnEnabled__9c875c490131a00f(int column_n, bool v) {
	ImGui::TableSetColumnEnabled(column_n, v);
}
extern "C" int ImGui_TableGetHoveredColumn__12a5030c0ab12766() {
	return ImGui::TableGetHoveredColumn();
}
extern "C" void ImGui_TableSetBgColor__9ee278dc9fe53c2c(int target, unsigned int color, int column_n) {
	ImGui::TableSetBgColor(target, color, column_n);
}
extern "C" void ImGui_Columns__86ffd29113234f80(int count, const char* id, bool borders) {
	ImGui::Columns(count, id, borders);
}
extern "C" void ImGui_NextColumn__ac54ba9c02fa72bf() {
	ImGui::NextColumn();
}
extern "C" int ImGui_GetColumnIndex__5589da84cf2639cb() {
	return ImGui::GetColumnIndex();
}
extern "C" float ImGui_GetColumnWidth__33268bb08c5466bb(int column_index) {
	return ImGui::GetColumnWidth(column_index);
}
extern "C" void ImGui_SetColumnWidth__8c0f202be8be631b(int column_index, float width) {
	ImGui::SetColumnWidth(column_index, width);
}
extern "C" float ImGui_GetColumnOffset__d3e88ef928c47817(int column_index) {
	return ImGui::GetColumnOffset(column_index);
}
extern "C" void ImGui_SetColumnOffset__570bd80395952315(int column_index, float offset_x) {
	ImGui::SetColumnOffset(column_index, offset_x);
}
extern "C" int ImGui_GetColumnsCount__21f24495a856c35e() {
	return ImGui::GetColumnsCount();
}
extern "C" bool ImGui_BeginTabBar__d1b00e36d8e2d417(const char* str_id, int flags) {
	return ImGui::BeginTabBar(str_id, flags);
}
extern "C" void ImGui_EndTabBar__52290b9a2e2db384() {
	ImGui::EndTabBar();
}
extern "C" bool ImGui_BeginTabItem__477a46f595e13(const char* label, bool* p_open, int flags) {
	return ImGui::BeginTabItem(label, p_open, flags);
}
extern "C" void ImGui_EndTabItem__e0179ccd7fc1b587() {
	ImGui::EndTabItem();
}
extern "C" bool ImGui_TabItemButton__84300e4af41a6ac3(const char* label, int flags) {
	return ImGui::TabItemButton(label, flags);
}
extern "C" void ImGui_SetTabItemClosed__208f691541a5f6d1(const char* tab_or_docked_window_label) {
	ImGui::SetTabItemClosed(tab_or_docked_window_label);
}
extern "C" void ImGui_LogToTTY__d65c762233b9da76(int auto_open_depth) {
	ImGui::LogToTTY(auto_open_depth);
}
extern "C" void ImGui_LogToFile__49c03e8156b09a50(int auto_open_depth, const char* filename) {
	ImGui::LogToFile(auto_open_depth, filename);
}
extern "C" void ImGui_LogToClipboard__feafb6f86af54579(int auto_open_depth) {
	ImGui::LogToClipboard(auto_open_depth);
}
extern "C" void ImGui_LogFinish__adf6df9d3cc4a7f() {
	ImGui::LogFinish();
}
extern "C" void ImGui_LogButtons__e5feb74bdecea776() {
	ImGui::LogButtons();
}
extern "C" void ImGui_LogText__7232fc82144aa652(const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::LogText(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_LogTextV__402bdaca43d29749(const char* fmt, char* args) {
	ImGui::LogTextV(fmt, args);
}
extern "C" bool ImGui_BeginDragDropSource__361a5fddfc48e5d5(int flags) {
	return ImGui::BeginDragDropSource(flags);
}
extern "C" bool ImGui_SetDragDropPayload__ab9655c620dc5c99(const char* type, const void* data, unsigned long long sz, int cond) {
	return ImGui::SetDragDropPayload(type, data, sz, cond);
}
extern "C" void ImGui_EndDragDropSource__216a2f7392882be3() {
	ImGui::EndDragDropSource();
}
extern "C" bool ImGui_BeginDragDropTarget__e919928f901fff24() {
	return ImGui::BeginDragDropTarget();
}
extern "C" const ImGuiPayload* ImGui_AcceptDragDropPayload__b7abd83aad61c449(const char* type, int flags) {
	return ImGui::AcceptDragDropPayload(type, flags);
}
extern "C" void ImGui_EndDragDropTarget__9d6f80e5c9874ac2() {
	ImGui::EndDragDropTarget();
}
extern "C" const ImGuiPayload* ImGui_GetDragDropPayload__5f488e5ff613926f() {
	return ImGui::GetDragDropPayload();
}
extern "C" void ImGui_BeginDisabled__8288de5373e22196(bool disabled) {
	ImGui::BeginDisabled(disabled);
}
extern "C" void ImGui_EndDisabled__a4706f935bac625f() {
	ImGui::EndDisabled();
}
extern "C" void ImGui_PushClipRect__f943809f83598e77(const ImVec2* clip_rect_min, const ImVec2* clip_rect_max, bool intersect_with_current_clip_rect) {
	ImGui::PushClipRect(*clip_rect_min, *clip_rect_max, intersect_with_current_clip_rect);
}
extern "C" void ImGui_PopClipRect__6f450f6b6bf04dd1() {
	ImGui::PopClipRect();
}
extern "C" void ImGui_SetItemDefaultFocus__fbe3b895f4400076() {
	ImGui::SetItemDefaultFocus();
}
extern "C" void ImGui_SetKeyboardFocusHere__b34c6bd9bad33d9a(int offset) {
	ImGui::SetKeyboardFocusHere(offset);
}
extern "C" void ImGui_SetNavCursorVisible__b3f184ecf1508dd8(bool visible) {
	ImGui::SetNavCursorVisible(visible);
}
extern "C" void ImGui_SetNextItemAllowOverlap__c1a9a50f396cc296() {
	ImGui::SetNextItemAllowOverlap();
}
extern "C" bool ImGui_IsItemHovered__eb5480eb24eeed52(int flags) {
	return ImGui::IsItemHovered(flags);
}
extern "C" bool ImGui_IsItemActive__6e30d4a06b1c360f() {
	return ImGui::IsItemActive();
}
extern "C" bool ImGui_IsItemFocused__7af1b3e02820ea5() {
	return ImGui::IsItemFocused();
}
extern "C" bool ImGui_IsItemClicked__255d1c5c846b4a2b(int mouse_button) {
	return ImGui::IsItemClicked(mouse_button);
}
extern "C" bool ImGui_IsItemVisible__a25c43a322017e0b() {
	return ImGui::IsItemVisible();
}
extern "C" bool ImGui_IsItemEdited__8d67c94241730fb3() {
	return ImGui::IsItemEdited();
}
extern "C" bool ImGui_IsItemActivated__99ffe7530405ae6() {
	return ImGui::IsItemActivated();
}
extern "C" bool ImGui_IsItemDeactivated__5b2fcb6aa7986a9f() {
	return ImGui::IsItemDeactivated();
}
extern "C" bool ImGui_IsItemDeactivatedAfterEdit__e2593bc0cd3c5aed() {
	return ImGui::IsItemDeactivatedAfterEdit();
}
extern "C" bool ImGui_IsItemToggledOpen__fe74bd795b12b1bb() {
	return ImGui::IsItemToggledOpen();
}
extern "C" bool ImGui_IsAnyItemHovered__c987e5d9fecde969() {
	return ImGui::IsAnyItemHovered();
}
extern "C" bool ImGui_IsAnyItemActive__2eb1e2d1ddd7590d() {
	return ImGui::IsAnyItemActive();
}
extern "C" bool ImGui_IsAnyItemFocused__aa94a74ae0320549() {
	return ImGui::IsAnyItemFocused();
}
extern "C" unsigned int ImGui_GetItemID__3d6eb69f935786c3() {
	return ImGui::GetItemID();
}
extern "C" void ImGui_GetItemRectMin__53e9b36d84881940(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetItemRectMin();
}
extern "C" void ImGui_GetItemRectMax__69272018b89d5a81(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetItemRectMax();
}
extern "C" void ImGui_GetItemRectSize__ba63216f70e1c7ce(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetItemRectSize();
}
extern "C" ImGuiViewport* ImGui_GetMainViewport__30a61b76a0b573b() {
	return ImGui::GetMainViewport();
}
extern "C" ImDrawList* ImGui_GetBackgroundDrawList__184b3ebaa6ef2784() {
	return ImGui::GetBackgroundDrawList();
}
extern "C" ImDrawList* ImGui_GetForegroundDrawList__2394c759322fc18b() {
	return ImGui::GetForegroundDrawList();
}
extern "C" bool ImGui_IsRectVisible__91a83cc8546633(const ImVec2* size) {
	return ImGui::IsRectVisible(*size);
}
extern "C" bool ImGui_IsRectVisible__91a83cc8546633_1(const ImVec2* rect_min, const ImVec2* rect_max) {
	return ImGui::IsRectVisible(*rect_min, *rect_max);
}
extern "C" double ImGui_GetTime__3a02c90ce1962f73() {
	return ImGui::GetTime();
}
extern "C" int ImGui_GetFrameCount__2a9a12740765dae4() {
	return ImGui::GetFrameCount();
}
extern "C" ImDrawListSharedData* ImGui_GetDrawListSharedData__8649620304273bea() {
	return ImGui::GetDrawListSharedData();
}
extern "C" const char* ImGui_GetStyleColorName__104002e8be53bb1f(int idx) {
	return ImGui::GetStyleColorName(idx);
}
extern "C" void ImGui_SetStateStorage__f892d22f19fe6f4c(ImGuiStorage* storage) {
	ImGui::SetStateStorage(storage);
}
extern "C" ImGuiStorage* ImGui_GetStateStorage__12e314f172810ac1() {
	return ImGui::GetStateStorage();
}
extern "C" void ImGui_CalcTextSize__af665100d52149fb(const char* text, const char* text_end, bool hide_text_after_double_hash, float wrap_width, ImVec2* zpp_out) {
	*zpp_out = ImGui::CalcTextSize(text, text_end, hide_text_after_double_hash, wrap_width);
}
extern "C" void ImGui_ColorConvertU32ToFloat4__1efff13b5f16d7a9(unsigned int in, ImVec4* zpp_out) {
	*zpp_out = ImGui::ColorConvertU32ToFloat4(in);
}
extern "C" unsigned int ImGui_ColorConvertFloat4ToU32__6810bb20e24b8eed(const ImVec4* in) {
	return ImGui::ColorConvertFloat4ToU32(*in);
}
extern "C" void ImGui_ColorConvertRGBtoHSV__75383368abe59de9(float r, float g, float b, float* out_h, float* out_s, float* out_v) {
	ImGui::ColorConvertRGBtoHSV(r, g, b, *out_h, *out_s, *out_v);
}
extern "C" void ImGui_ColorConvertHSVtoRGB__59b2228f5d43f593(float h, float s, float v, float* out_r, float* out_g, float* out_b) {
	ImGui::ColorConvertHSVtoRGB(h, s, v, *out_r, *out_g, *out_b);
}
extern "C" bool ImGui_IsKeyDown__b9a94fc762d525ee(ImGuiKey key) {
	return ImGui::IsKeyDown(key);
}
extern "C" bool ImGui_IsKeyPressed__f63fedd58cd1075f(ImGuiKey key, bool repeat) {
	return ImGui::IsKeyPressed(key, repeat);
}
extern "C" bool ImGui_IsKeyReleased__f3473022f21d87(ImGuiKey key) {
	return ImGui::IsKeyReleased(key);
}
extern "C" bool ImGui_IsKeyChordPressed__87d59ff29f98d6a(int key_chord) {
	return ImGui::IsKeyChordPressed(key_chord);
}
extern "C" int ImGui_GetKeyPressedAmount__4ec84b88cac4e7d1(ImGuiKey key, float repeat_delay, float rate) {
	return ImGui::GetKeyPressedAmount(key, repeat_delay, rate);
}
extern "C" const char* ImGui_GetKeyName__f931db20e063f68(ImGuiKey key) {
	return ImGui::GetKeyName(key);
}
extern "C" void ImGui_SetNextFrameWantCaptureKeyboard__e7119297f6d0dc6c(bool want_capture_keyboard) {
	ImGui::SetNextFrameWantCaptureKeyboard(want_capture_keyboard);
}
extern "C" bool ImGui_Shortcut__c18f776eab5c1f97(int key_chord, int flags) {
	return ImGui::Shortcut(key_chord, flags);
}
extern "C" void ImGui_SetNextItemShortcut__167042793c7fe154(int key_chord, int flags) {
	ImGui::SetNextItemShortcut(key_chord, flags);
}
extern "C" void ImGui_SetItemKeyOwner__e3570bea464564bd(ImGuiKey key) {
	ImGui::SetItemKeyOwner(key);
}
extern "C" bool ImGui_IsMouseDown__ab95df654cbfaf3f(int button) {
	return ImGui::IsMouseDown(button);
}
extern "C" bool ImGui_IsMouseClicked__7892138fc77299ed(int button, bool repeat) {
	return ImGui::IsMouseClicked(button, repeat);
}
extern "C" bool ImGui_IsMouseReleased__37d71e7c3a1ed07a(int button) {
	return ImGui::IsMouseReleased(button);
}
extern "C" bool ImGui_IsMouseDoubleClicked__3802e12256e4a053(int button) {
	return ImGui::IsMouseDoubleClicked(button);
}
extern "C" bool ImGui_IsMouseReleasedWithDelay__a4c8398ac8355d96(int button, float delay) {
	return ImGui::IsMouseReleasedWithDelay(button, delay);
}
extern "C" int ImGui_GetMouseClickedCount__5915b1cb9e70e40f(int button) {
	return ImGui::GetMouseClickedCount(button);
}
extern "C" bool ImGui_IsMouseHoveringRect__ac123f27bb570f80(const ImVec2* r_min, const ImVec2* r_max, bool clip) {
	return ImGui::IsMouseHoveringRect(*r_min, *r_max, clip);
}
extern "C" bool ImGui_IsMousePosValid__e9023d707064bd25(const ImVec2* mouse_pos) {
	return ImGui::IsMousePosValid(mouse_pos);
}
extern "C" bool ImGui_IsAnyMouseDown__beea21f057b8ba42() {
	return ImGui::IsAnyMouseDown();
}
extern "C" void ImGui_GetMousePos__3f408d58028204e5(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetMousePos();
}
extern "C" void ImGui_GetMousePosOnOpeningCurrentPopup__784cba92ff9a85a2(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetMousePosOnOpeningCurrentPopup();
}
extern "C" bool ImGui_IsMouseDragging__35b0fc6cb18f47d5(int button, float lock_threshold) {
	return ImGui::IsMouseDragging(button, lock_threshold);
}
extern "C" void ImGui_GetMouseDragDelta__5a10a78dfa1cd650(int button, float lock_threshold, ImVec2* zpp_out) {
	*zpp_out = ImGui::GetMouseDragDelta(button, lock_threshold);
}
extern "C" void ImGui_ResetMouseDragDelta__f48b69ff21393016(int button) {
	ImGui::ResetMouseDragDelta(button);
}
extern "C" int ImGui_GetMouseCursor__23459e67748e9019() {
	return ImGui::GetMouseCursor();
}
extern "C" void ImGui_SetMouseCursor__a38ad0a7fc886bb7(int cursor_type) {
	ImGui::SetMouseCursor(cursor_type);
}
extern "C" void ImGui_SetNextFrameWantCaptureMouse__57f2e59c9da505f0(bool want_capture_mouse) {
	ImGui::SetNextFrameWantCaptureMouse(want_capture_mouse);
}
extern "C" const char* ImGui_GetClipboardText__b0acf6b7ce5aeae6() {
	return ImGui::GetClipboardText();
}
extern "C" void ImGui_SetClipboardText__26f65c0f131689ec(const char* text) {
	ImGui::SetClipboardText(text);
}
extern "C" void ImGui_LoadIniSettingsFromDisk__38cda985091c2405(const char* ini_filename) {
	ImGui::LoadIniSettingsFromDisk(ini_filename);
}
extern "C" void ImGui_LoadIniSettingsFromMemory__55d39b45163f01c5(const char* ini_data, unsigned long long ini_size) {
	ImGui::LoadIniSettingsFromMemory(ini_data, ini_size);
}
extern "C" void ImGui_SaveIniSettingsToDisk__4308fa59e6d23842(const char* ini_filename) {
	ImGui::SaveIniSettingsToDisk(ini_filename);
}
extern "C" const char* ImGui_SaveIniSettingsToMemory__8308ea65108965b5(unsigned long long* out_ini_size) {
	return ImGui::SaveIniSettingsToMemory(out_ini_size);
}
extern "C" void ImGui_DebugTextEncoding__88b855dfeda6c297(const char* text) {
	ImGui::DebugTextEncoding(text);
}
extern "C" void ImGui_DebugFlashStyleColor__be2b30778c97f0ba(int idx) {
	ImGui::DebugFlashStyleColor(idx);
}
extern "C" void ImGui_DebugStartItemPicker__c959107c78594aeb() {
	ImGui::DebugStartItemPicker();
}
extern "C" bool ImGui_DebugCheckVersionAndDataLayout__d8eb31902979c556(const char* version_str, unsigned long long sz_io, unsigned long long sz_style, unsigned long long sz_vec2, unsigned long long sz_vec4, unsigned long long sz_drawvert, unsigned long long sz_drawidx) {
	return ImGui::DebugCheckVersionAndDataLayout(version_str, sz_io, sz_style, sz_vec2, sz_vec4, sz_drawvert, sz_drawidx);
}
extern "C" void ImGui_DebugLog__7f5d6c7f09c89a1(const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	ImGui::DebugLog(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGui_DebugLogV__5278711653f9ba1a(const char* fmt, char* args) {
	ImGui::DebugLogV(fmt, args);
}
extern "C" void ImGui_SetAllocatorFunctions__54c5400d9fef432e(void* (*alloc_func)(unsigned long long, void*), void (*free_func)(void*, void*), void* user_data) {
	ImGui::SetAllocatorFunctions(alloc_func, free_func, user_data);
}
extern "C" void ImGui_GetAllocatorFunctions__8dea9f4e68db4acc(void* (**p_alloc_func)(unsigned long long, void*), void (**p_free_func)(void*, void*), void** p_user_data) {
	ImGui::GetAllocatorFunctions(p_alloc_func, p_free_func, p_user_data);
}
extern "C" void* ImGui_MemAlloc__e60dc2713666b50d(unsigned long long size) {
	return ImGui::MemAlloc(size);
}
extern "C" void ImGui_MemFree__30e36caf65239a1d(void* ptr) {
	ImGui::MemFree(ptr);
}
extern "C" void ImGui_PushFont__57a48dfb3f59b615_1(ImFont* font) {
	ImGui::PushFont(font);
}
extern "C" void ImGui_SetWindowFontScale__251e322a2613dd77(float scale) {
	ImGui::SetWindowFontScale(scale);
}
extern "C" void ImGui_Image__342c5ebe2ac95d69_1(ImTextureRef tex_ref, const ImVec2* image_size, const ImVec2* uv0, const ImVec2* uv1, const ImVec4* tint_col, const ImVec4* border_col) {
	ImGui::Image(tex_ref, *image_size, *uv0, *uv1, *tint_col, *border_col);
}
extern "C" void ImGui_PushButtonRepeat__ef4515f341d3ee86(bool repeat) {
	ImGui::PushButtonRepeat(repeat);
}
extern "C" void ImGui_PopButtonRepeat__4b428aee82902eb3() {
	ImGui::PopButtonRepeat();
}
extern "C" void ImGui_PushTabStop__a1012eece897cc22(bool tab_stop) {
	ImGui::PushTabStop(tab_stop);
}
extern "C" void ImGui_PopTabStop__b231eb0015e48140() {
	ImGui::PopTabStop();
}
extern "C" void ImGui_GetContentRegionMax__d1d45c226c418d4e(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetContentRegionMax();
}
extern "C" void ImGui_GetWindowContentRegionMin__84b7e4c3963e2e83(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetWindowContentRegionMin();
}
extern "C" void ImGui_GetWindowContentRegionMax__573b515ed142bfc5(ImVec2* zpp_out) {
	*zpp_out = ImGui::GetWindowContentRegionMax();
}
extern "C" bool ImGui_BeginChildFrame__71165973d18f6615(unsigned int id, const ImVec2* size, int window_flags) {
	return ImGui::BeginChildFrame(id, *size, window_flags);
}
extern "C" void ImGui_EndChildFrame__272850244b954c1f() {
	ImGui::EndChildFrame();
}
extern "C" void ImGui_ShowStackToolWindow__a0b24c05261d8cc1(bool* p_open) {
	ImGui::ShowStackToolWindow(p_open);
}
extern "C" bool ImGui_Combo__33b7a8c5bbd21f1c_3(const char* label, int* current_item, bool (*old_callback)(void*, int, const char**), void* user_data, int items_count, int popup_max_height_in_items) {
	return ImGui::Combo(label, current_item, old_callback, user_data, items_count, popup_max_height_in_items);
}
extern "C" bool ImGui_ListBox__1fb0d4c51b313761_2(const char* label, int* current_item, bool (*old_callback)(void*, int, const char**), void* user_data, int items_count, int height_in_items) {
	return ImGui::ListBox(label, current_item, old_callback, user_data, items_count, height_in_items);
}
extern "C" void ImGui_SetItemAllowOverlap__32090b34a719f510() {
	ImGui::SetItemAllowOverlap();
}
extern "C" void ImGuiStyle_ScaleAllSizes__9a14130b64c4d92f(ImGuiStyle* obj, float scale_factor) {
	obj->ScaleAllSizes(scale_factor);
}
extern "C" void ImGuiIO_AddKeyEvent__79cb6b13b9087850(ImGuiIO* obj, ImGuiKey key, bool down) {
	obj->AddKeyEvent(key, down);
}
extern "C" void ImGuiIO_AddKeyAnalogEvent__91a59c752b2c8f69(ImGuiIO* obj, ImGuiKey key, bool down, float v) {
	obj->AddKeyAnalogEvent(key, down, v);
}
extern "C" void ImGuiIO_AddMousePosEvent__6a5ae49852237982(ImGuiIO* obj, float x, float y) {
	obj->AddMousePosEvent(x, y);
}
extern "C" void ImGuiIO_AddMouseButtonEvent__873f64368d0800ad(ImGuiIO* obj, int button, bool down) {
	obj->AddMouseButtonEvent(button, down);
}
extern "C" void ImGuiIO_AddMouseWheelEvent__61413644d99c04e2(ImGuiIO* obj, float wheel_x, float wheel_y) {
	obj->AddMouseWheelEvent(wheel_x, wheel_y);
}
extern "C" void ImGuiIO_AddMouseSourceEvent__b4f7ab21a6d86864(ImGuiIO* obj, ImGuiMouseSource source) {
	obj->AddMouseSourceEvent(source);
}
extern "C" void ImGuiIO_AddFocusEvent__41192bb31b77ed20(ImGuiIO* obj, bool focused) {
	obj->AddFocusEvent(focused);
}
extern "C" void ImGuiIO_AddInputCharacter__26e0c42aa5e46e8(ImGuiIO* obj, unsigned int c) {
	obj->AddInputCharacter(c);
}
extern "C" void ImGuiIO_AddInputCharacterUTF16__2169d52432cb4dcb(ImGuiIO* obj, unsigned short c) {
	obj->AddInputCharacterUTF16(c);
}
extern "C" void ImGuiIO_AddInputCharactersUTF8__3c58d6f975e77b50(ImGuiIO* obj, const char* str) {
	obj->AddInputCharactersUTF8(str);
}
extern "C" void ImGuiIO_SetKeyEventNativeData__a63fe37d8a604e48(ImGuiIO* obj, ImGuiKey key, int native_keycode, int native_scancode, int native_legacy_index) {
	obj->SetKeyEventNativeData(key, native_keycode, native_scancode, native_legacy_index);
}
extern "C" void ImGuiIO_SetAppAcceptingEvents__30fc01cc7fd18bc0(ImGuiIO* obj, bool accepting_events) {
	obj->SetAppAcceptingEvents(accepting_events);
}
extern "C" void ImGuiIO_ClearEventsQueue__41d5a36029509f68(ImGuiIO* obj) {
	obj->ClearEventsQueue();
}
extern "C" void ImGuiIO_ClearInputKeys__f830a232402b8df3(ImGuiIO* obj) {
	obj->ClearInputKeys();
}
extern "C" void ImGuiIO_ClearInputMouse__aa06d0a2639d5a2d(ImGuiIO* obj) {
	obj->ClearInputMouse();
}
extern "C" void ImGuiIO_ClearInputCharacters__4f34a7dd4974c46b(ImGuiIO* obj) {
	obj->ClearInputCharacters();
}
extern "C" void ImGuiInputTextCallbackData_DeleteChars__fdf490243fc521e6(ImGuiInputTextCallbackData* obj, int pos, int bytes_count) {
	obj->DeleteChars(pos, bytes_count);
}
extern "C" void ImGuiInputTextCallbackData_InsertChars__ab3b97528f670601(ImGuiInputTextCallbackData* obj, int pos, const char* text, const char* text_end) {
	obj->InsertChars(pos, text, text_end);
}
extern "C" void ImGuiInputTextCallbackData_SelectAll__3c575d8b4bf3d558(ImGuiInputTextCallbackData* obj) {
	obj->SelectAll();
}
extern "C" void ImGuiInputTextCallbackData_ClearSelection__585ce22603f7fed8(ImGuiInputTextCallbackData* obj) {
	obj->ClearSelection();
}
extern "C" bool ImGuiInputTextCallbackData_HasSelection__66682cf13e16f85(ImGuiInputTextCallbackData* obj) {
	return obj->HasSelection();
}
extern "C" void ImGuiPayload_Clear__aa706db1ef8639b7(ImGuiPayload* obj) {
	obj->Clear();
}
extern "C" bool ImGuiPayload_IsDataType__bf7ca46f24b22f34(ImGuiPayload* obj, const char* type) {
	return obj->IsDataType(type);
}
extern "C" bool ImGuiPayload_IsPreview__b9e002b2013be0bb(ImGuiPayload* obj) {
	return obj->IsPreview();
}
extern "C" bool ImGuiPayload_IsDelivery__34549633d149173c(ImGuiPayload* obj) {
	return obj->IsDelivery();
}
extern "C" bool ImGuiTextFilter_Draw__1246f0071f7e07f4(ImGuiTextFilter* obj, const char* label, float width) {
	return obj->Draw(label, width);
}
extern "C" bool ImGuiTextFilter_PassFilter__fd6512fbb92515eb(ImGuiTextFilter* obj, const char* text, const char* text_end) {
	return obj->PassFilter(text, text_end);
}
extern "C" void ImGuiTextFilter_Build__de679d4a386ff4fc(ImGuiTextFilter* obj) {
	obj->Build();
}
extern "C" void ImGuiTextFilter_Clear__aa706db1ef8639b7(ImGuiTextFilter* obj) {
	obj->Clear();
}
extern "C" bool ImGuiTextFilter_IsActive__acea8eb7ca92eb30(ImGuiTextFilter* obj) {
	return obj->IsActive();
}
extern "C" bool ImGuiTextFilter_ImGuiTextRange_empty__d69f37fa6e695e58(ImGuiTextFilter::ImGuiTextRange* obj) {
	return obj->empty();
}
extern "C" void ImGuiTextFilter_ImGuiTextRange_split__65a48554f361a691(ImGuiTextFilter::ImGuiTextRange* obj, char separator, ImVector<ImGuiTextFilter::ImGuiTextRange>* out) {
	obj->split(separator, out);
}
extern "C" const char* ImGuiTextBuffer_begin__462655cb005141ae(ImGuiTextBuffer* obj) {
	return obj->begin();
}
extern "C" const char* ImGuiTextBuffer_end__335ba0e3df4d897e(ImGuiTextBuffer* obj) {
	return obj->end();
}
extern "C" int ImGuiTextBuffer_size__11f57f7cb29f816(ImGuiTextBuffer* obj) {
	return obj->size();
}
extern "C" bool ImGuiTextBuffer_empty__d69f37fa6e695e58(ImGuiTextBuffer* obj) {
	return obj->empty();
}
extern "C" void ImGuiTextBuffer_clear__ec8367d57559a9c1(ImGuiTextBuffer* obj) {
	obj->clear();
}
extern "C" void ImGuiTextBuffer_resize__3fedcedd914d771(ImGuiTextBuffer* obj, int size) {
	obj->resize(size);
}
extern "C" void ImGuiTextBuffer_reserve__a2b1dee6afc83005(ImGuiTextBuffer* obj, int capacity) {
	obj->reserve(capacity);
}
extern "C" const char* ImGuiTextBuffer_c_str__64e7f71e33123c47(ImGuiTextBuffer* obj) {
	return obj->c_str();
}
extern "C" void ImGuiTextBuffer_append__552938241af60409(ImGuiTextBuffer* obj, const char* str, const char* str_end) {
	obj->append(str, str_end);
}
extern "C" void ImGuiTextBuffer_appendf__425058847a8ffd57(ImGuiTextBuffer* obj, const char* fmt, ...) {
	va_list __ZPP_args;
	va_start(__ZPP_args, fmt);
	obj->appendf(fmt);
	va_end(__ZPP_args);
}
extern "C" void ImGuiTextBuffer_appendfv__764f73c8a8f1dc15(ImGuiTextBuffer* obj, const char* fmt, char* args) {
	obj->appendfv(fmt, args);
}
extern "C" void ImGuiStorage_Clear__aa706db1ef8639b7(ImGuiStorage* obj) {
	obj->Clear();
}
extern "C" int ImGuiStorage_GetInt__b7dee219ce20e2e2(ImGuiStorage* obj, unsigned int key, int default_val) {
	return obj->GetInt(key, default_val);
}
extern "C" void ImGuiStorage_SetInt__7337203fa47c55e2(ImGuiStorage* obj, unsigned int key, int val) {
	obj->SetInt(key, val);
}
extern "C" bool ImGuiStorage_GetBool__5c653f5b949fd7bf(ImGuiStorage* obj, unsigned int key, bool default_val) {
	return obj->GetBool(key, default_val);
}
extern "C" void ImGuiStorage_SetBool__7f6b0f60c9f6f96d(ImGuiStorage* obj, unsigned int key, bool val) {
	obj->SetBool(key, val);
}
extern "C" float ImGuiStorage_GetFloat__97877b30c9330996(ImGuiStorage* obj, unsigned int key, float default_val) {
	return obj->GetFloat(key, default_val);
}
extern "C" void ImGuiStorage_SetFloat__989824410c1c797b(ImGuiStorage* obj, unsigned int key, float val) {
	obj->SetFloat(key, val);
}
extern "C" void* ImGuiStorage_GetVoidPtr__9405e2ae8d404072(ImGuiStorage* obj, unsigned int key) {
	return obj->GetVoidPtr(key);
}
extern "C" void ImGuiStorage_SetVoidPtr__c1b8c93fb2b2419f(ImGuiStorage* obj, unsigned int key, void* val) {
	obj->SetVoidPtr(key, val);
}
extern "C" int* ImGuiStorage_GetIntRef__f33a0e33e7959969(ImGuiStorage* obj, unsigned int key, int default_val) {
	return obj->GetIntRef(key, default_val);
}
extern "C" bool* ImGuiStorage_GetBoolRef__85033a02c7cc9dc3(ImGuiStorage* obj, unsigned int key, bool default_val) {
	return obj->GetBoolRef(key, default_val);
}
extern "C" float* ImGuiStorage_GetFloatRef__255f9ac951c31f26(ImGuiStorage* obj, unsigned int key, float default_val) {
	return obj->GetFloatRef(key, default_val);
}
extern "C" void** ImGuiStorage_GetVoidPtrRef__548a15cef2a47f27(ImGuiStorage* obj, unsigned int key, void* default_val) {
	return obj->GetVoidPtrRef(key, default_val);
}
extern "C" void ImGuiStorage_BuildSortByKey__42586a5e1f02fc8c(ImGuiStorage* obj) {
	obj->BuildSortByKey();
}
extern "C" void ImGuiStorage_SetAllInt__a875cd23b8275381(ImGuiStorage* obj, int val) {
	obj->SetAllInt(val);
}
extern "C" void ImGuiListClipper_Begin__5ca733c608c9f722(ImGuiListClipper* obj, int items_count, float items_height) {
	obj->Begin(items_count, items_height);
}
extern "C" void ImGuiListClipper_End__891dd9019e6ec9af(ImGuiListClipper* obj) {
	obj->End();
}
extern "C" bool ImGuiListClipper_Step__298eadb463bb49ff(ImGuiListClipper* obj) {
	return obj->Step();
}
extern "C" void ImGuiListClipper_IncludeItemByIndex__f08e56562db59244(ImGuiListClipper* obj, int item_index) {
	obj->IncludeItemByIndex(item_index);
}
extern "C" void ImGuiListClipper_IncludeItemsByIndex__d90805bfe22570c5(ImGuiListClipper* obj, int item_begin, int item_end) {
	obj->IncludeItemsByIndex(item_begin, item_end);
}
extern "C" void ImGuiListClipper_SeekCursorForItem__183810b578d0a352(ImGuiListClipper* obj, int item_index) {
	obj->SeekCursorForItem(item_index);
}
extern "C" void ImGuiListClipper_IncludeRangeByIndices__9c5532868506f0e3(ImGuiListClipper* obj, int item_begin, int item_end) {
	obj->IncludeRangeByIndices(item_begin, item_end);
}
extern "C" void ImColor_SetHSV__29d163b7760fb9a9(ImColor* obj, float h, float s, float v, float a) {
	obj->SetHSV(h, s, v, a);
}
extern "C" void ImColor_HSV__d3b13a422d2b177d(ImColor* obj, float h, float s, float v, float a, ImColor* zpp_out) {
	*zpp_out = obj->HSV(h, s, v, a);
}
extern "C" void ImGuiSelectionBasicStorage_ApplyRequests__1cadbca16391c47d(ImGuiSelectionBasicStorage* obj, ImGuiMultiSelectIO* ms_io) {
	obj->ApplyRequests(ms_io);
}
extern "C" bool ImGuiSelectionBasicStorage_Contains__70c9d2abcdd2a6c9(ImGuiSelectionBasicStorage* obj, unsigned int id) {
	return obj->Contains(id);
}
extern "C" void ImGuiSelectionBasicStorage_Clear__aa706db1ef8639b7(ImGuiSelectionBasicStorage* obj) {
	obj->Clear();
}
extern "C" void ImGuiSelectionBasicStorage_Swap__9022e627a89fdced(ImGuiSelectionBasicStorage* obj, ImGuiSelectionBasicStorage* r) {
	obj->Swap(*r);
}
extern "C" void ImGuiSelectionBasicStorage_SetItemSelected__1a3b9a3fa1bad707(ImGuiSelectionBasicStorage* obj, unsigned int id, bool selected) {
	obj->SetItemSelected(id, selected);
}
extern "C" bool ImGuiSelectionBasicStorage_GetNextSelectedItem__902e533fd4abd820(ImGuiSelectionBasicStorage* obj, void** opaque_it, unsigned int* out_id) {
	return obj->GetNextSelectedItem(opaque_it, out_id);
}
extern "C" unsigned int ImGuiSelectionBasicStorage_GetStorageIdFromIndex__f91951ae0c34400f(ImGuiSelectionBasicStorage* obj, int idx) {
	return obj->GetStorageIdFromIndex(idx);
}
extern "C" void ImGuiSelectionExternalStorage_ApplyRequests__1cadbca16391c47d(ImGuiSelectionExternalStorage* obj, ImGuiMultiSelectIO* ms_io) {
	obj->ApplyRequests(ms_io);
}
extern "C" unsigned long long ImDrawCmd_GetTexID__d8dce782ceb9ab42(ImDrawCmd* obj) {
	return obj->GetTexID();
}
extern "C" void ImDrawListSplitter_Clear__aa706db1ef8639b7(ImDrawListSplitter* obj) {
	obj->Clear();
}
extern "C" void ImDrawListSplitter_ClearFreeMemory__ce21b858142da81f(ImDrawListSplitter* obj) {
	obj->ClearFreeMemory();
}
extern "C" void ImDrawListSplitter_Split__7a48201b3dc34681(ImDrawListSplitter* obj, ImDrawList* draw_list, int count) {
	obj->Split(draw_list, count);
}
extern "C" void ImDrawListSplitter_Merge__e1d95aa46fab9139(ImDrawListSplitter* obj, ImDrawList* draw_list) {
	obj->Merge(draw_list);
}
extern "C" void ImDrawListSplitter_SetCurrentChannel__968a9af2909008a3(ImDrawListSplitter* obj, ImDrawList* draw_list, int channel_idx) {
	obj->SetCurrentChannel(draw_list, channel_idx);
}
extern "C" void ImDrawList_PushClipRect__f943809f83598e77(ImDrawList* obj, const ImVec2* clip_rect_min, const ImVec2* clip_rect_max, bool intersect_with_current_clip_rect) {
	obj->PushClipRect(*clip_rect_min, *clip_rect_max, intersect_with_current_clip_rect);
}
extern "C" void ImDrawList_PushClipRectFullScreen__d87d2b69a83ebfcb(ImDrawList* obj) {
	obj->PushClipRectFullScreen();
}
extern "C" void ImDrawList_PopClipRect__6f450f6b6bf04dd1(ImDrawList* obj) {
	obj->PopClipRect();
}
extern "C" void ImDrawList_PushTexture__43e31c7b414568d1(ImDrawList* obj, ImTextureRef tex_ref) {
	obj->PushTexture(tex_ref);
}
extern "C" void ImDrawList_PopTexture__ed922f5407e83e5(ImDrawList* obj) {
	obj->PopTexture();
}
extern "C" void ImDrawList_GetClipRectMin__e36f40c5045d383f(ImDrawList* obj, ImVec2* zpp_out) {
	*zpp_out = obj->GetClipRectMin();
}
extern "C" void ImDrawList_GetClipRectMax__79d31aec55c127be(ImDrawList* obj, ImVec2* zpp_out) {
	*zpp_out = obj->GetClipRectMax();
}
extern "C" void ImDrawList_AddLine__e5f29d4649f0191a(ImDrawList* obj, const ImVec2* p1, const ImVec2* p2, unsigned int col, float thickness) {
	obj->AddLine(*p1, *p2, col, thickness);
}
extern "C" void ImDrawList_AddRect__b92b7230f2449f36(ImDrawList* obj, const ImVec2* p_min, const ImVec2* p_max, unsigned int col, float rounding, int flags, float thickness) {
	obj->AddRect(*p_min, *p_max, col, rounding, flags, thickness);
}
extern "C" void ImDrawList_AddRectFilled__4e4b6a12d64394a6(ImDrawList* obj, const ImVec2* p_min, const ImVec2* p_max, unsigned int col, float rounding, int flags) {
	obj->AddRectFilled(*p_min, *p_max, col, rounding, flags);
}
extern "C" void ImDrawList_AddRectFilledMultiColor__7fb1ac96171fbb0f(ImDrawList* obj, const ImVec2* p_min, const ImVec2* p_max, unsigned int col_upr_left, unsigned int col_upr_right, unsigned int col_bot_right, unsigned int col_bot_left) {
	obj->AddRectFilledMultiColor(*p_min, *p_max, col_upr_left, col_upr_right, col_bot_right, col_bot_left);
}
extern "C" void ImDrawList_AddQuad__b9567c32701ac821(ImDrawList* obj, const ImVec2* p1, const ImVec2* p2, const ImVec2* p3, const ImVec2* p4, unsigned int col, float thickness) {
	obj->AddQuad(*p1, *p2, *p3, *p4, col, thickness);
}
extern "C" void ImDrawList_AddQuadFilled__32d808355708156(ImDrawList* obj, const ImVec2* p1, const ImVec2* p2, const ImVec2* p3, const ImVec2* p4, unsigned int col) {
	obj->AddQuadFilled(*p1, *p2, *p3, *p4, col);
}
extern "C" void ImDrawList_AddTriangle__839c1bda5fa36d9b(ImDrawList* obj, const ImVec2* p1, const ImVec2* p2, const ImVec2* p3, unsigned int col, float thickness) {
	obj->AddTriangle(*p1, *p2, *p3, col, thickness);
}
extern "C" void ImDrawList_AddTriangleFilled__6f3e91feaf4d5835(ImDrawList* obj, const ImVec2* p1, const ImVec2* p2, const ImVec2* p3, unsigned int col) {
	obj->AddTriangleFilled(*p1, *p2, *p3, col);
}
extern "C" void ImDrawList_AddCircle__878885030d60d707(ImDrawList* obj, const ImVec2* center, float radius, unsigned int col, int num_segments, float thickness) {
	obj->AddCircle(*center, radius, col, num_segments, thickness);
}
extern "C" void ImDrawList_AddCircleFilled__687a011974bda59(ImDrawList* obj, const ImVec2* center, float radius, unsigned int col, int num_segments) {
	obj->AddCircleFilled(*center, radius, col, num_segments);
}
extern "C" void ImDrawList_AddNgon__465ba4b43b357563(ImDrawList* obj, const ImVec2* center, float radius, unsigned int col, int num_segments, float thickness) {
	obj->AddNgon(*center, radius, col, num_segments, thickness);
}
extern "C" void ImDrawList_AddNgonFilled__5b172f747bbde8f9(ImDrawList* obj, const ImVec2* center, float radius, unsigned int col, int num_segments) {
	obj->AddNgonFilled(*center, radius, col, num_segments);
}
extern "C" void ImDrawList_AddEllipse__b3611ef6c92a54c7(ImDrawList* obj, const ImVec2* center, const ImVec2* radius, unsigned int col, float rot, int num_segments, float thickness) {
	obj->AddEllipse(*center, *radius, col, rot, num_segments, thickness);
}
extern "C" void ImDrawList_AddEllipseFilled__4cc0cea3e9a992c4(ImDrawList* obj, const ImVec2* center, const ImVec2* radius, unsigned int col, float rot, int num_segments) {
	obj->AddEllipseFilled(*center, *radius, col, rot, num_segments);
}
extern "C" void ImDrawList_AddText__848482798a5dab73(ImDrawList* obj, const ImVec2* pos, unsigned int col, const char* text_begin, const char* text_end) {
	obj->AddText(*pos, col, text_begin, text_end);
}
extern "C" void ImDrawList_AddText__848482798a5dab73_1(ImDrawList* obj, ImFont* font, float font_size, const ImVec2* pos, unsigned int col, const char* text_begin, const char* text_end, float wrap_width, const ImVec4* cpu_fine_clip_rect) {
	obj->AddText(font, font_size, *pos, col, text_begin, text_end, wrap_width, cpu_fine_clip_rect);
}
extern "C" void ImDrawList_AddBezierCubic__1b89674b2033b251(ImDrawList* obj, const ImVec2* p1, const ImVec2* p2, const ImVec2* p3, const ImVec2* p4, unsigned int col, float thickness, int num_segments) {
	obj->AddBezierCubic(*p1, *p2, *p3, *p4, col, thickness, num_segments);
}
extern "C" void ImDrawList_AddBezierQuadratic__b82a27c2a901c507(ImDrawList* obj, const ImVec2* p1, const ImVec2* p2, const ImVec2* p3, unsigned int col, float thickness, int num_segments) {
	obj->AddBezierQuadratic(*p1, *p2, *p3, col, thickness, num_segments);
}
extern "C" void ImDrawList_AddPolyline__45bf13b6538ff203(ImDrawList* obj, const ImVec2* points, int num_points, unsigned int col, int flags, float thickness) {
	obj->AddPolyline(points, num_points, col, flags, thickness);
}
extern "C" void ImDrawList_AddConvexPolyFilled__50f1806a31e400a1(ImDrawList* obj, const ImVec2* points, int num_points, unsigned int col) {
	obj->AddConvexPolyFilled(points, num_points, col);
}
extern "C" void ImDrawList_AddConcavePolyFilled__26de669f15d5134f(ImDrawList* obj, const ImVec2* points, int num_points, unsigned int col) {
	obj->AddConcavePolyFilled(points, num_points, col);
}
extern "C" void ImDrawList_AddImage__dfc8a724ffe2e724(ImDrawList* obj, ImTextureRef tex_ref, const ImVec2* p_min, const ImVec2* p_max, const ImVec2* uv_min, const ImVec2* uv_max, unsigned int col) {
	obj->AddImage(tex_ref, *p_min, *p_max, *uv_min, *uv_max, col);
}
extern "C" void ImDrawList_AddImageQuad__e48b88c8548dfc9f(ImDrawList* obj, ImTextureRef tex_ref, const ImVec2* p1, const ImVec2* p2, const ImVec2* p3, const ImVec2* p4, const ImVec2* uv1, const ImVec2* uv2, const ImVec2* uv3, const ImVec2* uv4, unsigned int col) {
	obj->AddImageQuad(tex_ref, *p1, *p2, *p3, *p4, *uv1, *uv2, *uv3, *uv4, col);
}
extern "C" void ImDrawList_AddImageRounded__b271e30ebeb4124(ImDrawList* obj, ImTextureRef tex_ref, const ImVec2* p_min, const ImVec2* p_max, const ImVec2* uv_min, const ImVec2* uv_max, unsigned int col, float rounding, int flags) {
	obj->AddImageRounded(tex_ref, *p_min, *p_max, *uv_min, *uv_max, col, rounding, flags);
}
extern "C" void ImDrawList_PathClear__f85c24e187476a18(ImDrawList* obj) {
	obj->PathClear();
}
extern "C" void ImDrawList_PathLineTo__a3eb1bbbced23468(ImDrawList* obj, const ImVec2* pos) {
	obj->PathLineTo(*pos);
}
extern "C" void ImDrawList_PathLineToMergeDuplicate__420912c4ae0261ad(ImDrawList* obj, const ImVec2* pos) {
	obj->PathLineToMergeDuplicate(*pos);
}
extern "C" void ImDrawList_PathFillConvex__60de4288d08ae8f9(ImDrawList* obj, unsigned int col) {
	obj->PathFillConvex(col);
}
extern "C" void ImDrawList_PathFillConcave__8dc06ae958038bff(ImDrawList* obj, unsigned int col) {
	obj->PathFillConcave(col);
}
extern "C" void ImDrawList_PathStroke__1c1f8ad71ad46f79(ImDrawList* obj, unsigned int col, int flags, float thickness) {
	obj->PathStroke(col, flags, thickness);
}
extern "C" void ImDrawList_PathArcTo__f61fef08db50711(ImDrawList* obj, const ImVec2* center, float radius, float a_min, float a_max, int num_segments) {
	obj->PathArcTo(*center, radius, a_min, a_max, num_segments);
}
extern "C" void ImDrawList_PathArcToFast__56e6c5aa5aae1a0a(ImDrawList* obj, const ImVec2* center, float radius, int a_min_of_12, int a_max_of_12) {
	obj->PathArcToFast(*center, radius, a_min_of_12, a_max_of_12);
}
extern "C" void ImDrawList_PathEllipticalArcTo__2ee4731c43db7aae(ImDrawList* obj, const ImVec2* center, const ImVec2* radius, float rot, float a_min, float a_max, int num_segments) {
	obj->PathEllipticalArcTo(*center, *radius, rot, a_min, a_max, num_segments);
}
extern "C" void ImDrawList_PathBezierCubicCurveTo__eb1a9156bc6363c4(ImDrawList* obj, const ImVec2* p2, const ImVec2* p3, const ImVec2* p4, int num_segments) {
	obj->PathBezierCubicCurveTo(*p2, *p3, *p4, num_segments);
}
extern "C" void ImDrawList_PathBezierQuadraticCurveTo__f4b9cfdeeb8ca1f9(ImDrawList* obj, const ImVec2* p2, const ImVec2* p3, int num_segments) {
	obj->PathBezierQuadraticCurveTo(*p2, *p3, num_segments);
}
extern "C" void ImDrawList_PathRect__bafae6fef23b3e71(ImDrawList* obj, const ImVec2* rect_min, const ImVec2* rect_max, float rounding, int flags) {
	obj->PathRect(*rect_min, *rect_max, rounding, flags);
}
extern "C" void ImDrawList_AddCallback__384ad06fabe49141(ImDrawList* obj, void (*callback)(const ImDrawList*, const ImDrawCmd*), void* userdata, unsigned long long userdata_size) {
	obj->AddCallback(callback, userdata, userdata_size);
}
extern "C" void ImDrawList_AddDrawCmd__aba1aed43e859608(ImDrawList* obj) {
	obj->AddDrawCmd();
}
extern "C" ImDrawList* ImDrawList_CloneOutput__4ae38a3463568f9a(ImDrawList* obj) {
	return obj->CloneOutput();
}
extern "C" void ImDrawList_ChannelsSplit__8892b3949975d531(ImDrawList* obj, int count) {
	obj->ChannelsSplit(count);
}
extern "C" void ImDrawList_ChannelsMerge__f9a9c1166094cabb(ImDrawList* obj) {
	obj->ChannelsMerge();
}
extern "C" void ImDrawList_ChannelsSetCurrent__d3d0f6aa259ab7ea(ImDrawList* obj, int n) {
	obj->ChannelsSetCurrent(n);
}
extern "C" void ImDrawList_PrimReserve__342bc32e38b5b148(ImDrawList* obj, int idx_count, int vtx_count) {
	obj->PrimReserve(idx_count, vtx_count);
}
extern "C" void ImDrawList_PrimUnreserve__7b4e2ad3ea64f40c(ImDrawList* obj, int idx_count, int vtx_count) {
	obj->PrimUnreserve(idx_count, vtx_count);
}
extern "C" void ImDrawList_PrimRect__6e6ac6f0a4884db9(ImDrawList* obj, const ImVec2* a, const ImVec2* b, unsigned int col) {
	obj->PrimRect(*a, *b, col);
}
extern "C" void ImDrawList_PrimRectUV__a2a24ebfb07b94d(ImDrawList* obj, const ImVec2* a, const ImVec2* b, const ImVec2* uv_a, const ImVec2* uv_b, unsigned int col) {
	obj->PrimRectUV(*a, *b, *uv_a, *uv_b, col);
}
extern "C" void ImDrawList_PrimQuadUV__d30891eabc79e402(ImDrawList* obj, const ImVec2* a, const ImVec2* b, const ImVec2* c, const ImVec2* d, const ImVec2* uv_a, const ImVec2* uv_b, const ImVec2* uv_c, const ImVec2* uv_d, unsigned int col) {
	obj->PrimQuadUV(*a, *b, *c, *d, *uv_a, *uv_b, *uv_c, *uv_d, col);
}
extern "C" void ImDrawList_PrimWriteVtx__4ddfb364b0acdfc2(ImDrawList* obj, const ImVec2* pos, const ImVec2* uv, unsigned int col) {
	obj->PrimWriteVtx(*pos, *uv, col);
}
extern "C" void ImDrawList_PrimWriteIdx__e96ae86e45fcc1(ImDrawList* obj, unsigned short idx) {
	obj->PrimWriteIdx(idx);
}
extern "C" void ImDrawList_PrimVtx__b5461057807aa2ec(ImDrawList* obj, const ImVec2* pos, const ImVec2* uv, unsigned int col) {
	obj->PrimVtx(*pos, *uv, col);
}
extern "C" void ImDrawList_PushTextureID__b4da7632fc117bc7(ImDrawList* obj, ImTextureRef tex_ref) {
	obj->PushTextureID(tex_ref);
}
extern "C" void ImDrawList_PopTextureID__ea204785d1a1ac1(ImDrawList* obj) {
	obj->PopTextureID();
}
extern "C" void ImDrawList__SetDrawListSharedData__c6719a600b5e6741(ImDrawList* obj, ImDrawListSharedData* data) {
	obj->_SetDrawListSharedData(data);
}
extern "C" void ImDrawList__ResetForNewFrame__6578c0febac9b6a2(ImDrawList* obj) {
	obj->_ResetForNewFrame();
}
extern "C" void ImDrawList__ClearFreeMemory__74631181fcab4cbe(ImDrawList* obj) {
	obj->_ClearFreeMemory();
}
extern "C" void ImDrawList__PopUnusedDrawCmd__d01695a4d3c4ad81(ImDrawList* obj) {
	obj->_PopUnusedDrawCmd();
}
extern "C" void ImDrawList__TryMergeDrawCmds__c7a246b9449d011a(ImDrawList* obj) {
	obj->_TryMergeDrawCmds();
}
extern "C" void ImDrawList__OnChangedClipRect__1184a0576cdde196(ImDrawList* obj) {
	obj->_OnChangedClipRect();
}
extern "C" void ImDrawList__OnChangedTexture__ebfe4305f551877c(ImDrawList* obj) {
	obj->_OnChangedTexture();
}
extern "C" void ImDrawList__OnChangedVtxOffset__be1e0722a77784c(ImDrawList* obj) {
	obj->_OnChangedVtxOffset();
}
extern "C" void ImDrawList__SetTexture__80765940ec7a4f97(ImDrawList* obj, ImTextureRef tex_ref) {
	obj->_SetTexture(tex_ref);
}
extern "C" int ImDrawList__CalcCircleAutoSegmentCount__3b487c73f8294a71(ImDrawList* obj, float radius) {
	return obj->_CalcCircleAutoSegmentCount(radius);
}
extern "C" void ImDrawList__PathArcToFastEx__4f220b277b029cb2(ImDrawList* obj, const ImVec2* center, float radius, int a_min_sample, int a_max_sample, int a_step) {
	obj->_PathArcToFastEx(*center, radius, a_min_sample, a_max_sample, a_step);
}
extern "C" void ImDrawList__PathArcToN__10e351b328809a58(ImDrawList* obj, const ImVec2* center, float radius, float a_min, float a_max, int num_segments) {
	obj->_PathArcToN(*center, radius, a_min, a_max, num_segments);
}
extern "C" void ImDrawData_Clear__aa706db1ef8639b7(ImDrawData* obj) {
	obj->Clear();
}
extern "C" void ImDrawData_AddDrawList__f1ddaee64f9bd97(ImDrawData* obj, ImDrawList* draw_list) {
	obj->AddDrawList(draw_list);
}
extern "C" void ImDrawData_DeIndexAllBuffers__2c0a6f3ac0af9304(ImDrawData* obj) {
	obj->DeIndexAllBuffers();
}
extern "C" void ImDrawData_ScaleClipRects__3ea013827641bdac(ImDrawData* obj, const ImVec2* fb_scale) {
	obj->ScaleClipRects(*fb_scale);
}
extern "C" void ImTextureData_Create__6815f287f374b9b3(ImTextureData* obj, ImTextureFormat format, int w, int h) {
	obj->Create(format, w, h);
}
extern "C" void ImTextureData_DestroyPixels__c941557158aa1047(ImTextureData* obj) {
	obj->DestroyPixels();
}
extern "C" void* ImTextureData_GetPixels__a237168ecbc1c9f0(ImTextureData* obj) {
	return obj->GetPixels();
}
extern "C" void* ImTextureData_GetPixelsAt__9785fcad02c47c96(ImTextureData* obj, int x, int y) {
	return obj->GetPixelsAt(x, y);
}
extern "C" int ImTextureData_GetSizeInBytes__1b2566a4d974fd57(ImTextureData* obj) {
	return obj->GetSizeInBytes();
}
extern "C" int ImTextureData_GetPitch__a2a1e6e6bd09edc9(ImTextureData* obj) {
	return obj->GetPitch();
}
extern "C" void ImTextureData_GetTexRef__f44173af51e3f388(ImTextureData* obj, ImTextureRef* zpp_out) {
	*zpp_out = obj->GetTexRef();
}
extern "C" unsigned long long ImTextureData_GetTexID__d8dce782ceb9ab42(ImTextureData* obj) {
	return obj->GetTexID();
}
extern "C" void ImTextureData_SetTexID__f4b11e225aef7453(ImTextureData* obj, unsigned long long tex_id) {
	obj->SetTexID(tex_id);
}
extern "C" void ImTextureData_SetStatus__66df4c23e7a11b1f(ImTextureData* obj, ImTextureStatus status) {
	obj->SetStatus(status);
}
extern "C" void ImFontGlyphRangesBuilder_Clear__aa706db1ef8639b7(ImFontGlyphRangesBuilder* obj) {
	obj->Clear();
}
extern "C" bool ImFontGlyphRangesBuilder_GetBit__8a77afa12d71618b(ImFontGlyphRangesBuilder* obj, unsigned long long n) {
	return obj->GetBit(n);
}
extern "C" void ImFontGlyphRangesBuilder_SetBit__3f56b5396afc37ca(ImFontGlyphRangesBuilder* obj, unsigned long long n) {
	obj->SetBit(n);
}
extern "C" void ImFontGlyphRangesBuilder_AddChar__43116d7c072a6a00(ImFontGlyphRangesBuilder* obj, unsigned short c) {
	obj->AddChar(c);
}
extern "C" void ImFontGlyphRangesBuilder_AddText__848482798a5dab73(ImFontGlyphRangesBuilder* obj, const char* text, const char* text_end) {
	obj->AddText(text, text_end);
}
extern "C" void ImFontGlyphRangesBuilder_AddRanges__76ae0d6674abb19(ImFontGlyphRangesBuilder* obj, const unsigned short* ranges) {
	obj->AddRanges(ranges);
}
extern "C" void ImFontGlyphRangesBuilder_BuildRanges__dad8a4bc05e6f61d(ImFontGlyphRangesBuilder* obj, ImVector<unsigned short>* out_ranges) {
	obj->BuildRanges(out_ranges);
}
extern "C" ImFont* ImFontAtlas_AddFont__3504dfb7a2b8f1ce(ImFontAtlas* obj, const ImFontConfig* font_cfg) {
	return obj->AddFont(font_cfg);
}
extern "C" ImFont* ImFontAtlas_AddFontDefault__aa92a749b610b67d(ImFontAtlas* obj, const ImFontConfig* font_cfg) {
	return obj->AddFontDefault(font_cfg);
}
extern "C" ImFont* ImFontAtlas_AddFontFromFileTTF__bfc044645789c44c(ImFontAtlas* obj, const char* filename, float size_pixels, const ImFontConfig* font_cfg, const unsigned short* glyph_ranges) {
	return obj->AddFontFromFileTTF(filename, size_pixels, font_cfg, glyph_ranges);
}
extern "C" ImFont* ImFontAtlas_AddFontFromMemoryTTF__417f5fe6bb858e97(ImFontAtlas* obj, void* font_data, int font_data_size, float size_pixels, const ImFontConfig* font_cfg, const unsigned short* glyph_ranges) {
	return obj->AddFontFromMemoryTTF(font_data, font_data_size, size_pixels, font_cfg, glyph_ranges);
}
extern "C" ImFont* ImFontAtlas_AddFontFromMemoryCompressedTTF__b28bc709bb2c19ff(ImFontAtlas* obj, const void* compressed_font_data, int compressed_font_data_size, float size_pixels, const ImFontConfig* font_cfg, const unsigned short* glyph_ranges) {
	return obj->AddFontFromMemoryCompressedTTF(compressed_font_data, compressed_font_data_size, size_pixels, font_cfg, glyph_ranges);
}
extern "C" ImFont* ImFontAtlas_AddFontFromMemoryCompressedBase85TTF__94ebacf315467c47(ImFontAtlas* obj, const char* compressed_font_data_base85, float size_pixels, const ImFontConfig* font_cfg, const unsigned short* glyph_ranges) {
	return obj->AddFontFromMemoryCompressedBase85TTF(compressed_font_data_base85, size_pixels, font_cfg, glyph_ranges);
}
extern "C" void ImFontAtlas_RemoveFont__28dd557238a59589(ImFontAtlas* obj, ImFont* font) {
	obj->RemoveFont(font);
}
extern "C" void ImFontAtlas_Clear__aa706db1ef8639b7(ImFontAtlas* obj) {
	obj->Clear();
}
extern "C" void ImFontAtlas_CompactCache__df8f6899c763d1af(ImFontAtlas* obj) {
	obj->CompactCache();
}
extern "C" void ImFontAtlas_SetFontLoader__e1ba4f3b5cc35623(ImFontAtlas* obj, const ImFontLoader* font_loader) {
	obj->SetFontLoader(font_loader);
}
extern "C" void ImFontAtlas_ClearInputData__5abe8253f6c3fbe8(ImFontAtlas* obj) {
	obj->ClearInputData();
}
extern "C" void ImFontAtlas_ClearFonts__3235ca9b50cf3a32(ImFontAtlas* obj) {
	obj->ClearFonts();
}
extern "C" void ImFontAtlas_ClearTexData__93855d5a25041cc1(ImFontAtlas* obj) {
	obj->ClearTexData();
}
extern "C" bool ImFontAtlas_Build__de679d4a386ff4fc(ImFontAtlas* obj) {
	return obj->Build();
}
extern "C" void ImFontAtlas_GetTexDataAsAlpha8__61a6bc7f293381c(ImFontAtlas* obj, unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel) {
	obj->GetTexDataAsAlpha8(out_pixels, out_width, out_height, out_bytes_per_pixel);
}
extern "C" void ImFontAtlas_GetTexDataAsRGBA32__11f26cb7ebc7f93d(ImFontAtlas* obj, unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel) {
	obj->GetTexDataAsRGBA32(out_pixels, out_width, out_height, out_bytes_per_pixel);
}
extern "C" void ImFontAtlas_SetTexID__f4b11e225aef7453(ImFontAtlas* obj, unsigned long long id) {
	obj->SetTexID(id);
}
extern "C" void ImFontAtlas_SetTexID__f4b11e225aef7453_1(ImFontAtlas* obj, ImTextureRef id) {
	obj->SetTexID(id);
}
extern "C" bool ImFontAtlas_IsBuilt__abe08410d1b1d7f5(ImFontAtlas* obj) {
	return obj->IsBuilt();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesDefault__f405bd87eb41c95d(ImFontAtlas* obj) {
	return obj->GetGlyphRangesDefault();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesGreek__45cb3bc65122d76c(ImFontAtlas* obj) {
	return obj->GetGlyphRangesGreek();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesKorean__1caf6cf050c754c7(ImFontAtlas* obj) {
	return obj->GetGlyphRangesKorean();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesJapanese__214f718fd2dc6b63(ImFontAtlas* obj) {
	return obj->GetGlyphRangesJapanese();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesChineseFull__3d19063db60bc499(ImFontAtlas* obj) {
	return obj->GetGlyphRangesChineseFull();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon__b3ee7c42e19351df(ImFontAtlas* obj) {
	return obj->GetGlyphRangesChineseSimplifiedCommon();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesCyrillic__b322855bbe15bc3f(ImFontAtlas* obj) {
	return obj->GetGlyphRangesCyrillic();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesThai__3c455ea1eade49a2(ImFontAtlas* obj) {
	return obj->GetGlyphRangesThai();
}
extern "C" const unsigned short* ImFontAtlas_GetGlyphRangesVietnamese__af48f69f6994ef9e(ImFontAtlas* obj) {
	return obj->GetGlyphRangesVietnamese();
}
extern "C" int ImFontAtlas_AddCustomRect__569870caf69a189d(ImFontAtlas* obj, int width, int height, ImFontAtlasRect* out_r) {
	return obj->AddCustomRect(width, height, out_r);
}
extern "C" void ImFontAtlas_RemoveCustomRect__77a5657dbf9966f9(ImFontAtlas* obj, int id) {
	obj->RemoveCustomRect(id);
}
extern "C" bool ImFontAtlas_GetCustomRect__30c59bb437482c0b(ImFontAtlas* obj, int id, ImFontAtlasRect* out_r) {
	return obj->GetCustomRect(id, out_r);
}
extern "C" int ImFontAtlas_AddCustomRectRegular__8ceed3824b4618b4(ImFontAtlas* obj, int w, int h) {
	return obj->AddCustomRectRegular(w, h);
}
extern "C" const ImFontAtlasRect* ImFontAtlas_GetCustomRectByIndex__799892f980a7c7c2(ImFontAtlas* obj, int id) {
	return obj->GetCustomRectByIndex(id);
}
extern "C" void ImFontAtlas_CalcCustomRectUV__165ff4e66316c75a(ImFontAtlas* obj, const ImFontAtlasRect* r, ImVec2* out_uv_min, ImVec2* out_uv_max) {
	obj->CalcCustomRectUV(r, out_uv_min, out_uv_max);
}
extern "C" int ImFontAtlas_AddCustomRectFontGlyph__993cdb411105bca1(ImFontAtlas* obj, ImFont* font, unsigned short codepoint, int w, int h, float advance_x, const ImVec2* offset) {
	return obj->AddCustomRectFontGlyph(font, codepoint, w, h, advance_x, *offset);
}
extern "C" int ImFontAtlas_AddCustomRectFontGlyphForSize__cff8b5cf22ca7a84(ImFontAtlas* obj, ImFont* font, float font_size, unsigned short codepoint, int w, int h, float advance_x, const ImVec2* offset) {
	return obj->AddCustomRectFontGlyphForSize(font, font_size, codepoint, w, h, advance_x, *offset);
}
extern "C" void ImFontBaked_ClearOutputData__68964c7b491f8bee(ImFontBaked* obj) {
	obj->ClearOutputData();
}
extern "C" ImFontGlyph* ImFontBaked_FindGlyph__99ad9972a05dcf82(ImFontBaked* obj, unsigned short c) {
	return obj->FindGlyph(c);
}
extern "C" ImFontGlyph* ImFontBaked_FindGlyphNoFallback__abc53cb078c6bebb(ImFontBaked* obj, unsigned short c) {
	return obj->FindGlyphNoFallback(c);
}
extern "C" float ImFontBaked_GetCharAdvance__cc516c0cddc23e9d(ImFontBaked* obj, unsigned short c) {
	return obj->GetCharAdvance(c);
}
extern "C" bool ImFontBaked_IsGlyphLoaded__f6f5f37ce6143357(ImFontBaked* obj, unsigned short c) {
	return obj->IsGlyphLoaded(c);
}
extern "C" bool ImFont_IsGlyphInFont__b652ed393d46a31(ImFont* obj, unsigned short c) {
	return obj->IsGlyphInFont(c);
}
extern "C" bool ImFont_IsLoaded__de633d6ebf5022a6(ImFont* obj) {
	return obj->IsLoaded();
}
extern "C" const char* ImFont_GetDebugName__ca8cbd11364d9628(ImFont* obj) {
	return obj->GetDebugName();
}
extern "C" ImFontBaked* ImFont_GetFontBaked__3f06989c0a78b9d3(ImFont* obj, float font_size, float density) {
	return obj->GetFontBaked(font_size, density);
}
extern "C" void ImFont_CalcTextSizeA__e01ae6cd65e15255(ImFont* obj, float size, float max_width, float wrap_width, const char* text_begin, const char* text_end, const char** remaining, ImVec2* zpp_out) {
	*zpp_out = obj->CalcTextSizeA(size, max_width, wrap_width, text_begin, text_end, remaining);
}
extern "C" const char* ImFont_CalcWordWrapPosition__d3b860bc05d518f(ImFont* obj, float size, const char* text, const char* text_end, float wrap_width) {
	return obj->CalcWordWrapPosition(size, text, text_end, wrap_width);
}
extern "C" void ImFont_RenderChar__268664220e0c2b9d(ImFont* obj, ImDrawList* draw_list, float size, const ImVec2* pos, unsigned int col, unsigned short c, const ImVec4* cpu_fine_clip) {
	obj->RenderChar(draw_list, size, *pos, col, c, cpu_fine_clip);
}
extern "C" void ImFont_RenderText__2f7284397a11bb8b(ImFont* obj, ImDrawList* draw_list, float size, const ImVec2* pos, unsigned int col, const ImVec4* clip_rect, const char* text_begin, const char* text_end, float wrap_width, bool cpu_fine_clip) {
	obj->RenderText(draw_list, size, *pos, col, *clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip);
}
extern "C" const char* ImFont_CalcWordWrapPositionA__727eaee323664d2e(ImFont* obj, float scale, const char* text, const char* text_end, float wrap_width) {
	return obj->CalcWordWrapPositionA(scale, text, text_end, wrap_width);
}
extern "C" void ImFont_ClearOutputData__68964c7b491f8bee(ImFont* obj) {
	obj->ClearOutputData();
}
extern "C" void ImFont_AddRemapChar__3a1c2b108bd2e780(ImFont* obj, unsigned short from_codepoint, unsigned short to_codepoint) {
	obj->AddRemapChar(from_codepoint, to_codepoint);
}
extern "C" bool ImFont_IsGlyphRangeUnused__9167c1a8dba68c5d(ImFont* obj, unsigned int c_begin, unsigned int c_last) {
	return obj->IsGlyphRangeUnused(c_begin, c_last);
}
extern "C" void ImGuiViewport_GetCenter__44e6a1ebdf9ac158(ImGuiViewport* obj, ImVec2* zpp_out) {
	*zpp_out = obj->GetCenter();
}
extern "C" void ImGuiViewport_GetWorkCenter__2b750b38a4cf3594(ImGuiViewport* obj, ImVec2* zpp_out) {
	*zpp_out = obj->GetWorkCenter();
}
extern "C" bool ImGui_ImplSDL3_InitForOpenGL__e99e10970d5cd092(SDL_Window* window, void* sdl_gl_context) {
	return ImGui_ImplSDL3_InitForOpenGL(window, sdl_gl_context);
}
extern "C" bool ImGui_ImplSDL3_InitForVulkan__f6f607e2e54fad4(SDL_Window* window) {
	return ImGui_ImplSDL3_InitForVulkan(window);
}
extern "C" bool ImGui_ImplSDL3_InitForD3D__171ea32c74c97ab6(SDL_Window* window) {
	return ImGui_ImplSDL3_InitForD3D(window);
}
extern "C" bool ImGui_ImplSDL3_InitForMetal__766cb8e4cdd4302d(SDL_Window* window) {
	return ImGui_ImplSDL3_InitForMetal(window);
}
extern "C" bool ImGui_ImplSDL3_InitForSDLRenderer__9b020ae04454e2d4(SDL_Window* window, SDL_Renderer* renderer) {
	return ImGui_ImplSDL3_InitForSDLRenderer(window, renderer);
}
extern "C" bool ImGui_ImplSDL3_InitForSDLGPU__6a38996488306ede(SDL_Window* window) {
	return ImGui_ImplSDL3_InitForSDLGPU(window);
}
extern "C" bool ImGui_ImplSDL3_InitForOther__8558682120ecae20(SDL_Window* window) {
	return ImGui_ImplSDL3_InitForOther(window);
}
extern "C" void ImGui_ImplSDL3_Shutdown__2014beadd6c0478c() {
	ImGui_ImplSDL3_Shutdown();
}
extern "C" void ImGui_ImplSDL3_NewFrame__37c6d7cd43a25335() {
	ImGui_ImplSDL3_NewFrame();
}
extern "C" bool ImGui_ImplSDL3_ProcessEvent__decfc6687eb97b8e(const SDL_Event* event) {
	return ImGui_ImplSDL3_ProcessEvent(event);
}
extern "C" void ImGui_ImplSDL3_SetGamepadMode__188716f97529355a(ImGui_ImplSDL3_GamepadMode mode, SDL_Gamepad** manual_gamepads_array, int manual_gamepads_count) {
	ImGui_ImplSDL3_SetGamepadMode(mode, manual_gamepads_array, manual_gamepads_count);
}
extern "C" bool ImGui_ImplSDLGPU3_Init__600d26a5acf96a01(ImGui_ImplSDLGPU3_InitInfo* info) {
	return ImGui_ImplSDLGPU3_Init(info);
}
extern "C" void ImGui_ImplSDLGPU3_Shutdown__13b42b5729a15b3() {
	ImGui_ImplSDLGPU3_Shutdown();
}
extern "C" void ImGui_ImplSDLGPU3_NewFrame__65431eefe517df84() {
	ImGui_ImplSDLGPU3_NewFrame();
}
extern "C" void ImGui_ImplSDLGPU3_PrepareDrawData__93ec289e13d03601(ImDrawData* draw_data, SDL_GPUCommandBuffer* command_buffer) {
	ImGui_ImplSDLGPU3_PrepareDrawData(draw_data, command_buffer);
}
extern "C" void ImGui_ImplSDLGPU3_RenderDrawData__ed2e5ca6ef1b8528(ImDrawData* draw_data, SDL_GPUCommandBuffer* command_buffer, SDL_GPURenderPass* render_pass, SDL_GPUGraphicsPipeline* pipeline) {
	ImGui_ImplSDLGPU3_RenderDrawData(draw_data, command_buffer, render_pass, pipeline);
}
extern "C" void ImGui_ImplSDLGPU3_CreateDeviceObjects__cf36dd3e42e64808() {
	ImGui_ImplSDLGPU3_CreateDeviceObjects();
}
extern "C" void ImGui_ImplSDLGPU3_DestroyDeviceObjects__98dcec2c614f2c1d() {
	ImGui_ImplSDLGPU3_DestroyDeviceObjects();
}
extern "C" void ImGui_ImplSDLGPU3_UpdateTexture__b3f7221cb5fb8d7(ImTextureData* tex) {
	ImGui_ImplSDLGPU3_UpdateTexture(tex);
}

#pragma clang diagnostic pop